Cadence Genus(TM) Synthesis Solution.
Copyright 2019 Cadence Design Systems, Inc. All rights reserved worldwide.
Cadence and the Cadence logo are registered trademarks and Genus is a trademark
of Cadence Design Systems, Inc. in the United States and other countries.

Version: 19.11-s087_1, built Mon Aug 12 23:18:07 PDT 2019
Options: 
Date:    Thu Sep 19 19:21:39 2024
Host:    Entuple-Client-2 (x86_64 w/Linux 3.10.0-1160.31.1.el7.x86_64) (2cores*4cpus*1physical cpu*AMD EPYC 7571 512KB) (16120816KB)
PID:     15620
OS:      Red Hat Enterprise Linux Server release 7.9 (Maipo)

Checking out license: Genus_Synthesis

Loading tool scripts...

Finished loading tool scripts (11 seconds elapsed).

WARNING: This version of the tool is 1864 days old.
@genus:root: 1> read_lib /StudentData/student35/Desktop/Rudra/ext/slow.lib

Threads Configured:3

  Message Summary for Library slow.lib:
  *************************************
  Could not find an attribute in the library. [LBR-436]: 569
  Missing a function attribute in the output pin definition. [LBR-518]: 1
  Missing library level attribute. [LBR-516]: 1
  *************************************
 
Info    : Created nominal operating condition. [LBR-412]
        : Operating condition '_nominal_' was created for the PVT values (1.000000, 1.080000, 125.000000) in library 'slow.lib'.
        : The nominal operating condition is represented, either by the nominal PVT values specified in the library source (via nom_process,nom_voltage and nom_temperature respectively), or by the default PVT values (1.0,1.0,1.0).
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/ADDFHX2'.
        : Specify a valid area value for the libcell.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/ADDFHX4'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/ADDFHXL'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/ADDFXL'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/ADDHX2'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/ADDHXL'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/AND2X4'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/AND2X6'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/AND2XL'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/AND3X1'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/AND3X8'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/AND3XL'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/AND4X1'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/AND4X4'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/AND4X8'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/AND4XL'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/AO21X1'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/AO21X2'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/AO21XL'.
Warning : Libcell has no area attribute.  Defaulting to 0 area. [LBR-43]
        : Assigning 0 area to library cell 'gpdk045bc/AO22X1'.
@genus:root: 2> read_hdl GCD.v
@genus:root: 3> elaborate
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_E_Ha0' between pins 'CK' and 'E' in libcell 'TLATNCAX12' is a sequential timing arc.
        : The library cell will be treated as a timing-model. Make sure that the timing arcs and output function are defined correctly. Even if the cell intends to have dual-functionality, it cannot be unmapped or automatically inferred.
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_E_Ha0' between pins 'CK' and 'E' in libcell 'TLATNCAX2' is a sequential timing arc.
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_E_Ha0' between pins 'CK' and 'E' in libcell 'TLATNCAX20' is a sequential timing arc.
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_E_Ha0' between pins 'CK' and 'E' in libcell 'TLATNCAX6' is a sequential timing arc.
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_SE_Ha3' between pins 'CK' and 'SE' in libcell 'TLATNTSCAX16' is a sequential timing arc.
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_SE_Ha3' between pins 'CK' and 'SE' in libcell 'TLATNTSCAX4' is a sequential timing arc.
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_SE_Ha3' between pins 'CK' and 'SE' in libcell 'TLATNTSCAX8' is a sequential timing arc.
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_E_Ha0' between pins 'CK' and 'E' in libcell 'TLATNCAX16' is a sequential timing arc.
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_SE_Ha3' between pins 'CK' and 'SE' in libcell 'TLATNTSCAX12' is a sequential timing arc.
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_SE_Ha3' between pins 'CK' and 'SE' in libcell 'TLATNTSCAX2' is a sequential timing arc.
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_SE_Ha3' between pins 'CK' and 'SE' in libcell 'TLATNTSCAX20' is a sequential timing arc.
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_SE_Ha3' between pins 'CK' and 'SE' in libcell 'TLATNTSCAX6' is a sequential timing arc.
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_E_Ha0' between pins 'CK' and 'E' in libcell 'TLATNCAX4' is a sequential timing arc.
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_E_Ha0' between pins 'CK' and 'E' in libcell 'TLATNCAX3' is a sequential timing arc.
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_E_Ha0' between pins 'CK' and 'E' in libcell 'TLATNCAX8' is a sequential timing arc.
Warning : Detected both combinational and sequential timing arcs in a library cell. This might prevent the tool from using this cell for technology mapping. The tool will treat it as unusable. [LBR-76]
        : The arc 'CK_SE_Ha3' between pins 'CK' and 'SE' in libcell 'TLATNTSCAX3' is a sequential timing arc.
  Library has 291 usable logic and 126 usable sequential lib-cells.
Info    : Elaborating Design. [ELAB-1]
        : Elaborating top-level block 'GCD' from file 'GCD.v'.
Warning : Unreachable statements for case item. [CDFG-472]
        : Case item 'default' in module 'controller' in file 'GCD.v' on line 71.
Warning : Unreachable statements for case item. [CDFG-472]
        : Case item 'default' in module 'controller' in file 'GCD.v' on line 102.
Info    : Done Elaborating Design. [ELAB-3]
        : Done elaborating 'GCD'.
Checking for analog nets...
Check completed for analog nets.
Checking for source RTL...
Check completed for source RTL.
UM:   timing.setup.tns  timing.setup.wns  snapshot
UM:*                                      elaborate
design:GCD
@genus:root: 4> create_clock -name clk period 2
Error   : A required object parameter could not be found. [TUI-61] [parse_options]
        : An object of type 'port|pin|hpin' named 'period' could not be found.
        : Check to make sure that the object exists and is of the correct type.  The 'what_is' command can be used to determine the type of an object.

Usage: create_clock [-add] [-name <string>] [-comment <string>]
           [-domain <string>] -period <float> [-waveform <float>+]
           [-apply_inverted <port|pin|hpin>+] [<port|pin|hpin>+]

    [-add]:
        should the sources add or overwrite 
    [-name <string>]:
        name of the clock 
    [-comment <string>]:
        comment to be tagged with this command 
    [-domain <string>]:
        name of the clock domain for the clock 
    -period <float>:
        clock period 
    [-waveform <float>+]:
        waveform string 
    [-apply_inverted <port|pin|hpin>+]:
        sources of the clock that are inverted 
    [<port|pin|hpin>+]:
        sources that are not inverted 
@genus:root: 5> create_clock -name clk -period 2
@genus:root: 6> set_clock_transition -rise 0.01 [get_clocks "clk"]
@genus:root: 7> set_clock_transition -fall 0.01 [get_clocks "clk"]
@genus:root: 8> set_clock_uncertainty 0.05 [get_clocks "clk"]
@genus:root: 9> set_input_delay -max 1.0 [get_clocks "clk"]
Error   : A required object parameter could not be found. [TUI-61] [parse_options]
        : An object of type 'port|pin|hpin|port_bus' named '0x4' could not be found.

Usage: set_input_delay [-clock <clock>] [-clock_rise] [-clock_fall]
           [-level_sensitive] [-network_latency_included]
           [-source_latency_included] [-max] [-min] [-rise] [-fall]
           [-reference_pin <pin|port>] [-add_delay] [-name <string>]
           [-group_path <string>] <float> <port|pin|hpin|port_bus>+

    [-clock <clock>]:
        the clock waveform 
    [-clock_rise]:
        rise clock edge 
    [-clock_fall]:
        fall clock edge 
    [-level_sensitive]:
        clocked obj is a latch 
    [-network_latency_included]:
        value includes clock latency 
    [-source_latency_included]:
        value includes clock latency 
    [-max]:
        maximum delays 
    [-min]:
        minimum delays 
    [-rise]:
        rise delays 
    [-fall]:
        fall delays 
    [-reference_pin <pin|port>]:
        reference pin for this external delay 
    [-add_delay]:
        do not remove existing delays 
    [-name <string>]:
        a name for the external delay object 
    [-group_path <string>]:
        the group name where paths ending at the specified ports or pins are to 
        be added 
    <float>:
        delay value 
    <port|pin|hpin|port_bus>+:
        ports to receive the external delay 
@genus:root: 10> set_input_delay -max 1.0
Error   : A required argument was not specified. [TUI-202] [parse_options]
        : An argument of type '<port|pin|hpin|port_bus>+' was not specified.
        : Rerun the command specifying all required arguments.

Usage: set_input_delay [-clock <clock>] [-clock_rise] [-clock_fall]
           [-level_sensitive] [-network_latency_included]
           [-source_latency_included] [-max] [-min] [-rise] [-fall]
           [-reference_pin <pin|port>] [-add_delay] [-name <string>]
           [-group_path <string>] <float> <port|pin|hpin|port_bus>+

    [-clock <clock>]:
        the clock waveform 
    [-clock_rise]:
        rise clock edge 
    [-clock_fall]:
        fall clock edge 
    [-level_sensitive]:
        clocked obj is a latch 
    [-network_latency_included]:
        value includes clock latency 
    [-source_latency_included]:
        value includes clock latency 
    [-max]:
        maximum delays 
    [-min]:
        minimum delays 
    [-rise]:
        rise delays 
    [-fall]:
        fall delays 
    [-reference_pin <pin|port>]:
        reference pin for this external delay 
    [-add_delay]:
        do not remove existing delays 
    [-name <string>]:
        a name for the external delay object 
    [-group_path <string>]:
        the group name where paths ending at the specified ports or pins are to 
        be added 
    <float>:
        delay value 
    <port|pin|hpin|port_bus>+:
        ports to receive the external delay 
@genus:root: 11> syn_generic
Info    : Deleting instances not driving any primary outputs. [GLO-34]
        : Deleting 4 hierarchical instances.
        : Optimizations such as constant propagation or redundancy removal could change the connections so a hierarchical instance does not drive any primary outputs anymore. To see the list of deleted hierarchical instances, set the 'information_level' attribute to 2 or above. If the message is truncated set the message attribute 'truncate' to false to see the complete list. To prevent this optimization, set the 'delete_unloaded_insts' root/subdesign attribute to 'false' or 'preserve' instance attribute to 'true'.
Info    : Synthesizing. [SYNTH-1]
        : Synthesizing 'GCD' to generic gates using 'medium' effort.
PBS_Generic-Start - Elapsed_Time 0, CPU_Time 0.0
stamp 'PBS_Generic-Start' being created for table 'pbs_debug'

  Total Time (Wall) |  Stage Time (Wall)  |   % (Wall)   |    Date - Time     |  Memory   | Stage
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:23(00:04:52) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:37 (Sep19) |  231.4 MB | PBS_Generic-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
Number of threads: 8 * 1   (id: pbs_debug, time_info v1.57)
Info: (*N*) indicates data that was populated from previously saved time_info database
Info: CPU time includes time of parent + longest thread
TNS Restructuring config:  at stage: generic applied.
Info    : Partition Based Synthesis execution skipped. [PHYS-752]
        : Design size is less than the partition size '100000' for distributed generic optimization to kick in.
Starting mux data reorder optimization [v1.0] (stage: post_to_gen_setup, startdef: GCD, recur: true)
Completed mux data reorder optimization (accepts: 0, rejects: 0, runtime: 0.004s)
Starting reconvergence optimization [v1.0] (stage: pre_rtlopt, startdef: GCD, recur: true)
Completed reconvergence optimization (accepts: 0, rejects: 0, runtime: 0.003s)
Starting logic restructure optimization [v1.0] (stage: pre_rtlopt, startdef: GCD, recur: true)
Completed logic restructure optimization (accepts: 0, rejects: 0, runtime: 0.003s)
Info    : Pre-processed datapath logic. [DPOPT-6]
        : Pre-processing optimizations applied to datapath logic in 'GCD':
          sop(1) 
Info    : Optimizing datapath logic. [DPOPT-1]
        : Optimizing datapath logic in 'GCD'.
Info    : Implementing datapath configurations. [DPOPT-3]
        : Implementing datapath configurations for 'CDN_DP_region_24'
Info    : Done implementing datapath configurations. [DPOPT-4]
        : Selected 'very_fast' configuration 5 for module 'CDN_DP_region_24'.
          Optimizations applied to 'very_fast' configuration:
            rewriting(0), factoring(0), sharing(0), cmultcse(0), downsizing(0), speculation(0)
Info    : Implementing datapath configurations. [DPOPT-3]
        : Implementing datapath configurations for 'CDN_DP_region'
Info    : Done implementing datapath configurations. [DPOPT-4]
        : Selected 'very_fast' configuration 5 for module 'CDN_DP_region'.
          Optimizations applied to 'very_fast' configuration:
            rewriting(0), factoring(0), sharing(0), cmultcse(0), downsizing(0), speculation(0)
Info    : Done optimizing datapath logic. [DPOPT-2]
        : Done optimizing datapath logic in 'GCD'.
Starting mux data reorder optimization [v1.0] (stage: post_rtlopt, startdef: GCD, recur: true)
Completed mux data reorder optimization (accepts: 0, rejects: 0, runtime: 0.005s)
Starting mux speculation [v1.0] (stage: post_muxopt, startdef: GCD, recur: true)
Starting speculation optimization
Completed speculation optimization (accepts:0)
Completed mux speculation (accepts: 0, rejects: 0, runtime: 0.063s)
==================================
Stage : to_generic 
==================================
  =================
   Message Summary
  =================
----------------------------------------------------------------------------------------------------------------
|     Id     |  Sev   |Count |                                  Message Text                                   |
----------------------------------------------------------------------------------------------------------------
| CDFG-361   |Info    |    4 |Signal is not referenced within the process or block, but is in the sensitivity  |
|            |        |      | list.                                                                           |
|            |        |      |Asynchronous logic, such as a latch or combinational logic, is inferred for this |
|            |        |      | process or block. Signals that are not referenced can be removed from the       |
|            |        |      | sensitivity list. If the intent is to infer a flip-flop, ensure that the        |
|            |        |      | process or block is sensitive to the signal edge by adding 'posedge' or         |
|            |        |      | 'negedge' for Verilog designs or 'event' for VHDL designs.                      |
| CDFG-372   |Info    |   48 |Bitwidth mismatch in assignment.                                                 |
|            |        |      |Review and make sure the mismatch is unintentional. Genus can possibly issue     |
|            |        |      | bitwidth mismatch warning for explicit assignments present in RTL as-well-as    |
|            |        |      | for implicit assignments inferred by the tool. For example, in case of enum     |
|            |        |      | declaration without value, the tool will implicitly assign value to the enum    |
|            |        |      | variables. It also issues the warning for any bitwidth mismatch that appears in |
|            |        |      | this implicit assignment.                                                       |
| CDFG-472   |Warning |    2 |Unreachable statements for case item.                                            |
| CDFG-769   |Info    |    1 |Identified sum-of-products logic to be optimized during syn_generic.             |
| CDFG2G-616 |Info    |    1 |Latch inferred. Check and revisit your RTL if this is not the intended behavior. |
|            |        |      |Use the attributes 'set_attribute hdl_error_on_latch true'(LUI)                  |
|            |        |      | or 'set_db hdl_error_on_latch true' (CUI)                                       |
|            |        |      | to issue an error when a latch is inferred. Use the attributes 'set_attributes  |
|            |        |      | hdl_latch_keep_feedback true'(LUI)                                              |
|            |        |      | or 'set_db hdl_latch_keep_feedback true'(CUI)                                   |
|            |        |      | to infer combinational logic rather than a latch in case a variable is          |
|            |        |      | explicitly assigned to itself.                                                  |
| CWD-19     |Info    |   13 |An implementation was inferred.                                                  |
| DPOPT-1    |Info    |    1 |Optimizing datapath logic.                                                       |
| DPOPT-2    |Info    |    1 |Done optimizing datapath logic.                                                  |
| DPOPT-3    |Info    |    2 |Implementing datapath configurations.                                            |
| DPOPT-4    |Info    |    2 |Done implementing datapath configurations.                                       |
| DPOPT-6    |Info    |    1 |Pre-processed datapath logic.                                                    |
| ELAB-1     |Info    |    1 |Elaborating Design.                                                              |
| ELAB-2     |Info    |    6 |Elaborating Subdesign.                                                           |
| ELAB-3     |Info    |    1 |Done Elaborating Design.                                                         |
| GLO-34     |Info    |    1 |Deleting instances not driving any primary outputs.                              |
|            |        |      |Optimizations such as constant propagation or redundancy removal could change    |
|            |        |      | the connections so a hierarchical instance does not drive any primary outputs   |
|            |        |      | anymore. To see the list of deleted hierarchical instances, set the             |
|            |        |      | 'information_level' attribute to 2 or above. If the message is truncated set    |
|            |        |      | the message attribute 'truncate' to false to see the complete list. To prevent  |
|            |        |      | this optimization, set the 'delete_unloaded_insts' root/subdesign attribute to  |
|            |        |      | 'false' or 'preserve' instance attribute to 'true'.                             |
| GLO-51     |Info    |    4 |Hierarchical instance automatically ungrouped.                                   |
|            |        |      |Hierarchical instances can be automatically ungrouped to allow for better area   |
|            |        |      | or timing optimization. To prevent this ungroup, set the root-level attribute   |
|            |        |      | 'auto_ungroup' to 'none'. You can also prevent individual ungroup with setting  |
|            |        |      | the attribute 'ungroup_ok' of instances or modules to 'false'.                  |
| LBR-155    |Info    |  248 |Mismatch in unateness between 'timing_sense' attribute and the function.         |
|            |        |      |The 'timing_sense' attribute will be respected.                                  |
| LBR-161    |Info    |    1 |Setting the maximum print count of this message to 10 if information_level is    |
|            |        |      | less than 9.                                                                    |
| LBR-162    |Info    |  124 |Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed.          |
|            |        |      |Setting the 'timing_sense' to non_unate.                                         |
| LBR-170    |Info    |   64 |Ignoring specified timing sense.                                                 |
|            |        |      |Timing sense should never be set with 'rising_edge' or 'falling_edge' timing     |
|            |        |      | type.                                                                           |
| LBR-41     |Info    |    1 |An output library pin lacks a function attribute.                                |
|            |        |      |If the remainder of this library cell's semantic checks are successful, it will  |
|            |        |      | be considered as a timing-model                                                 |
|            |        |      | (because one of its outputs does not have a valid function.                     |
| LBR-412    |Info    |    1 |Created nominal operating condition.                                             |
|            |        |      |The nominal operating condition is represented, either by the nominal PVT values |
|            |        |      | specified in the library source                                                 |
|            |        |      | (via nom_process,nom_voltage and nom_temperature respectively)                  |
|            |        |      | , or by the default PVT values (1.0,1.0,1.0).                                   |
| LBR-43     |Warning |  485 |Libcell has no area attribute.  Defaulting to 0 area.                            |
|            |        |      |Specify a valid area value for the libcell.                                      |
| LBR-436    |Info    |  569 |Could not find an attribute in the library.                                      |
|            |        |      |It is recommended to have max_fanout attribute on the standard cell output pins. |
|            |        |      | If this information is not present in .lib, then this message is issued. If you |
|            |        |      | encounter any lib cells having output pins without max_fanout attribute, then   |
|            |        |      | you can specify their attribute using 'set_max_fanout' command.                 |
| LBR-516    |Info    |    1 |Missing library level attribute.                                                 |
| LBR-518    |Info    |    1 |Missing a function attribute in the output pin definition.                       |
| LBR-76     |Warning |   16 |Detected both combinational and sequential timing arcs in a library cell. This   |
|            |        |      | might prevent the tool from using this cell for technology mapping. The tool    |
|            |        |      | will treat it as unusable.                                                      |
|            |        |      |The library cell will be treated as a timing-model. Make sure that the timing    |
|            |        |      | arcs and output function are defined correctly. Even if the cell intends to     |
|            |        |      | have dual-functionality, it cannot be unmapped or automatically inferred.       |
| PHYS-752   |Info    |    1 |Partition Based Synthesis execution skipped.                                     |
| SYNTH-1    |Info    |    1 |Synthesizing.                                                                    |
| TIM-167    |Info    |    1 |An external clock is being defined.                                              |
|            |        |      |An external clock does not directly drive any points within the design, but is   |
|            |        |      | only used as a reference for external delays.                                   |
| TUI-202    |Error   |    1 |A required argument was not specified.                                           |
|            |        |      |Rerun the command specifying all required arguments.                             |
| TUI-31     |Warning |    2 |Obsolete command.                                                                |
|            |        |      |This command is no longer supported.                                             |
| TUI-61     |Error   |    2 |A required object parameter could not be found.                                  |
|            |        |      |Check to make sure that the object exists and is of the correct type.  The       |
|            |        |      | 'what_is' command can be used to determine the type of an object.               |
----------------------------------------------------------------------------------------------------------------
Mapper: Libraries have:
	domain _default_: 291 combo usable cells and 126 sequential usable cells
Warning : Not obtained requested number of super thread servers. [ST-136]
        : The tool is running on a 4 cpu machine.
        : The requested number of cpus are not available on machine.
Multi-threaded constant propagation [1|0] ...
Multi-threaded Virtual Mapping    (4 threads per ST process, 4 of 4 CPUs usable)
==================================
Stage : first_condense 
==================================
  =================
   Message Summary
  =================
----------------------------------------------------------------------------------------------------------------
|   Id   |  Sev   |Count |                                    Message Text                                     |
----------------------------------------------------------------------------------------------------------------
| GLO-51 |Info    |    8 |Hierarchical instance automatically ungrouped.                                       |
|        |        |      |Hierarchical instances can be automatically ungrouped to allow for better area or    |
|        |        |      | timing optimization. To prevent this ungroup, set the root-level attribute          |
|        |        |      | 'auto_ungroup' to 'none'. You can also prevent individual ungroup with setting the  |
|        |        |      | attribute 'ungroup_ok' of instances or modules to 'false'.                          |
| ST-136 |Warning |    1 |Not obtained requested number of super thread servers.                               |
|        |        |      |The requested number of cpus are not available on machine.                           |
----------------------------------------------------------------------------------------------------------------
 
Global mapping target info
==========================
Cost Group 'default' target slack: Unconstrained

PBS_Generic_Opt-Post - Elapsed_Time 8, CPU_Time 8.022359000000002
stamp 'PBS_Generic_Opt-Post' being created for table 'pbs_debug'

  Total Time (Wall) |  Stage Time (Wall)  |   % (Wall)   |    Date - Time     |  Memory   | Stage
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:23(00:04:52) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:37 (Sep19) |  231.4 MB | PBS_Generic-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:08(00:00:08) | 100.0(100.0) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic_Opt-Post
--------------------+---------------------+--------------+--------------------+-----------+----------------------
Number of threads: 8 * 1   (id: pbs_debug, time_info v1.57)
Info: (*N*) indicates data that was populated from previously saved time_info database
Info: CPU time includes time of parent + longest thread
PBS_Generic-Postgen HBO Optimizations - Elapsed_Time 0, CPU_Time 0.0
stamp 'PBS_Generic-Postgen HBO Optimizations' being created for table 'pbs_debug'

  Total Time (Wall) |  Stage Time (Wall)  |   % (Wall)   |    Date - Time     |  Memory   | Stage
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:23(00:04:52) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:37 (Sep19) |  231.4 MB | PBS_Generic-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:08(00:00:08) | 100.0(100.0) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic_Opt-Post
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic-Postgen HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
Number of threads: 8 * 1   (id: pbs_debug, time_info v1.57)
Info: (*N*) indicates data that was populated from previously saved time_info database
Info: CPU time includes time of parent + longest thread
##>=================== Cadence Confidential (Generic-Logical) ===================
##>=================== Cadence Confidential (Generic-Logical) ===================
##>Main Thread Summary:
##>----------------------------------------------------------------------------------------
##>STEP                           Elapsed       WNS       TNS     Insts      Area    Memory
##>----------------------------------------------------------------------------------------
##>G:Initial                            0         -         -      1601         0       231
##>G:Setup                              0         -         -         -         -         -
##>G:Launch ST                          0         -         -         -         -         -
##>G:Design Partition                   0         -         -         -         -         -
##>G:Create Partition Netlists          0         -         -         -         -         -
##>G:Init Power                         0         -         -         -         -         -
##>G:Budgeting                          0         -         -         -         -         -
##>G:Derenv-DB                          0         -         -         -         -         -
##>G:Debug Outputs                      0         -         -         -         -         -
##>G:ST loading                         0         -         -         -         -         -
##>G:Distributed                        0         -         -         -         -         -
##>G:Timer                              0         -         -         -         -         -
##>G:Assembly                           0         -         -         -         -         -
##>G:DFT                                0         -         -         -         -         -
##>G:Const Prop                         0         -         -       855         0       267
##>G:Misc                               8
##>----------------------------------------------------------------------------------------
##>Total Elapsed                        8
##>========================================================================================

======================= Sequential Deletion Report =============================
================================================================================

Info    : Done synthesizing. [SYNTH-2]
        : Done synthesizing 'GCD' to generic gates.
      timing.setup.tns  timing.setup.wns  snapshot
UM:*                                      syn_gen
@genus:root: 12> write_hdl

// Generated by Cadence Genus(TM) Synthesis Solution 19.11-s087_1
// Generated on: Sep 19 2024 19:27:09 IST (Sep 19 2024 13:57:09 UTC)

// Verification Directory fv/GCD 

module GCD(out, done, clk, rst, in1, in2, go);
  input clk, rst, go;
  input [31:0] in1, in2;
  output [31:0] out;
  output done;
  wire clk, rst, go;
  wire [31:0] in1, in2;
  wire [31:0] out;
  wire done;
  wire [2:0] c1_nState;
  wire [2:0] c1_cState;
  wire [31:0] d1_ta;
  wire [31:0] d1_tb;
  wire a_ld, a_sel, b_ld, b_sel, c1_n_7, c1_n_58, c1_n_124, c1_n_126;
  wire c1_n_153, c1_n_291, d1_com_gt_230_8_n_132,
       d1_com_gt_230_8_n_241, d1_com_gt_230_8_n_261,
       d1_com_gt_230_8_n_306, d1_com_gt_230_8_n_316,
       d1_com_gt_230_8_n_329;
  wire d1_com_gt_230_8_n_344, d1_com_gt_230_8_n_359,
       d1_com_gt_230_8_n_384, d1_com_gt_230_8_n_416,
       d1_com_gt_230_8_n_421, d1_com_gt_230_8_n_471,
       d1_com_lt_232_13_n_225, d1_com_lt_232_13_n_226;
  wire d1_com_lt_232_13_n_306, d1_com_lt_232_13_n_329,
       d1_com_lt_232_13_n_344, d1_com_lt_232_13_n_359,
       d1_com_lt_232_13_n_384, d1_com_lt_232_13_n_416, d1_com_n_553,
       d1_com_n_560;
  wire d1_com_n_561, d1_com_n_565, d1_com_n_570, d1_com_n_575,
       d1_com_n_583, d1_com_n_587, d1_com_n_588, d1_com_n_592;
  wire d1_com_n_602, d1_com_n_623, d1_com_n_635, d1_com_n_636,
       d1_com_n_637, d1_com_n_638, d1_com_n_639, d1_com_n_640;
  wire d1_com_n_641, d1_com_n_642, d1_com_n_645, d1_com_n_649,
       d1_com_n_654, d1_com_n_655, d1_com_n_660, d1_com_n_661;
  wire d1_com_n_662, d1_com_n_663, d1_com_n_666, d1_com_n_667,
       d1_com_n_668, d1_com_n_669, d1_com_n_670, d1_com_n_671;
  wire d1_com_n_675, d1_com_n_676, d1_com_n_677, d1_com_n_678,
       d1_com_n_679, d1_com_n_685, d1_com_n_686, d1_com_n_687;
  wire d1_com_n_688, d1_com_n_740, d1_com_n_746, d1_com_n_769,
       d1_com_n_770, d1_com_n_778, d1_com_n_779, d1_com_n_787;
  wire d1_com_n_788, d1_com_n_793, d1_com_n_794, d1_com_n_797,
       d1_com_n_803, d1_com_n_811, d1_com_n_817, d1_com_n_818;
  wire d1_com_n_823, d1_com_n_824, d1_com_n_835, d1_com_n_848,
       d1_com_n_854, d1_com_n_860, d1_com_n_865, d1_com_n_866;
  wire d1_com_n_871, d1_com_n_872, d1_com_n_905, d1_com_n_906,
       d1_com_n_907, d1_com_n_908, d1_com_n_924, d1_com_n_926;
  wire d1_com_n_929, d1_com_n_944, d1_com_n_947, d1_com_n_950,
       d1_com_n_953, d1_com_n_956, d1_com_n_968, d1_com_n_969;
  wire d1_com_n_970, d1_com_n_971, d1_com_n_979, d1_com_n_980,
       d1_com_n_988, d1_com_n_989, d1_com_n_994, d1_com_n_995;
  wire d1_com_n_1006, d1_com_n_1007, d1_com_n_1023, d1_com_n_1025,
       d1_com_n_1026, d1_com_n_1027, d1_com_n_1028, d1_com_n_1034;
  wire d1_com_n_1047, d1_com_n_1048, d1_com_n_1049, d1_com_n_1050,
       d1_com_n_1051, d1_com_n_1052, d1_com_n_1077, d1_com_n_1078;
  wire d1_com_n_1079, d1_com_n_1086, d1_com_n_1087, d1_com_n_1088,
       d1_com_n_1091, d1_com_n_1094, d1_com_n_1142, d1_n_789;
  wire d1_n_790, d1_n_791, d1_n_792, d1_n_793, d1_n_794, d1_n_795,
       d1_n_796, d1_n_797;
  wire d1_n_798, d1_n_799, d1_n_800, d1_n_801, d1_n_802, d1_n_803,
       d1_n_804, d1_n_805;
  wire d1_n_806, d1_n_807, d1_n_808, d1_n_809, d1_n_810, d1_n_811,
       d1_n_812, d1_n_813;
  wire d1_n_814, d1_n_815, d1_n_816, d1_n_817, d1_n_818, d1_n_819,
       d1_n_820, d1_n_821;
  wire d1_n_822, d1_n_823, d1_n_824, d1_n_825, d1_n_826, d1_n_827,
       d1_n_828, d1_n_829;
  wire d1_n_830, d1_n_831, d1_n_832, d1_n_833, d1_n_834, d1_n_835,
       d1_n_836, d1_n_837;
  wire d1_n_838, d1_n_839, d1_n_840, d1_n_841, d1_n_842, d1_n_843,
       d1_n_844, d1_n_845;
  wire d1_n_846, d1_n_847, d1_n_848, d1_n_849, d1_n_850, d1_n_851,
       d1_n_852, d1_n_853;
  wire d1_n_854, d1_n_855, d1_n_856, d1_n_857, d1_n_858, d1_n_859,
       d1_n_860, d1_n_861;
  wire d1_n_862, d1_n_863, d1_n_864, d1_n_865, d1_n_866, d1_n_867,
       d1_n_868, d1_n_869;
  wire d1_n_870, d1_n_871, d1_n_872, d1_n_873, d1_n_874, d1_n_875,
       d1_n_876, d1_n_877;
  wire d1_n_878, d1_n_879, d1_n_880, d1_n_881, d1_n_882, d1_n_883,
       d1_n_884, d1_n_885;
  wire d1_n_886, d1_n_887, d1_n_888, d1_n_889, d1_n_890, d1_n_891,
       d1_n_892, d1_n_893;
  wire d1_n_894, d1_n_895, d1_n_896, d1_n_897, d1_n_898, d1_n_899,
       d1_n_900, d1_n_901;
  wire d1_n_902, d1_n_903, d1_n_904, d1_n_905, d1_n_906, d1_n_907,
       d1_n_908, d1_n_909;
  wire d1_n_910, d1_n_911, d1_n_912, d1_n_913, d1_n_914, d1_n_915,
       d1_n_916, d1_n_917;
  wire d1_n_918, d1_n_919, d1_n_920, d1_n_921, d1_n_922, d1_n_923,
       d1_n_924, d1_n_925;
  wire d1_n_926, d1_n_927, d1_n_928, d1_n_929, d1_n_930, d1_n_931,
       d1_n_932, d1_n_933;
  wire d1_n_934, d1_n_935, d1_n_936, d1_n_937, d1_n_938, d1_n_939,
       d1_n_940, d1_n_941;
  wire d1_n_942, d1_n_943, d1_n_944, d1_n_945, d1_n_946, d1_n_947,
       d1_n_948, d1_n_949;
  wire d1_n_950, d1_n_951, d1_n_952, d1_n_953, d1_n_954, d1_n_955,
       d1_n_956, d1_n_957;
  wire d1_n_958, d1_n_959, d1_n_960, d1_n_961, d1_n_962, d1_n_963,
       d1_n_964, d1_n_965;
  wire d1_n_966, d1_n_967, d1_n_968, d1_n_969, d1_n_970, d1_n_971,
       d1_n_972, d1_n_973;
  wire d1_n_974, d1_n_975, d1_n_976, d1_n_977, d1_n_978, d1_n_979,
       d1_n_980, d1_n_981;
  wire d1_n_982, d1_n_983, d1_n_984, d1_n_985, d1_n_986, d1_n_987,
       d1_n_988, d1_n_989;
  wire d1_n_990, d1_n_991, d1_n_992, d1_n_993, d1_n_994, d1_n_995,
       d1_n_996, d1_n_997;
  wire d1_n_998, d1_n_999, d1_n_1000, d1_n_1001, d1_n_1002, d1_n_1003,
       d1_n_1004, d1_n_1005;
  wire d1_n_1006, d1_n_1007, d1_n_1008, d1_n_1009, d1_n_1010,
       d1_n_1011, d1_n_1012, d1_n_1013;
  wire d1_n_1014, d1_n_1015, d1_n_1016, d1_n_1017, d1_n_1018,
       d1_n_1019, d1_n_1020, d1_n_1021;
  wire d1_n_1022, d1_n_1023, d1_n_1024, d1_n_1025, d1_n_1026,
       d1_n_1027, d1_n_1028, d1_n_1029;
  wire d1_n_1030, d1_n_1031, d1_n_1032, d1_n_1033, d1_n_1034,
       d1_n_1035, d1_n_1036, d1_n_1037;
  wire d1_n_1038, d1_n_1039, d1_n_1040, d1_n_1041, d1_n_1042,
       d1_n_1043, d1_n_1044, d1_n_1045;
  wire d1_n_1046, d1_n_1047, d1_n_1048, d1_n_1049, d1_n_1050,
       d1_n_1051, d1_n_1052, d1_n_1053;
  wire d1_n_1054, d1_n_1055, d1_n_1056, d1_n_1057, d1_n_1058,
       d1_n_1059, d1_n_1060, d1_n_1061;
  wire d1_n_1062, d1_n_1063, d1_n_1064, d1_n_1065, d1_n_1066,
       d1_n_1067, d1_n_1068, d1_n_1071;
  wire d1_n_1074, d1_n_1079, d1_n_1080, d1_n_1085, d1_n_1086,
       d1_n_1089, d1_n_1092, d1_n_1097;
  wire d1_n_1098, d1_n_1103, d1_n_1104, d1_n_1109, d1_n_1110,
       d1_n_1115, d1_n_1116, d1_n_1119;
  wire d1_n_1122, d1_n_1127, d1_n_1128, d1_n_1133, d1_n_1134,
       d1_n_1137, d1_n_1140, d1_n_1145;
  wire d1_n_1146, d1_n_1151, d1_n_1152, d1_n_1155, d1_n_1158,
       d1_n_1163, d1_n_1164, d1_n_1169;
  wire d1_n_1170, d1_n_1173, d1_n_1176, d1_n_1181, d1_n_1182,
       d1_n_1187, d1_n_1188, d1_n_1191;
  wire d1_n_1194, d1_n_1199, d1_n_1200, d1_n_1205, d1_n_1206,
       d1_n_1209, d1_n_1212, d1_n_1217;
  wire d1_n_1218, d1_n_1223, d1_n_1224, d1_n_1227, d1_n_1230,
       d1_n_1235, d1_n_1236, d1_n_1241;
  wire d1_n_1242, d1_n_1245, d1_n_1248, d1_n_1253, d1_n_1254,
       d1_n_1259, d1_n_1260, d1_n_1263;
  wire d1_n_1266, d1_n_1271, d1_n_1272, d1_n_1277, d1_n_1278,
       d1_n_1281, d1_n_1284, d1_n_1289;
  wire d1_n_1290, d1_n_1295, d1_n_1296, d1_n_1299, d1_n_1302,
       d1_n_1307, d1_n_1308, d1_n_1313;
  wire d1_n_1314, d1_n_1317, d1_n_1320, d1_n_1325, d1_n_1326,
       d1_n_1331, d1_n_1332, d1_n_1335;
  wire d1_n_1338, d1_n_1343, d1_n_1344, d1_n_1349, d1_n_1350,
       d1_n_1353, d1_n_1356, d1_n_1361;
  wire d1_n_1362, d1_n_1367, d1_n_1368, d1_n_1371, d1_n_1374,
       d1_n_1379, d1_n_1380, d1_n_1385;
  wire d1_n_1386, d1_n_1389, d1_n_1392, d1_n_1397, d1_n_1398,
       d1_n_1403, d1_n_1404, d1_n_1407;
  wire d1_n_1410, d1_n_1415, d1_n_1416, d1_n_1421, d1_n_1422,
       d1_n_1425, d1_n_1428, d1_n_1433;
  wire d1_n_1434, d1_n_1439, d1_n_1440, d1_n_1443, d1_n_1446,
       d1_n_1451, d1_n_1452, d1_n_1457;
  wire d1_n_1458, d1_n_1461, d1_n_1464, d1_n_1469, d1_n_1470,
       d1_n_1475, d1_n_1476, d1_n_1479;
  wire d1_n_1482, d1_n_1487, d1_n_1488, d1_n_1493, d1_n_1494,
       d1_n_1497, d1_n_1500, d1_n_1505;
  wire d1_n_1506, d1_n_1511, d1_n_1512, d1_n_1515, d1_n_1518,
       d1_n_1523, d1_n_1524, d1_n_1529;
  wire d1_n_1530, d1_n_1533, d1_n_1536, d1_n_1541, d1_n_1542,
       d1_n_1547, d1_n_1548, d1_n_1551;
  wire d1_n_1554, d1_n_1559, d1_n_1560, d1_n_1565, d1_n_1566,
       d1_n_1569, d1_n_1572, d1_n_1577;
  wire d1_n_1578, d1_n_1583, d1_n_1584, d1_n_1587, d1_n_1590,
       d1_n_1593, d1_n_1596, d1_n_1601;
  wire d1_n_1602, d1_n_1607, d1_n_1608, d1_n_1613, d1_n_1614,
       d1_n_1619, d1_n_1620, d1_n_1625;
  wire d1_n_1626, d1_n_1631, d1_n_1632, d1_n_1633, d1_n_1634,
       d1_n_1635, d1_n_1636, d1_n_1637;
  wire d1_n_1638, d1_n_1639, d1_n_1640, d1_n_1641, d1_n_1642,
       d1_n_1643, d1_n_1644, d1_n_1645;
  wire d1_n_1646, d1_n_1647, d1_n_1648, d1_n_1649, d1_n_1650,
       d1_n_1651, d1_n_1652, d1_n_1653;
  wire d1_n_1654, d1_n_1655, d1_n_1656, d1_n_1657, d1_n_1658,
       d1_n_1659, d1_n_1660, d1_n_1661;
  wire d1_n_1662, d1_n_1663, d1_n_1664, d1_n_1665, d1_n_1666,
       d1_n_1667, d1_n_1668, d1_n_1669;
  wire d1_n_1670, d1_n_1671, d1_n_1672, d1_n_1673, d1_n_1674,
       d1_n_1675, d1_n_1676, d1_n_1677;
  wire d1_n_1678, d1_n_1679, d1_n_1680, d1_n_1681, d1_n_1682,
       d1_n_1683, d1_n_1684, d1_n_1685;
  wire d1_n_1686, d1_n_1687, d1_n_1688, d1_n_1689, d1_n_1690,
       d1_n_1691, d1_n_1692, d1_n_1693;
  wire d1_n_1694, d1_n_1695, d1_n_1696, d1_n_1697, d1_n_1698,
       d1_n_1699, d1_n_1700, d1_n_1701;
  wire d1_n_1702, d1_n_1703, d1_n_1704, d1_n_1705, d1_n_1706,
       d1_n_1707, d1_n_1708, d1_n_1709;
  wire d1_n_1710, d1_n_1711, d1_n_1712, d1_n_1713, d1_n_1714,
       d1_n_1715, d1_n_1716, d1_n_1717;
  wire d1_n_1718, d1_n_1719, d1_n_1720, d1_n_1721, d1_n_1722,
       d1_n_1723, d1_n_1724, d1_n_1725;
  wire d1_n_1726, d1_n_1727, d1_n_1728, d1_n_1729, d1_n_1730,
       d1_n_1731, d1_n_1732, d1_n_1733;
  wire d1_n_1734, d1_n_1735, d1_n_1736, d1_n_1737, d1_n_1738,
       d1_n_1739, d1_n_1740, d1_n_1741;
  wire d1_n_1742, d1_n_1743, d1_n_1744, d1_n_1745, d1_n_1746,
       d1_n_1747, d1_n_1748, d1_n_1749;
  wire d1_n_1750, d1_n_1751, d1_n_1752, d1_n_1753, d1_n_1754,
       d1_n_1755, d1_n_1756, n_293;
  wire n_294, n_297, n_306, n_307, n_308, n_309, n_314, n_315;
  wire n_318, n_321, n_328, n_329, n_330, n_368, n_370, n_371;
  CDN_flop \c1_cState_reg[0] (.clk (clk), .d (c1_nState[0]), .sena
       (1'b1), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (c1_cState[0]));
  CDN_flop \c1_cState_reg[1] (.clk (clk), .d (c1_nState[1]), .sena
       (1'b1), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (c1_cState[1]));
  CDN_flop \c1_cState_reg[2] (.clk (clk), .d (c1_nState[2]), .sena
       (1'b1), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (c1_cState[2]));
  CDN_latch \c1_nState_reg[0] (.d (c1_n_124), .ena (1'b1), .aclr
       (1'b0), .apre (1'b0), .q (c1_nState[0]));
  CDN_latch \c1_nState_reg[1] (.d (c1_n_126), .ena (1'b1), .aclr
       (1'b0), .apre (1'b0), .q (c1_nState[1]));
  CDN_latch \c1_nState_reg[2] (.d (n_368), .ena (1'b1), .aclr (1'b0),
       .apre (1'b0), .q (c1_nState[2]));
Warning : Detected one or more Complex boolean function primitives. [VRO-22]
        : Detected complex boolean function primitives.
        : Complex boolean function primitive is one whose representation requires multiple boolean verilog primitives.This increases number of gate instances in written out verilog netlist. If this netlist is used further, it can potentially impact QOR.
  or d1_com_g1427 (d1_n_803, wc, d1_ta[2]);
  not gc (wc, d1_tb[2]);
  or d1_com_g1659 (d1_n_800, d1_ta[0], wc0);
  not gc0 (wc0, d1_tb[0]);
  or d1_com_g1663 (d1_n_810, wc1, d1_tb[0]);
  not gc1 (wc1, d1_ta[0]);
  or d1_com_g1691 (d1_com_n_660, wc2, d1_ta[24]);
  not gc2 (wc2, d1_n_894);
  or d1_com_g1695 (d1_com_n_662, wc3, d1_ta[16]);
  not gc3 (wc3, d1_n_874);
  or d1_com_g1707 (d1_com_n_668, d1_com_n_602, wc4);
  not gc4 (wc4, d1_tb[20]);
  or d1_com_g1739 (d1_n_864, wc5, d1_tb[14]);
  not gc5 (wc5, d1_ta[14]);
  or d1_com_g1749 (d1_n_790, wc6, d1_tb[6]);
  not gc6 (wc6, d1_ta[6]);
  nand d1_com_g1970 (d1_com_n_663, d1_n_883, d1_n_871);
  nand d1_com_g1972 (d1_com_n_661, d1_n_915, d1_n_893);
  or d1_com_g2067 (d1_com_n_645, wc7, d1_n_810);
  not gc7 (wc7, d1_ta[1]);
  or d1_com_g2112 (d1_com_gt_230_8_n_132, d1_com_gt_230_8_n_471, wc8);
  not gc8 (wc8, d1_com_n_1079);
  or d1_com_g2113 (d1_com_n_1079, d1_com_n_1078, d1_com_gt_230_8_n_416);
  or d1_com_g2115 (d1_com_n_1078, d1_com_gt_230_8_n_344, d1_com_n_1077);
  nand d1_com_g2116 (d1_com_n_1077, d1_com_n_687,
       d1_com_gt_230_8_n_421);
  or d1_com_g2117 (d1_com_n_1088, d1_com_n_1087,
       d1_com_lt_232_13_n_416);
  or d1_com_g2118 (d1_com_n_1087, d1_com_n_1086,
       d1_com_lt_232_13_n_344);
  or d1_com_g2119 (d1_com_gt_230_8_n_421, wc9, d1_com_n_1052);
  not gc9 (wc9, d1_n_860);
  or d1_com_g2121 (d1_com_n_1052, d1_com_n_1050, d1_com_n_1051);
  nand d1_com_g2123 (d1_com_n_1050, d1_com_gt_230_8_n_384,
       d1_com_n_1047);
  or d1_com_g2124 (d1_com_gt_230_8_n_384, d1_com_n_1028, wc10);
  not gc10 (wc10, d1_n_838);
  or d1_com_g2126 (d1_com_n_1028, d1_com_n_1027, wc11);
  not gc11 (wc11, d1_n_840);
  or d1_com_g2128 (d1_com_lt_232_13_n_384, wc12, d1_com_n_1007);
  not gc12 (wc12, d1_n_830);
  or d1_com_g2129 (d1_com_n_1027, d1_com_n_1026, wc13);
  not gc13 (wc13, d1_n_829);
  or d1_com_g2130 (d1_com_n_1007, d1_com_n_1006, d1_com_n_583);
  or d1_com_g2131 (d1_com_n_1026, d1_com_gt_230_8_n_329, d1_com_n_1025);
  nand d1_com_g2132 (d1_com_n_1025, d1_com_n_1023, d1_n_819);
  or d1_com_g2134 (d1_com_n_1023, wc14, d1_com_gt_230_8_n_316);
  not gc14 (wc14, d1_com_n_675);
  or d1_com_g2136 (d1_com_n_675, d1_com_n_989, d1_com_gt_230_8_n_241);
  or d1_com_g2137 (d1_com_n_671, wc15, d1_com_n_980);
  not gc15 (wc15, d1_n_789);
  or d1_com_g2138 (d1_com_gt_230_8_n_471, wc16, d1_com_n_1034);
  not gc16 (wc16, d1_com_n_592);
  or d1_com_g2139 (d1_com_n_989, d1_com_n_988, wc17);
  not gc17 (wc17, d1_n_792);
  or d1_com_g2140 (d1_com_n_980, d1_com_n_565, d1_com_n_979);
  nand d1_com_g2141 (d1_com_n_988, d1_com_gt_230_8_n_306, d1_n_795);
  or d1_com_g2142 (d1_com_n_592, d1_com_gt_230_8_n_416, wc18);
  not gc18 (wc18, d1_com_n_995);
  nand d1_com_g2143 (d1_com_n_979, d1_com_lt_232_13_n_306, d1_n_794);
  nand d1_com_g2145 (d1_com_gt_230_8_n_306, d1_com_n_871, d1_com_n_872);
  nand d1_com_g2146 (d1_com_n_1051, d1_com_n_1048, d1_com_n_1049);
  nand d1_com_g2147 (d1_com_lt_232_13_n_306, d1_com_n_865,
       d1_com_n_866);
  or d1_com_g2149 (d1_com_n_995, wc19, d1_com_n_994);
  not gc19 (wc19, d1_n_908);
  nand d1_com_g2150 (d1_com_n_872, d1_com_n_649, d1_tb[3]);
  nand d1_com_g2152 (d1_com_n_1034, d1_com_n_667, d1_com_n_553);
  or d1_com_g2154 (d1_com_n_1048, d1_com_gt_230_8_n_329, wc20);
  not gc20 (wc20, d1_com_n_678);
  nand d1_com_g2157 (d1_com_n_994, d1_com_n_670, d1_com_n_575);
  or d1_com_g2158 (d1_com_n_649, d1_com_n_818, wc21);
  not gc21 (wc21, d1_ta[3]);
  nand d1_com_g2160 (d1_com_n_670, d1_n_909, d1_com_n_929);
  or d1_com_g2161 (d1_com_n_553, d1_com_gt_230_8_n_359, d1_com_n_908);
  or d1_com_g2164 (d1_com_n_575, wc22, d1_com_n_971);
  not gc22 (wc22, d1_com_n_635);
  or d1_com_g2166 (d1_com_n_871, wc23, d1_ta[3]);
  not gc23 (wc23, d1_com_n_818);
  nand d1_com_g2168 (d1_com_n_678, d1_n_837, d1_com_n_944);
  nand d1_com_g2170 (d1_com_n_944, d1_com_n_677, d1_n_838);
  nand d1_com_g2171 (d1_com_n_818, d1_n_803, d1_com_n_817);
  or d1_com_g2173 (d1_com_n_971, d1_com_gt_230_8_n_344, d1_com_n_970);
  nand d1_com_g2174 (d1_com_n_929, d1_n_898, d1_com_n_669);
  or d1_com_g2178 (d1_com_gt_230_8_n_416, d1_com_gt_230_8_n_359, wc24);
  not gc24 (wc24, d1_com_n_686);
  or d1_com_g2179 (d1_com_n_583, wc25, d1_com_n_1094);
  not gc25 (wc25, d1_n_837);
  or d1_com_g2180 (d1_com_n_908, wc26, d1_com_n_907);
  not gc26 (wc26, d1_com_n_639);
  or d1_com_g2182 (d1_com_lt_232_13_n_416, wc27,
       d1_com_lt_232_13_n_359);
  not gc27 (wc27, d1_com_n_685);
  nand d1_com_g2184 (d1_com_gt_230_8_n_316, d1_com_n_655, d1_com_n_654);
  nand d1_com_g2185 (d1_com_n_687, d1_com_n_637, d1_com_n_953);
  nand d1_com_g2186 (d1_com_n_688, d1_com_n_635, d1_com_n_956);
  nand d1_com_g2187 (d1_com_n_811, d1_n_803, d1_com_n_588);
  nand d1_com_g2189 (d1_com_n_669, d1_n_899, d1_com_n_1091);
  nand d1_com_g2190 (d1_com_n_907, d1_com_n_905, d1_com_n_906);
  nand d1_com_g2191 (d1_com_n_817, d1_n_802, d1_com_n_587);
  nand d1_com_g2193 (d1_com_n_970, d1_com_n_968, d1_com_n_969);
  nand d1_com_g2194 (d1_com_n_686, d1_com_n_641, d1_com_n_950);
  or d1_com_g2195 (d1_com_n_1094, wc28, d1_com_lt_232_13_n_329);
  not gc28 (wc28, d1_n_841);
  nand d1_com_g2196 (d1_com_n_685, d1_com_n_639, d1_com_n_947);
  nand d1_com_g2197 (d1_com_n_677, d1_com_n_835, d1_n_841);
  or d1_com_g2198 (d1_com_n_667, d1_com_n_926, wc29);
  not gc29 (wc29, d1_com_lt_232_13_n_359);
  or d1_com_g2201 (d1_com_gt_230_8_n_344, d1_com_n_623, wc30);
  not gc30 (wc30, d1_n_903);
  or d1_com_g2202 (d1_com_n_641, d1_com_n_642, wc31);
  not gc31 (wc31, d1_tb[24]);
  nand d1_com_g2203 (d1_com_n_835, d1_com_n_676, d1_n_840);
  or d1_com_g2205 (d1_com_lt_232_13_n_344, wc32, d1_com_n_770);
  not gc32 (wc32, d1_n_908);
  or d1_com_g2206 (d1_com_n_950, d1_com_n_642, d1_ta[24]);
  or d1_com_g2207 (d1_com_n_947, d1_com_n_640, wc33);
  not gc33 (wc33, d1_ta[24]);
  or d1_com_g2208 (d1_com_gt_230_8_n_329, d1_com_n_848, wc34);
  not gc34 (wc34, d1_n_854);
  or d1_com_g2209 (d1_com_n_969, wc35, d1_com_n_636);
  not gc35 (wc35, d1_com_n_662);
  or d1_com_g2210 (d1_com_n_1047, wc36, d1_com_gt_230_8_n_261);
  not gc36 (wc36, d1_com_n_679);
  nand d1_com_g2211 (d1_com_n_588, d1_com_n_787, d1_com_n_788);
  or d1_com_g2212 (d1_com_n_637, d1_com_n_638, wc37);
  not gc37 (wc37, d1_tb[16]);
  or d1_com_g2213 (d1_com_n_953, d1_com_n_638, d1_ta[16]);
  or d1_com_g2214 (d1_com_n_635, d1_com_n_636, d1_tb[16]);
  nand d1_com_g2215 (d1_com_n_926, d1_com_lt_232_13_n_226,
       d1_com_n_924);
  nand d1_com_g2216 (d1_com_n_1091, d1_n_900, d1_com_n_668);
  or d1_com_g2219 (d1_com_lt_232_13_n_329, wc38, d1_com_n_779);
  not gc38 (wc38, d1_n_860);
  or d1_com_g2221 (d1_com_n_956, d1_com_n_636, wc39);
  not gc39 (wc39, d1_ta[16]);
  or d1_com_g2222 (d1_com_n_906, wc40, d1_com_n_640);
  not gc40 (wc40, d1_com_n_660);
  nand d1_com_g2223 (d1_com_n_587, d1_com_n_793, d1_com_n_794);
  or d1_com_g2225 (d1_com_gt_230_8_n_359, d1_com_n_854, wc41);
  not gc41 (wc41, d1_n_889);
  or d1_com_g2226 (d1_com_lt_232_13_n_359, wc42, d1_com_n_860);
  not gc42 (wc42, d1_n_888);
  or d1_com_g2227 (d1_com_n_639, d1_com_n_640, d1_tb[24]);
  nand d1_com_g2228 (d1_com_n_655, d1_com_n_823, d1_com_n_824);
  or d1_com_g2229 (d1_com_n_642, wc43, d1_com_n_661);
  not gc43 (wc43, d1_n_894);
  nand d1_com_g2230 (d1_com_n_676, d1_n_830, d1_com_n_740);
  or d1_com_g2231 (d1_com_n_638, wc44, d1_com_n_663);
  not gc44 (wc44, d1_n_874);
  or d1_com_g2232 (d1_com_n_770, wc45, d1_com_n_769);
  not gc45 (wc45, d1_n_898);
  nand d1_com_g2233 (d1_com_n_679, d1_n_853, d1_com_n_746);
  nand d1_com_g2237 (d1_com_n_905, d1_n_914, d1_com_n_661);
  nand d1_com_g2238 (d1_com_n_824, d1_n_821, d1_com_gt_230_8_n_241);
  or d1_com_g2239 (d1_com_n_823, d1_com_n_565, wc46);
  not gc46 (wc46, d1_com_n_1142);
  or d1_com_g2240 (d1_com_n_860, wc47, d1_com_n_560);
  not gc47 (wc47, d1_n_891);
  or d1_com_g2241 (d1_com_n_636, wc48, d1_com_n_797);
  not gc48 (wc48, d1_n_882);
  or d1_com_g2242 (d1_com_n_640, wc49, d1_com_n_803);
  not gc49 (wc49, d1_n_914);
  or d1_com_g2244 (d1_com_n_848, d1_com_gt_230_8_n_261, wc50);
  not gc50 (wc50, d1_n_835);
  or d1_com_g2245 (d1_com_n_623, wc51, d1_com_n_561);
  not gc51 (wc51, d1_n_901);
  or d1_com_g2246 (d1_com_n_924, d1_com_n_560, wc52);
  not gc52 (wc52, d1_com_n_666);
  or d1_com_g2247 (d1_com_n_779, wc53, d1_com_n_778);
  not gc53 (wc53, d1_n_863);
  nand d1_com_g2248 (d1_com_n_968, d1_n_882, d1_com_n_663);
  or d1_com_g2251 (d1_com_n_854, wc54, d1_com_n_570);
  not gc54 (wc54, d1_n_890);
  nand d1_com_g2252 (d1_com_n_794, d1_com_n_645, d1_tb[1]);
  or d1_com_g2253 (d1_com_n_788, wc55, d1_tb[1]);
  not gc55 (wc55, d1_n_800);
  or d1_com_g2254 (d1_com_n_793, wc56, d1_ta[1]);
  not gc56 (wc56, d1_n_810);
  nand d1_com_g2255 (d1_com_gt_230_8_n_241, d1_n_790, d1_n_822);
  nand d1_com_g2256 (d1_com_gt_230_8_n_261, d1_n_864, d1_n_861);
  nand d1_com_g2257 (d1_com_n_561, d1_n_909, d1_n_899);
  nand d1_com_g2258 (d1_com_n_565, d1_n_793, d1_n_821);
  or d1_com_g2259 (d1_com_n_1142, d1_n_794, wc57);
  not gc57 (wc57, d1_n_792);
  nand d1_com_g2260 (d1_com_n_797, d1_n_875, d1_n_872);
  or d1_com_g2261 (d1_com_n_654, d1_n_789, wc58);
  not gc58 (wc58, d1_n_822);
  or d1_com_g2262 (d1_com_n_602, d1_ta[20], wc59);
  not gc59 (wc59, d1_n_901);
  or d1_com_g2263 (d1_com_n_746, d1_n_834, wc60);
  not gc60 (wc60, d1_n_854);
  or d1_com_g2264 (d1_com_n_740, d1_n_818, wc61);
  not gc61 (wc61, d1_n_829);
  or d1_com_g2265 (d1_com_n_1049, d1_n_863, wc62);
  not gc62 (wc62, d1_n_861);
  nand d1_com_g2266 (d1_com_n_769, d1_n_902, d1_n_900);
  nand d1_com_g2270 (d1_com_n_787, d1_n_800, d1_ta[1]);
  nand d1_com_g2272 (d1_com_n_803, d1_n_895, d1_n_892);
  nand d1_com_g2273 (d1_com_n_560, d1_n_920, d1_com_lt_232_13_n_225);
  nand d1_com_g2274 (d1_com_n_666, d1_n_889, d1_n_919);
  nand d1_com_g2276 (d1_com_n_778, d1_n_834, d1_n_853);
  nand d1_com_g2279 (d1_com_n_570, d1_com_lt_232_13_n_226, d1_n_919);
  or d1_com_g2280 (d1_n_888, d1_ta[29], wc63);
  not gc63 (wc63, d1_tb[29]);
  or d1_com_g2281 (d1_n_891, d1_ta[28], wc64);
  not gc64 (wc64, d1_tb[28]);
  or d1_com_g2282 (d1_n_914, d1_ta[27], wc65);
  not gc65 (wc65, d1_tb[27]);
  or d1_com_g2283 (d1_n_895, d1_ta[25], wc66);
  not gc66 (wc66, d1_tb[25]);
  or d1_com_g2284 (d1_com_lt_232_13_n_225, d1_ta[31], wc67);
  not gc67 (wc67, d1_tb[31]);
  or d1_com_g2285 (d1_n_920, d1_ta[30], wc68);
  not gc68 (wc68, d1_tb[30]);
  or d1_com_g2286 (d1_n_892, d1_ta[26], wc69);
  not gc69 (wc69, d1_tb[26]);
  or d1_com_g2287 (d1_n_860, d1_ta[15], wc70);
  not gc70 (wc70, d1_tb[15]);
  or d1_com_g2288 (d1_n_835, wc71, d1_tb[12]);
  not gc71 (wc71, d1_ta[12]);
  or d1_com_g2289 (d1_n_795, wc72, d1_tb[4]);
  not gc72 (wc72, d1_ta[4]);
  or d1_com_g2290 (d1_n_903, wc73, d1_tb[20]);
  not gc73 (wc73, d1_ta[20]);
  or d1_com_g2291 (d1_n_793, d1_ta[5], wc74);
  not gc74 (wc74, d1_tb[5]);
  or d1_com_g2292 (d1_n_821, d1_ta[7], wc75);
  not gc75 (wc75, d1_tb[7]);
  or d1_com_g2293 (d1_n_794, d1_ta[4], wc76);
  not gc76 (wc76, d1_tb[4]);
  or d1_com_g2294 (d1_n_872, d1_ta[18], wc77);
  not gc77 (wc77, d1_tb[18]);
  or d1_com_g2295 (d1_n_875, d1_ta[17], wc78);
  not gc78 (wc78, d1_tb[17]);
  or d1_com_g2296 (d1_n_882, d1_ta[19], wc79);
  not gc79 (wc79, d1_tb[19]);
  or d1_com_g2297 (d1_n_789, d1_ta[6], wc80);
  not gc80 (wc80, d1_tb[6]);
  or d1_com_g2298 (d1_n_819, wc81, d1_tb[8]);
  not gc81 (wc81, d1_ta[8]);
  or d1_com_g2299 (d1_n_853, d1_ta[13], wc82);
  not gc82 (wc82, d1_tb[13]);
  or d1_com_g2300 (d1_n_901, wc83, d1_tb[21]);
  not gc83 (wc83, d1_ta[21]);
  or d1_com_g2301 (d1_n_900, d1_ta[21], wc84);
  not gc84 (wc84, d1_tb[21]);
  or d1_com_g2302 (d1_n_899, wc85, d1_tb[22]);
  not gc85 (wc85, d1_ta[22]);
  or d1_com_g2303 (d1_n_898, d1_ta[22], wc86);
  not gc86 (wc86, d1_tb[22]);
  or d1_com_g2304 (d1_n_908, d1_ta[23], wc87);
  not gc87 (wc87, d1_tb[23]);
  or d1_com_g2305 (d1_n_834, d1_ta[12], wc88);
  not gc88 (wc88, d1_tb[12]);
  or d1_com_g2306 (d1_n_837, d1_ta[11], wc89);
  not gc89 (wc89, d1_tb[11]);
  or d1_com_g2307 (d1_n_830, d1_ta[9], wc90);
  not gc90 (wc90, d1_tb[9]);
  or d1_com_g2308 (d1_n_818, d1_ta[8], wc91);
  not gc91 (wc91, d1_tb[8]);
  or d1_com_g2309 (d1_n_841, d1_ta[10], wc92);
  not gc92 (wc92, d1_tb[10]);
  or d1_com_g2310 (d1_n_863, d1_ta[14], wc93);
  not gc93 (wc93, d1_tb[14]);
  or d1_com_g2311 (d1_n_902, d1_ta[20], wc94);
  not gc94 (wc94, d1_tb[20]);
  or d1_com_g2312 (d1_n_919, wc95, d1_tb[30]);
  not gc95 (wc95, d1_ta[30]);
  or d1_com_g2313 (d1_n_890, wc96, d1_tb[28]);
  not gc96 (wc96, d1_ta[28]);
  or d1_com_lt_232_13_g492 (d1_n_874, d1_tb[17], wc97);
  not gc97 (wc97, d1_ta[17]);
  or d1_com_lt_232_13_g495 (d1_n_871, d1_tb[18], wc98);
  not gc98 (wc98, d1_ta[18]);
  or d1_com_lt_232_13_g496 (d1_n_883, d1_tb[19], wc99);
  not gc99 (wc99, d1_ta[19]);
  or d1_com_lt_232_13_g500 (d1_n_909, d1_tb[23], wc100);
  not gc100 (wc100, d1_ta[23]);
  or d1_com_lt_232_13_g510 (d1_n_894, d1_tb[25], wc101);
  not gc101 (wc101, d1_ta[25]);
  or d1_com_lt_232_13_g511 (d1_n_893, d1_tb[26], wc102);
  not gc102 (wc102, d1_ta[26]);
  or d1_com_lt_232_13_g512 (d1_n_915, d1_tb[27], wc103);
  not gc103 (wc103, d1_ta[27]);
  or d1_com_lt_232_13_g514 (d1_n_889, d1_tb[29], wc104);
  not gc104 (wc104, d1_ta[29]);
  or d1_com_lt_232_13_g516 (d1_com_lt_232_13_n_226, d1_tb[31], wc105);
  not gc105 (wc105, d1_ta[31]);
  or d1_com_lt_232_13_g523 (d1_n_829, d1_tb[9], wc106);
  not gc106 (wc106, d1_ta[9]);
  or d1_com_lt_232_13_g526 (d1_n_840, d1_tb[10], wc107);
  not gc107 (wc107, d1_ta[10]);
  or d1_com_lt_232_13_g527 (d1_n_838, d1_tb[11], wc108);
  not gc108 (wc108, d1_ta[11]);
  or d1_com_lt_232_13_g529 (d1_n_854, d1_tb[13], wc109);
  not gc109 (wc109, d1_ta[13]);
  or d1_com_lt_232_13_g531 (d1_n_861, d1_tb[15], wc110);
  not gc110 (wc110, d1_ta[15]);
  or d1_com_lt_232_13_g535 (d1_n_792, d1_tb[5], wc111);
  not gc111 (wc111, d1_ta[5]);
  or d1_com_lt_232_13_g539 (d1_n_822, d1_tb[7], wc112);
  not gc112 (wc112, d1_ta[7]);
  or d1_com_lt_232_13_g540 (d1_n_802, d1_tb[2], wc113);
  not gc113 (wc113, d1_ta[2]);
  or d1_g495 (d1_n_876, wc114, d1_ta[16]);
  not gc114 (wc114, d1_tb[16]);
  or d1_g511 (d1_n_896, wc115, d1_ta[24]);
  not gc115 (wc115, d1_tb[24]);
  nand d1_g2241 (d1_n_985, d1_n_798, d1_n_799);
  nand d1_g2249 (d1_n_997, d1_n_874, d1_n_875);
  nand d1_g2260 (d1_n_791, d1_n_789, d1_n_790);
  nand d1_g2280 (d1_n_950, d1_n_888, d1_n_889);
  nand d1_g2288 (d1_n_968, d1_n_863, d1_n_864);
  nand d1_g2304 (d1_n_836, d1_n_834, d1_n_835);
  nand d1_g2312 (d1_n_850, d1_n_837, d1_n_838);
  nand d1_g2324 (d1_n_809, d1_n_792, d1_n_793);
  nand d1_g2336 (d1_n_873, d1_n_871, d1_n_872);
  nand d1_g2348 (d1_n_855, d1_n_853, d1_n_854);
  nand d1_g2356 (d1_n_939, d1_n_892, d1_n_893);
  nand d1_g2360 (d1_n_862, d1_n_860, d1_n_861);
  nand d1_g2368 (d1_n_956, d1_n_914, d1_n_915);
  nand d1_g2376 (d1_n_960, d1_n_796, d1_n_797);
  nand d1_g2384 (d1_n_953, d1_n_908, d1_n_909);
  nand d1_g2388 (d1_n_820, d1_n_818, d1_n_819);
  nand d1_g2392 (d1_n_964, d1_n_821, d1_n_822);
  nand d1_g2396 (d1_n_958, d1_n_802, d1_n_803);
  nand d1_g2400 (d1_n_1003, d1_n_894, d1_n_895);
  nand d1_g2404 (d1_n_941, d1_n_898, d1_n_899);
  nand d1_g2408 (d1_n_923, d1_n_890, d1_n_891);
  nand d1_g2412 (d1_n_831, d1_n_829, d1_n_830);
  nand d1_g2416 (d1_n_971, d1_n_919, d1_n_920);
  nand d1_g2420 (d1_n_962, d1_n_794, d1_n_795);
  nand d1_g2424 (d1_n_966, d1_n_840, d1_n_841);
  nand d1_g2428 (d1_n_884, d1_n_882, d1_n_883);
  nand d1_g2432 (d1_n_1000, d1_n_900, d1_n_901);
  or d1_g2439 (d1_n_796, wc116, d1_ta[3]);
  not gc116 (wc116, d1_tb[3]);
  or d1_g2442 (d1_n_798, d1_tb[1], wc117);
  not gc117 (wc117, d1_ta[1]);
  or d1_g2443 (d1_n_799, wc118, d1_ta[1]);
  not gc118 (wc118, d1_tb[1]);
  or d1_g2445 (d1_n_797, d1_tb[3], wc119);
  not gc119 (wc119, d1_ta[3]);
  nand d1_g3331 (d1_n_1006, d1_n_800, d1_n_810);
  nand d1_g3770 (d1_n_948, d1_n_1631, d1_n_1632);
  nand d1_g3771 (d1_n_922, d1_n_1625, d1_n_1626);
  nand d1_g3772 (d1_n_1626, d1_n_1016, b_sel);
  nand d1_g3773 (d1_n_1632, d1_n_1021, a_sel);
  nand d1_g3774 (d1_n_1633, d1_n_887, d1_n_921);
  or d1_g3775 (d1_n_1634, d1_n_887, d1_n_921);
  nand d1_g3776 (d1_n_1016, d1_n_1633, d1_n_1634);
  nand d1_g3777 (d1_n_994, d1_n_1619, d1_n_1620);
  nand d1_g3778 (d1_n_972, d1_n_1613, d1_n_1614);
  nand d1_g3779 (d1_n_1635, d1_n_887, d1_n_947);
  or d1_g3780 (d1_n_1636, d1_n_887, d1_n_947);
  nand d1_g3781 (d1_n_1021, d1_n_1635, d1_n_1636);
  nand d1_g3782 (d1_n_947, d1_n_919, d1_n_1596);
  nand d1_g3783 (d1_n_1620, d1_n_1032, b_sel);
  nand d1_g3784 (d1_n_1614, d1_n_1026, a_sel);
  nand d1_g3785 (d1_n_921, d1_n_920, d1_n_1593);
  nand d1_g3786 (d1_n_1637, d1_n_918, d1_n_971);
  or d1_g3787 (d1_n_1638, d1_n_918, d1_n_971);
  nand d1_g3788 (d1_n_1032, d1_n_1637, d1_n_1638);
  nand d1_g3789 (d1_n_952, d1_n_1607, d1_n_1608);
  nand d1_g3790 (d1_n_1593, d1_n_918, d1_n_919);
  nand d1_g3791 (d1_n_1639, d1_n_971, d1_n_946);
  or d1_g3792 (d1_n_1640, d1_n_971, d1_n_946);
  nand d1_g3793 (d1_n_1026, d1_n_1639, d1_n_1640);
  nand d1_g3794 (d1_n_1596, d1_n_920, d1_n_946);
  nand d1_g3795 (d1_n_951, d1_n_1601, d1_n_1602);
  nand d1_g3796 (d1_n_1602, d1_n_1065, b_sel);
  nand d1_g3797 (d1_n_1608, d1_n_1066, a_sel);
  nand d1_g3798 (d1_n_918, d1_n_888, d1_n_1587);
  nand d1_g3799 (d1_n_946, d1_n_889, d1_n_1590);
  nand d1_g3800 (d1_n_1587, d1_n_889, d1_n_917);
  nand d1_g3801 (d1_n_1641, d1_n_945, d1_n_950);
  or d1_g3802 (d1_n_1642, d1_n_945, d1_n_950);
  nand d1_g3803 (d1_n_1066, d1_n_1641, d1_n_1642);
  nand d1_g3804 (d1_n_1643, d1_n_917, d1_n_950);
  or d1_g3805 (d1_n_1644, d1_n_917, d1_n_950);
  nand d1_g3806 (d1_n_1065, d1_n_1643, d1_n_1644);
  nand d1_g3807 (d1_n_1590, d1_n_888, d1_n_945);
  nand d1_g3808 (d1_n_938, d1_n_1583, d1_n_1584);
  nand d1_g3809 (d1_n_937, d1_n_1577, d1_n_1578);
  nand d1_g3810 (d1_n_945, d1_n_890, d1_n_1572);
  nand d1_g3811 (d1_n_1584, d1_n_1064, b_sel);
  nand d1_g3812 (d1_n_1578, d1_n_1018, a_sel);
  nand d1_g3813 (d1_n_917, d1_n_891, d1_n_1569);
  nand d1_g3814 (d1_n_1645, d1_n_923, d1_n_936);
  or d1_g3815 (d1_n_1646, d1_n_923, d1_n_936);
  nand d1_g3816 (d1_n_1018, d1_n_1645, d1_n_1646);
  nand d1_g3817 (d1_n_1572, d1_n_891, d1_n_936);
  nand d1_g3818 (d1_n_1647, d1_n_916, d1_n_923);
  or d1_g3819 (d1_n_1648, d1_n_916, d1_n_923);
  nand d1_g3820 (d1_n_1064, d1_n_1647, d1_n_1648);
  nand d1_g3821 (d1_n_993, d1_n_1565, d1_n_1566);
  nand d1_g3822 (d1_n_957, d1_n_1559, d1_n_1560);
  nand d1_g3823 (d1_n_1569, d1_n_890, d1_n_916);
  nand d1_g3824 (d1_n_1560, d1_n_1023, a_sel);
  nand d1_g3825 (d1_n_1566, d1_n_1031, b_sel);
  nand d1_g3826 (d1_n_916, d1_n_914, d1_n_1551);
  nand d1_g3827 (d1_n_936, d1_n_915, d1_n_1554);
  nand d1_g3828 (d1_n_943, d1_n_1547, d1_n_1548);
  nand d1_g3829 (d1_n_1649, d1_n_913, d1_n_956);
  or d1_g3830 (d1_n_1650, d1_n_913, d1_n_956);
  nand d1_g3831 (d1_n_1031, d1_n_1649, d1_n_1650);
  nand d1_g3832 (d1_n_940, d1_n_1541, d1_n_1542);
  nand d1_g3833 (d1_n_1651, d1_n_956, d1_n_935);
  or d1_g3834 (d1_n_1652, d1_n_956, d1_n_935);
  nand d1_g3835 (d1_n_1023, d1_n_1651, d1_n_1652);
  nand d1_g3836 (d1_n_1551, d1_n_913, d1_n_915);
  nand d1_g3837 (d1_n_1554, d1_n_914, d1_n_935);
  nand d1_g3838 (d1_n_1542, d1_n_1062, b_sel);
  nand d1_g3839 (d1_n_913, d1_n_892, d1_n_1533);
  nand d1_g3840 (d1_n_1548, d1_n_1063, a_sel);
  nand d1_g3841 (d1_n_935, d1_n_893, d1_n_1536);
  nand d1_g3842 (d1_n_1653, d1_n_912, d1_n_939);
  or d1_g3843 (d1_n_1654, d1_n_912, d1_n_939);
  nand d1_g3844 (d1_n_1062, d1_n_1653, d1_n_1654);
  nand d1_g3845 (d1_n_1536, d1_n_892, d1_n_934);
  nand d1_g3846 (d1_n_1004, d1_n_1523, d1_n_1524);
  nand d1_g3847 (d1_n_1005, d1_n_1529, d1_n_1530);
  nand d1_g3848 (d1_n_1533, d1_n_893, d1_n_912);
  nand d1_g3849 (d1_n_1655, d1_n_934, d1_n_939);
  or d1_g3850 (d1_n_1656, d1_n_934, d1_n_939);
  nand d1_g3851 (d1_n_1063, d1_n_1655, d1_n_1656);
  nand d1_g3852 (d1_n_934, d1_n_894, d1_n_1518);
  nand d1_g3853 (d1_n_1530, d1_n_1061, b_sel);
  nand d1_g3854 (d1_n_912, d1_n_895, d1_n_1515);
  nand d1_g3855 (d1_n_1524, d1_n_1060, a_sel);
  nand d1_g3856 (d1_n_1657, d1_n_933, d1_n_1003);
  or d1_g3857 (d1_n_1658, d1_n_933, d1_n_1003);
  nand d1_g3858 (d1_n_1060, d1_n_1657, d1_n_1658);
  nand d1_g3859 (d1_n_1659, d1_n_911, d1_n_1003);
  or d1_g3860 (d1_n_1660, d1_n_911, d1_n_1003);
  nand d1_g3861 (d1_n_1061, d1_n_1659, d1_n_1660);
  nand d1_g3862 (d1_n_1518, d1_n_895, d1_n_933);
  nand d1_g3863 (d1_n_976, d1_n_1505, d1_n_1506);
  nand d1_g3864 (d1_n_977, d1_n_1511, d1_n_1512);
  nand d1_g3865 (d1_n_1515, d1_n_894, d1_n_911);
  nand d1_g3866 (d1_n_933, d1_n_897, d1_n_1500);
  nand d1_g3867 (d1_n_1506, d1_n_1058, b_sel);
  nand d1_g3868 (d1_n_1512, d1_n_1059, a_sel);
  nand d1_g3869 (d1_n_911, d1_n_896, d1_n_1497);
  nand d1_g3870 (d1_n_955, d1_n_1493, d1_n_1494);
  nand d1_g3871 (d1_n_1497, d1_n_897, d1_n_910);
  nand d1_g3872 (d1_n_1661, d1_n_910, d1_n_975);
  or d1_g3873 (d1_n_1662, d1_n_910, d1_n_975);
  nand d1_g3874 (d1_n_1058, d1_n_1661, d1_n_1662);
  nand d1_g3875 (d1_n_954, d1_n_1487, d1_n_1488);
  nand d1_g3876 (d1_n_1663, d1_n_932, d1_n_975);
  or d1_g3877 (d1_n_1664, d1_n_932, d1_n_975);
  nand d1_g3878 (d1_n_1059, d1_n_1663, d1_n_1664);
  nand d1_g3879 (d1_n_1500, d1_n_896, d1_n_932);
  nand d1_g3880 (d1_n_1494, d1_n_1057, b_sel);
  nand d1_g3881 (d1_n_1488, d1_n_1056, a_sel);
  nand d1_g3882 (d1_n_910, d1_n_908, d1_n_1479);
  nand d1_g3883 (d1_n_932, d1_n_909, d1_n_1482);
  nand d1_g3884 (d1_n_1482, d1_n_908, d1_n_931);
  nand d1_g3885 (d1_n_1479, d1_n_907, d1_n_909);
  nand d1_g3886 (d1_n_949, d1_n_1475, d1_n_1476);
  nand d1_g3887 (d1_n_1665, d1_n_931, d1_n_953);
  or d1_g3888 (d1_n_1666, d1_n_931, d1_n_953);
  nand d1_g3889 (d1_n_1056, d1_n_1665, d1_n_1666);
  nand d1_g3890 (d1_n_1667, d1_n_907, d1_n_953);
  or d1_g3891 (d1_n_1668, d1_n_907, d1_n_953);
  nand d1_g3892 (d1_n_1057, d1_n_1667, d1_n_1668);
  nand d1_g3893 (d1_n_942, d1_n_1469, d1_n_1470);
  nand d1_g3894 (d1_n_1476, d1_n_1055, a_sel);
  nand d1_g3895 (d1_n_1470, d1_n_1054, b_sel);
  nand d1_g3896 (d1_n_931, d1_n_899, d1_n_1464);
  nand d1_g3897 (d1_n_907, d1_n_898, d1_n_1461);
  nand d1_g3898 (d1_n_1002, d1_n_1457, d1_n_1458);
  nand d1_g3899 (d1_n_1464, d1_n_898, d1_n_930);
  nand d1_g3900 (d1_n_1461, d1_n_899, d1_n_906);
  nand d1_g3901 (d1_n_1001, d1_n_1451, d1_n_1452);
  nand d1_g3902 (d1_n_1669, d1_n_930, d1_n_941);
  or d1_g3903 (d1_n_1670, d1_n_930, d1_n_941);
  nand d1_g3904 (d1_n_1055, d1_n_1669, d1_n_1670);
  nand d1_g3905 (d1_n_1671, d1_n_906, d1_n_941);
  or d1_g3906 (d1_n_1672, d1_n_906, d1_n_941);
  nand d1_g3907 (d1_n_1054, d1_n_1671, d1_n_1672);
  nand d1_g3908 (d1_n_930, d1_n_901, d1_n_1446);
  nand d1_g3909 (d1_n_1458, d1_n_1053, a_sel);
  nand d1_g3910 (d1_n_1452, d1_n_1052, b_sel);
  nand d1_g3911 (d1_n_906, d1_n_900, d1_n_1443);
  nand d1_g3912 (d1_n_982, d1_n_1433, d1_n_1434);
  nand d1_g3913 (d1_n_1673, d1_n_929, d1_n_1000);
  or d1_g3914 (d1_n_1674, d1_n_929, d1_n_1000);
  nand d1_g3915 (d1_n_1053, d1_n_1673, d1_n_1674);
  nand d1_g3916 (d1_n_983, d1_n_1439, d1_n_1440);
  nand d1_g3917 (d1_n_1675, d1_n_905, d1_n_1000);
  or d1_g3918 (d1_n_1676, d1_n_905, d1_n_1000);
  nand d1_g3919 (d1_n_1052, d1_n_1675, d1_n_1676);
  nand d1_g3920 (d1_n_1443, d1_n_901, d1_n_905);
  nand d1_g3921 (d1_n_1446, d1_n_900, d1_n_929);
  nand d1_g3922 (d1_n_905, d1_n_902, d1_n_1425);
  nand d1_g3923 (d1_n_1434, d1_n_1050, a_sel);
  nand d1_g3924 (d1_n_929, d1_n_903, d1_n_1428);
  nand d1_g3925 (d1_n_1440, d1_n_1051, b_sel);
  nand d1_g3926 (d1_n_1425, d1_n_903, d1_n_904);
  nand d1_g3927 (d1_n_1428, d1_n_902, d1_n_928);
  nand d1_g3928 (d1_n_1677, d1_n_928, d1_n_981);
  or d1_g3929 (d1_n_1678, d1_n_928, d1_n_981);
  nand d1_g3930 (d1_n_1050, d1_n_1677, d1_n_1678);
  nand d1_g3931 (d1_n_944, d1_n_1421, d1_n_1422);
  nand d1_g3932 (d1_n_886, d1_n_1415, d1_n_1416);
  nand d1_g3933 (d1_n_1679, d1_n_904, d1_n_981);
  or d1_g3934 (d1_n_1680, d1_n_904, d1_n_981);
  nand d1_g3935 (d1_n_1051, d1_n_1679, d1_n_1680);
  nand d1_g3936 (d1_n_928, d1_n_883, d1_n_1410);
  nand d1_g3937 (d1_n_904, d1_n_882, d1_n_1407);
  nand d1_g3938 (d1_n_1422, d1_n_1020, a_sel);
  nand d1_g3939 (d1_n_1416, d1_n_1015, b_sel);
  nand d1_g3940 (d1_n_1407, d1_n_883, d1_n_885);
  nand d1_g3941 (d1_n_881, d1_n_1397, d1_n_1398);
  nand d1_g3942 (d1_n_992, d1_n_1403, d1_n_1404);
  nand d1_g3943 (d1_n_1681, d1_n_884, d1_n_885);
  or d1_g3944 (d1_n_1682, d1_n_884, d1_n_885);
  nand d1_g3945 (d1_n_1015, d1_n_1681, d1_n_1682);
  nand d1_g3946 (d1_n_1683, d1_n_884, d1_n_927);
  or d1_g3947 (d1_n_1684, d1_n_884, d1_n_927);
  nand d1_g3948 (d1_n_1020, d1_n_1683, d1_n_1684);
  nand d1_g3949 (d1_n_1410, d1_n_882, d1_n_927);
  nand d1_g3950 (d1_n_927, d1_n_871, d1_n_1392);
  nand d1_g3951 (d1_n_885, d1_n_872, d1_n_1389);
  nand d1_g3952 (d1_n_1398, d1_n_1014, b_sel);
  nand d1_g3953 (d1_n_1404, d1_n_1049, a_sel);
  nand d1_g3954 (d1_n_1685, d1_n_873, d1_n_880);
  or d1_g3955 (d1_n_1686, d1_n_873, d1_n_880);
  nand d1_g3956 (d1_n_1014, d1_n_1685, d1_n_1686);
  nand d1_g3957 (d1_n_999, d1_n_1385, d1_n_1386);
  nand d1_g3958 (d1_n_1392, d1_n_872, d1_n_926);
  nand d1_g3959 (d1_n_1389, d1_n_871, d1_n_880);
  nand d1_g3960 (d1_n_1687, d1_n_873, d1_n_926);
  or d1_g3961 (d1_n_1688, d1_n_873, d1_n_926);
  nand d1_g3962 (d1_n_1049, d1_n_1687, d1_n_1688);
  nand d1_g3963 (d1_n_998, d1_n_1379, d1_n_1380);
  nand d1_g3964 (d1_n_880, d1_n_875, d1_n_1371);
  nand d1_g3965 (d1_n_1386, d1_n_1048, b_sel);
  nand d1_g3966 (d1_n_926, d1_n_874, d1_n_1374);
  nand d1_g3967 (d1_n_1380, d1_n_1047, a_sel);
  nand d1_g3968 (d1_n_1689, d1_n_925, d1_n_997);
  or d1_g3969 (d1_n_1690, d1_n_925, d1_n_997);
  nand d1_g3970 (d1_n_1047, d1_n_1689, d1_n_1690);
  nand d1_g3971 (d1_n_1691, d1_n_879, d1_n_997);
  or d1_g3972 (d1_n_1692, d1_n_879, d1_n_997);
  nand d1_g3973 (d1_n_1048, d1_n_1691, d1_n_1692);
  nand d1_g3974 (d1_n_980, d1_n_1367, d1_n_1368);
  nand d1_g3975 (d1_n_1374, d1_n_875, d1_n_925);
  nand d1_g3976 (d1_n_1371, d1_n_874, d1_n_879);
  nand d1_g3977 (d1_n_979, d1_n_1361, d1_n_1362);
  nand d1_g3978 (d1_n_879, d1_n_876, d1_n_1353);
  nand d1_g3979 (d1_n_925, d1_n_877, d1_n_1356);
  nand d1_g3980 (d1_n_1362, d1_n_1045, b_sel);
  nand d1_g3981 (d1_n_1368, d1_n_1046, a_sel);
  nand d1_g3982 (d1_n_1693, d1_n_878, d1_n_978);
  or d1_g3983 (d1_n_1694, d1_n_878, d1_n_978);
  nand d1_g3984 (d1_n_1045, d1_n_1693, d1_n_1694);
  nand d1_g3985 (d1_n_1356, d1_n_876, d1_n_924);
  nand d1_g3986 (d1_n_870, d1_n_1349, d1_n_1350);
  nand d1_g3987 (d1_n_1353, d1_n_877, d1_n_878);
  nand d1_g3988 (d1_n_867, d1_n_1343, d1_n_1344);
  nand d1_g3989 (d1_n_1695, d1_n_924, d1_n_978);
  or d1_g3990 (d1_n_1696, d1_n_924, d1_n_978);
  nand d1_g3991 (d1_n_1046, d1_n_1695, d1_n_1696);
  nand d1_g3992 (d1_n_878, d1_n_860, d1_n_1335);
  nand d1_g3993 (d1_n_924, d1_n_861, d1_n_1338);
  nand d1_g3994 (d1_n_1344, d1_n_1012, a_sel);
  nand d1_g3995 (d1_n_1350, d1_n_1013, b_sel);
  nand d1_g3996 (d1_n_1335, d1_n_861, d1_n_869);
  nand d1_g3997 (d1_n_1697, d1_n_862, d1_n_869);
  or d1_g3998 (d1_n_1698, d1_n_862, d1_n_869);
  nand d1_g3999 (d1_n_1013, d1_n_1697, d1_n_1698);
  nand d1_g4000 (d1_n_1699, d1_n_862, d1_n_866);
  or d1_g4001 (d1_n_1700, d1_n_862, d1_n_866);
  nand d1_g4002 (d1_n_1012, d1_n_1699, d1_n_1700);
  nand d1_g4003 (d1_n_969, d1_n_1325, d1_n_1326);
  nand d1_g4004 (d1_n_970, d1_n_1331, d1_n_1332);
  nand d1_g4005 (d1_n_1338, d1_n_860, d1_n_866);
  nand d1_g4006 (d1_n_866, d1_n_864, d1_n_1317);
  nand d1_g4007 (d1_n_1326, d1_n_1043, b_sel);
  nand d1_g4008 (d1_n_1332, d1_n_1044, a_sel);
  nand d1_g4009 (d1_n_869, d1_n_863, d1_n_1320);
  nand d1_g4010 (d1_n_857, d1_n_1307, d1_n_1308);
  nand d1_g4011 (d1_n_859, d1_n_1313, d1_n_1314);
  nand d1_g4012 (d1_n_1701, d1_n_868, d1_n_968);
  or d1_g4013 (d1_n_1702, d1_n_868, d1_n_968);
  nand d1_g4014 (d1_n_1043, d1_n_1701, d1_n_1702);
  nand d1_g4015 (d1_n_1703, d1_n_865, d1_n_968);
  or d1_g4016 (d1_n_1704, d1_n_865, d1_n_968);
  nand d1_g4017 (d1_n_1044, d1_n_1703, d1_n_1704);
  nand d1_g4018 (d1_n_1317, d1_n_863, d1_n_865);
  nand d1_g4019 (d1_n_1320, d1_n_864, d1_n_868);
  nand d1_g4020 (d1_n_865, d1_n_854, d1_n_1299);
  nand d1_g4021 (d1_n_1308, d1_n_1010, b_sel);
  nand d1_g4022 (d1_n_868, d1_n_853, d1_n_1302);
  nand d1_g4023 (d1_n_1314, d1_n_1011, a_sel);
  nand d1_g4024 (d1_n_844, d1_n_1289, d1_n_1290);
  nand d1_g4025 (d1_n_849, d1_n_1295, d1_n_1296);
  nand d1_g4026 (d1_n_1705, d1_n_855, d1_n_858);
  or d1_g4027 (d1_n_1706, d1_n_855, d1_n_858);
  nand d1_g4028 (d1_n_1011, d1_n_1705, d1_n_1706);
  nand d1_g4029 (d1_n_1299, d1_n_853, d1_n_858);
  nand d1_g4030 (d1_n_1302, d1_n_854, d1_n_856);
  nand d1_g4031 (d1_n_1707, d1_n_855, d1_n_856);
  or d1_g4032 (d1_n_1708, d1_n_855, d1_n_856);
  nand d1_g4033 (d1_n_1010, d1_n_1707, d1_n_1708);
  nand d1_g4034 (d1_n_856, d1_n_834, d1_n_1284);
  nand d1_g4035 (d1_n_1296, d1_n_1009, b_sel);
  nand d1_g4036 (d1_n_1290, d1_n_1008, a_sel);
  nand d1_g4037 (d1_n_858, d1_n_835, d1_n_1281);
  nand d1_g4038 (d1_n_852, d1_n_1277, d1_n_1278);
  nand d1_g4039 (d1_n_1709, d1_n_836, d1_n_848);
  or d1_g4040 (d1_n_1710, d1_n_836, d1_n_848);
  nand d1_g4041 (d1_n_1009, d1_n_1709, d1_n_1710);
  nand d1_g4042 (d1_n_851, d1_n_1271, d1_n_1272);
  nand d1_g4043 (d1_n_1281, d1_n_834, d1_n_843);
  nand d1_g4044 (d1_n_1284, d1_n_835, d1_n_848);
  nand d1_g4045 (d1_n_1711, d1_n_836, d1_n_843);
  or d1_g4046 (d1_n_1712, d1_n_836, d1_n_843);
  nand d1_g4047 (d1_n_1008, d1_n_1711, d1_n_1712);
  nand d1_g4048 (d1_n_848, d1_n_837, d1_n_1266);
  nand d1_g4049 (d1_n_1272, d1_n_1041, a_sel);
  nand d1_g4050 (d1_n_1278, d1_n_1042, b_sel);
  nand d1_g4051 (d1_n_843, d1_n_838, d1_n_1263);
  nand d1_g4052 (d1_n_1266, d1_n_838, d1_n_847);
  nand d1_g4053 (d1_n_991, d1_n_1259, d1_n_1260);
  nand d1_g4054 (d1_n_1713, d1_n_847, d1_n_850);
  or d1_g4055 (d1_n_1714, d1_n_847, d1_n_850);
  nand d1_g4056 (d1_n_1042, d1_n_1713, d1_n_1714);
  nand d1_g4057 (d1_n_1263, d1_n_837, d1_n_842);
  nand d1_g4058 (d1_n_967, d1_n_1253, d1_n_1254);
  nand d1_g4059 (d1_n_1715, d1_n_842, d1_n_850);
  or d1_g4060 (d1_n_1716, d1_n_842, d1_n_850);
  nand d1_g4061 (d1_n_1041, d1_n_1715, d1_n_1716);
  nand d1_g4062 (d1_n_1260, d1_n_1030, a_sel);
  nand d1_g4063 (d1_n_842, d1_n_840, d1_n_1245);
  nand d1_g4064 (d1_n_1254, d1_n_1025, b_sel);
  nand d1_g4065 (d1_n_847, d1_n_841, d1_n_1248);
  nand d1_g4066 (d1_n_1717, d1_n_966, d1_n_846);
  or d1_g4067 (d1_n_1718, d1_n_966, d1_n_846);
  nand d1_g4068 (d1_n_1025, d1_n_1717, d1_n_1718);
  nand d1_g4069 (d1_n_1719, d1_n_839, d1_n_966);
  or d1_g4070 (d1_n_1720, d1_n_839, d1_n_966);
  nand d1_g4071 (d1_n_1030, d1_n_1719, d1_n_1720);
  nand d1_g4072 (d1_n_990, d1_n_1241, d1_n_1242);
  nand d1_g4073 (d1_n_833, d1_n_1235, d1_n_1236);
  nand d1_g4074 (d1_n_1245, d1_n_839, d1_n_841);
  nand d1_g4075 (d1_n_1248, d1_n_840, d1_n_846);
  nand d1_g4076 (d1_n_846, d1_n_830, d1_n_1230);
  nand d1_g4077 (d1_n_1236, d1_n_1007, a_sel);
  nand d1_g4078 (d1_n_839, d1_n_829, d1_n_1227);
  nand d1_g4079 (d1_n_1242, d1_n_1040, b_sel);
  nand d1_g4080 (d1_n_1721, d1_n_831, d1_n_832);
  or d1_g4081 (d1_n_1722, d1_n_831, d1_n_832);
  nand d1_g4082 (d1_n_1007, d1_n_1721, d1_n_1722);
  nand d1_g4083 (d1_n_1230, d1_n_829, d1_n_845);
  nand d1_g4084 (d1_n_825, d1_n_1217, d1_n_1218);
  nand d1_g4085 (d1_n_828, d1_n_1223, d1_n_1224);
  nand d1_g4086 (d1_n_1227, d1_n_830, d1_n_832);
  nand d1_g4087 (d1_n_1723, d1_n_831, d1_n_845);
  or d1_g4088 (d1_n_1724, d1_n_831, d1_n_845);
  nand d1_g4089 (d1_n_1040, d1_n_1723, d1_n_1724);
  nand d1_g4090 (d1_n_845, d1_n_818, d1_n_1212);
  nand d1_g4091 (d1_n_1218, d1_n_1067, a_sel);
  nand d1_g4092 (d1_n_1224, d1_n_1068, b_sel);
  nand d1_g4093 (d1_n_832, d1_n_819, d1_n_1209);
  nand d1_g4094 (d1_n_1725, d1_n_820, d1_n_824);
  or d1_g4095 (d1_n_1726, d1_n_820, d1_n_824);
  nand d1_g4096 (d1_n_1067, d1_n_1725, d1_n_1726);
  nand d1_g4097 (d1_n_965, d1_n_1199, d1_n_1200);
  nand d1_g4098 (d1_n_1212, d1_n_819, d1_n_827);
  nand d1_g4099 (d1_n_1727, d1_n_820, d1_n_827);
  or d1_g4100 (d1_n_1728, d1_n_820, d1_n_827);
  nand d1_g4101 (d1_n_1068, d1_n_1727, d1_n_1728);
  nand d1_g4102 (d1_n_989, d1_n_1205, d1_n_1206);
  nand d1_g4103 (d1_n_1209, d1_n_818, d1_n_824);
  nand d1_g4104 (d1_n_824, d1_n_822, d1_n_1191);
  nand d1_g4105 (d1_n_1206, d1_n_1029, b_sel);
  nand d1_g4106 (d1_n_1200, d1_n_1024, a_sel);
  nand d1_g4107 (d1_n_827, d1_n_821, d1_n_1194);
  nand d1_g4108 (d1_n_817, d1_n_1187, d1_n_1188);
  nand d1_g4109 (d1_n_808, d1_n_1181, d1_n_1182);
  nand d1_g4110 (d1_n_1729, d1_n_964, d1_n_823);
  or d1_g4111 (d1_n_1730, d1_n_964, d1_n_823);
  nand d1_g4112 (d1_n_1024, d1_n_1729, d1_n_1730);
  nand d1_g4113 (d1_n_1191, d1_n_821, d1_n_823);
  nand d1_g4114 (d1_n_1731, d1_n_826, d1_n_964);
  or d1_g4115 (d1_n_1732, d1_n_826, d1_n_964);
  nand d1_g4116 (d1_n_1029, d1_n_1731, d1_n_1732);
  nand d1_g4117 (d1_n_1194, d1_n_822, d1_n_826);
  nand d1_g4118 (d1_n_1182, d1_n_1019, a_sel);
  nand d1_g4119 (d1_n_1188, d1_n_1022, b_sel);
  nand d1_g4120 (d1_n_823, d1_n_790, d1_n_1176);
  nand d1_g4121 (d1_n_826, d1_n_789, d1_n_1173);
  nand d1_g4122 (d1_n_974, d1_n_1169, d1_n_1170);
  nand d1_g4123 (d1_n_1733, d1_n_791, d1_n_816);
  or d1_g4124 (d1_n_1734, d1_n_791, d1_n_816);
  nand d1_g4125 (d1_n_1022, d1_n_1733, d1_n_1734);
  nand d1_g4126 (d1_n_1176, d1_n_789, d1_n_807);
  nand d1_g4127 (d1_n_815, d1_n_1163, d1_n_1164);
  nand d1_g4128 (d1_n_1735, d1_n_791, d1_n_807);
  or d1_g4129 (d1_n_1736, d1_n_791, d1_n_807);
  nand d1_g4130 (d1_n_1019, d1_n_1735, d1_n_1736);
  nand d1_g4131 (d1_n_1173, d1_n_790, d1_n_816);
  nand d1_g4132 (d1_n_807, d1_n_792, d1_n_1155);
  nand d1_g4133 (d1_n_1170, d1_n_1039, a_sel);
  nand d1_g4134 (d1_n_816, d1_n_793, d1_n_1158);
  nand d1_g4135 (d1_n_1164, d1_n_1017, b_sel);
  nand d1_g4136 (d1_n_963, d1_n_1151, d1_n_1152);
  nand d1_g4137 (d1_n_1155, d1_n_793, d1_n_806);
  nand d1_g4138 (d1_n_1737, d1_n_809, d1_n_814);
  or d1_g4139 (d1_n_1738, d1_n_809, d1_n_814);
  nand d1_g4140 (d1_n_1017, d1_n_1737, d1_n_1738);
  nand d1_g4141 (d1_n_1158, d1_n_792, d1_n_814);
  nand d1_g4142 (d1_n_1739, d1_n_806, d1_n_809);
  or d1_g4143 (d1_n_1740, d1_n_806, d1_n_809);
  nand d1_g4144 (d1_n_1039, d1_n_1739, d1_n_1740);
  nand d1_g4145 (d1_n_988, d1_n_1145, d1_n_1146);
  nand d1_g4146 (d1_n_814, d1_n_794, d1_n_1140);
  nand d1_g4147 (d1_n_1146, d1_n_1028, b_sel);
  nand d1_g4148 (d1_n_1152, d1_n_1038, a_sel);
  nand d1_g4149 (d1_n_806, d1_n_795, d1_n_1137);
  nand d1_g4150 (d1_n_1741, d1_n_805, d1_n_962);
  or d1_g4151 (d1_n_1742, d1_n_805, d1_n_962);
  nand d1_g4152 (d1_n_1038, d1_n_1741, d1_n_1742);
  nand d1_g4153 (d1_n_1140, d1_n_795, d1_n_813);
  nand d1_g4154 (d1_n_961, d1_n_1127, d1_n_1128);
  nand d1_g4155 (d1_n_1743, d1_n_813, d1_n_962);
  or d1_g4156 (d1_n_1744, d1_n_813, d1_n_962);
  nand d1_g4157 (d1_n_1028, d1_n_1743, d1_n_1744);
  nand d1_g4158 (d1_n_1137, d1_n_794, d1_n_805);
  nand d1_g4159 (d1_n_973, d1_n_1133, d1_n_1134);
  nand d1_g4160 (d1_n_1134, d1_n_1037, a_sel);
  nand d1_g4161 (d1_n_805, d1_n_797, d1_n_1119);
  nand d1_g4162 (d1_n_813, d1_n_796, d1_n_1122);
  nand d1_g4163 (d1_n_1128, d1_n_1036, b_sel);
  nand d1_g4164 (d1_n_1745, d1_n_804, d1_n_960);
  or d1_g4165 (d1_n_1746, d1_n_804, d1_n_960);
  nand d1_g4166 (d1_n_1037, d1_n_1745, d1_n_1746);
  nand d1_g4167 (d1_n_1119, d1_n_796, d1_n_804);
  nand d1_g4168 (d1_n_984, d1_n_1097, d1_n_1098);
  nand d1_g4169 (d1_n_1122, d1_n_797, d1_n_812);
  nand d1_g4170 (d1_n_959, d1_n_1103, d1_n_1104);
  nand d1_g4171 (d1_n_1747, d1_n_812, d1_n_960);
  or d1_g4172 (d1_n_1748, d1_n_812, d1_n_960);
  nand d1_g4173 (d1_n_1036, d1_n_1747, d1_n_1748);
  nand d1_g4174 (d1_n_812, d1_n_803, d1_n_1092);
  nand d1_g4175 (d1_n_987, d1_n_1115, d1_n_1116);
  nand d1_g4176 (d1_n_986, d1_n_1109, d1_n_1110);
  nand d1_g4177 (d1_n_1104, d1_n_1033, b_sel);
  nand d1_g4178 (d1_n_804, d1_n_802, d1_n_1089);
  nand d1_g4179 (d1_n_1098, d1_n_1027, a_sel);
  nand d1_g4180 (d1_n_995, d1_n_1079, d1_n_1080);
  nand d1_g4181 (d1_n_1116, d1_n_1035, b_sel);
  nand d1_g4182 (d1_n_996, d1_n_1085, d1_n_1086);
  nand d1_g4183 (d1_n_1749, d1_n_801, d1_n_958);
  or d1_g4184 (d1_n_1750, d1_n_801, d1_n_958);
  nand d1_g4185 (d1_n_1027, d1_n_1749, d1_n_1750);
  nand d1_g4186 (d1_n_1089, d1_n_801, d1_n_803);
  nand d1_g4187 (d1_n_1092, d1_n_802, d1_n_811);
  nand d1_g4188 (d1_n_1110, d1_n_1034, a_sel);
  nand d1_g4189 (d1_n_1751, d1_n_811, d1_n_958);
  or d1_g4190 (d1_n_1752, d1_n_811, d1_n_958);
  nand d1_g4191 (d1_n_1033, d1_n_1751, d1_n_1752);
  nand d1_g4192 (d1_n_1086, d1_n_1006, a_sel);
  nand d1_g4193 (d1_n_1080, d1_n_1006, b_sel);
  nand d1_g4194 (d1_n_1753, d1_n_810, d1_n_985);
  or d1_g4195 (d1_n_1754, d1_n_810, d1_n_985);
  nand d1_g4196 (d1_n_1035, d1_n_1753, d1_n_1754);
  nand d1_g4197 (d1_n_1755, d1_n_800, d1_n_985);
  or d1_g4198 (d1_n_1756, d1_n_800, d1_n_985);
  nand d1_g4199 (d1_n_1034, d1_n_1755, d1_n_1756);
  nand d1_g4200 (d1_n_801, d1_n_798, d1_n_1071);
  nand d1_g4201 (d1_n_811, d1_n_799, d1_n_1074);
  nand d1_g4202 (d1_n_1074, d1_n_798, d1_n_810);
  nand d1_g4203 (d1_n_1071, d1_n_799, d1_n_800);
  nand d1_g4204 (d1_n_981, d1_n_902, d1_n_903);
  nand d1_g4205 (d1_n_978, d1_n_876, d1_n_877);
  nand d1_g4206 (d1_n_975, d1_n_896, d1_n_897);
  or d1_g4207 (d1_n_1079, b_sel, wc120);
  not gc120 (wc120, in2[0]);
  or d1_g4208 (d1_n_1085, a_sel, wc121);
  not gc121 (wc121, in1[0]);
  or d1_g4209 (d1_n_1097, a_sel, wc122);
  not gc122 (wc122, in1[2]);
  or d1_g4210 (d1_n_1103, b_sel, wc123);
  not gc123 (wc123, in2[2]);
  or d1_g4211 (d1_n_1109, a_sel, wc124);
  not gc124 (wc124, in1[1]);
  or d1_g4212 (d1_n_1115, b_sel, wc125);
  not gc125 (wc125, in2[1]);
  or d1_g4213 (d1_n_1127, b_sel, wc126);
  not gc126 (wc126, in2[3]);
  or d1_g4214 (d1_n_1133, a_sel, wc127);
  not gc127 (wc127, in1[3]);
  or d1_g4215 (d1_n_1145, b_sel, wc128);
  not gc128 (wc128, in2[4]);
  or d1_g4216 (d1_n_1151, a_sel, wc129);
  not gc129 (wc129, in1[4]);
  or d1_g4217 (d1_n_1163, b_sel, wc130);
  not gc130 (wc130, in2[5]);
  or d1_g4218 (d1_n_1169, a_sel, wc131);
  not gc131 (wc131, in1[5]);
  or d1_g4219 (d1_n_1181, a_sel, wc132);
  not gc132 (wc132, in1[6]);
  or d1_g4220 (d1_n_1187, b_sel, wc133);
  not gc133 (wc133, in2[6]);
  or d1_g4221 (d1_n_1199, a_sel, wc134);
  not gc134 (wc134, in1[7]);
  or d1_g4222 (d1_n_1205, b_sel, wc135);
  not gc135 (wc135, in2[7]);
  or d1_g4223 (d1_n_1217, a_sel, wc136);
  not gc136 (wc136, in1[8]);
  or d1_g4224 (d1_n_1223, b_sel, wc137);
  not gc137 (wc137, in2[8]);
  or d1_g4225 (d1_n_1235, a_sel, wc138);
  not gc138 (wc138, in1[9]);
  or d1_g4226 (d1_n_1241, b_sel, wc139);
  not gc139 (wc139, in2[9]);
  or d1_g4227 (d1_n_1253, b_sel, wc140);
  not gc140 (wc140, in2[10]);
  or d1_g4228 (d1_n_1259, a_sel, wc141);
  not gc141 (wc141, in1[10]);
  or d1_g4229 (d1_n_1271, a_sel, wc142);
  not gc142 (wc142, in1[11]);
  or d1_g4230 (d1_n_1277, b_sel, wc143);
  not gc143 (wc143, in2[11]);
  or d1_g4231 (d1_n_1289, a_sel, wc144);
  not gc144 (wc144, in1[12]);
  or d1_g4232 (d1_n_1295, b_sel, wc145);
  not gc145 (wc145, in2[12]);
  or d1_g4233 (d1_n_1307, b_sel, wc146);
  not gc146 (wc146, in2[13]);
  or d1_g4234 (d1_n_1313, a_sel, wc147);
  not gc147 (wc147, in1[13]);
  or d1_g4235 (d1_n_1325, b_sel, wc148);
  not gc148 (wc148, in2[14]);
  or d1_g4236 (d1_n_1331, a_sel, wc149);
  not gc149 (wc149, in1[14]);
  or d1_g4237 (d1_n_1343, a_sel, wc150);
  not gc150 (wc150, in1[15]);
  or d1_g4238 (d1_n_1349, b_sel, wc151);
  not gc151 (wc151, in2[15]);
  or d1_g4239 (d1_n_1361, b_sel, wc152);
  not gc152 (wc152, in2[16]);
  or d1_g4240 (d1_n_1367, a_sel, wc153);
  not gc153 (wc153, in1[16]);
  or d1_g4241 (d1_n_1379, a_sel, wc154);
  not gc154 (wc154, in1[17]);
  or d1_g4242 (d1_n_1385, b_sel, wc155);
  not gc155 (wc155, in2[17]);
  or d1_g4243 (d1_n_1397, b_sel, wc156);
  not gc156 (wc156, in2[18]);
  or d1_g4244 (d1_n_1403, a_sel, wc157);
  not gc157 (wc157, in1[18]);
  or d1_g4245 (d1_n_1415, b_sel, wc158);
  not gc158 (wc158, in2[19]);
  or d1_g4246 (d1_n_1421, a_sel, wc159);
  not gc159 (wc159, in1[19]);
  or d1_g4247 (d1_n_1433, a_sel, wc160);
  not gc160 (wc160, in1[20]);
  or d1_g4248 (d1_n_1439, b_sel, wc161);
  not gc161 (wc161, in2[20]);
  or d1_g4249 (d1_n_1451, b_sel, wc162);
  not gc162 (wc162, in2[21]);
  or d1_g4250 (d1_n_1457, a_sel, wc163);
  not gc163 (wc163, in1[21]);
  or d1_g4251 (d1_n_1469, b_sel, wc164);
  not gc164 (wc164, in2[22]);
  or d1_g4252 (d1_n_1475, a_sel, wc165);
  not gc165 (wc165, in1[22]);
  or d1_g4253 (d1_n_1487, a_sel, wc166);
  not gc166 (wc166, in1[23]);
  or d1_g4254 (d1_n_1493, b_sel, wc167);
  not gc167 (wc167, in2[23]);
  or d1_g4255 (d1_n_1505, b_sel, wc168);
  not gc168 (wc168, in2[24]);
  or d1_g4256 (d1_n_1511, a_sel, wc169);
  not gc169 (wc169, in1[24]);
  or d1_g4257 (d1_n_1523, a_sel, wc170);
  not gc170 (wc170, in1[25]);
  or d1_g4258 (d1_n_1529, b_sel, wc171);
  not gc171 (wc171, in2[25]);
  or d1_g4259 (d1_n_1541, b_sel, wc172);
  not gc172 (wc172, in2[26]);
  or d1_g4260 (d1_n_1547, a_sel, wc173);
  not gc173 (wc173, in1[26]);
  or d1_g4262 (d1_n_897, wc174, d1_tb[24]);
  not gc174 (wc174, d1_ta[24]);
  nand d1_g4265 (d1_n_887, d1_com_lt_232_13_n_226,
       d1_com_lt_232_13_n_225);
  or d1_g4266 (d1_n_1559, a_sel, wc175);
  not gc175 (wc175, in1[27]);
  or d1_g4267 (d1_n_877, wc176, d1_tb[16]);
  not gc176 (wc176, d1_ta[16]);
  or d1_g4268 (d1_n_1565, b_sel, wc177);
  not gc177 (wc177, in2[27]);
  or d1_g4269 (d1_n_1577, a_sel, wc178);
  not gc178 (wc178, in1[28]);
  or d1_g4270 (d1_n_1583, b_sel, wc179);
  not gc179 (wc179, in2[28]);
  or d1_g4271 (d1_n_1601, b_sel, wc180);
  not gc180 (wc180, in2[29]);
  or d1_g4272 (d1_n_1607, a_sel, wc181);
  not gc181 (wc181, in1[29]);
  or d1_g4273 (d1_n_1613, a_sel, wc182);
  not gc182 (wc182, in1[30]);
  or d1_g4274 (d1_n_1619, b_sel, wc183);
  not gc183 (wc183, in2[30]);
  or d1_g4275 (d1_n_1625, b_sel, wc184);
  not gc184 (wc184, in2[31]);
  or d1_g4276 (d1_n_1631, a_sel, wc185);
  not gc185 (wc185, in1[31]);
  CDN_flop \d1_ra_rnout_reg[0] (.clk (clk), .d (d1_n_996), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[0]));
  CDN_flop \d1_ra_rnout_reg[1] (.clk (clk), .d (d1_n_986), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[1]));
  CDN_flop \d1_ra_rnout_reg[2] (.clk (clk), .d (d1_n_984), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[2]));
  CDN_flop \d1_ra_rnout_reg[3] (.clk (clk), .d (d1_n_973), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[3]));
  CDN_flop \d1_ra_rnout_reg[4] (.clk (clk), .d (d1_n_963), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[4]));
  CDN_flop \d1_ra_rnout_reg[5] (.clk (clk), .d (d1_n_974), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[5]));
  CDN_flop \d1_ra_rnout_reg[6] (.clk (clk), .d (d1_n_808), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[6]));
  CDN_flop \d1_ra_rnout_reg[7] (.clk (clk), .d (d1_n_965), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[7]));
  CDN_flop \d1_ra_rnout_reg[8] (.clk (clk), .d (d1_n_825), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[8]));
  CDN_flop \d1_ra_rnout_reg[9] (.clk (clk), .d (d1_n_833), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[9]));
  CDN_flop \d1_ra_rnout_reg[10] (.clk (clk), .d (d1_n_991), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[10]));
  CDN_flop \d1_ra_rnout_reg[11] (.clk (clk), .d (d1_n_851), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[11]));
  CDN_flop \d1_ra_rnout_reg[12] (.clk (clk), .d (d1_n_844), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[12]));
  CDN_flop \d1_ra_rnout_reg[13] (.clk (clk), .d (d1_n_859), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[13]));
  CDN_flop \d1_ra_rnout_reg[14] (.clk (clk), .d (d1_n_970), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[14]));
  CDN_flop \d1_ra_rnout_reg[15] (.clk (clk), .d (d1_n_867), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[15]));
  CDN_flop \d1_ra_rnout_reg[16] (.clk (clk), .d (d1_n_980), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[16]));
  CDN_flop \d1_ra_rnout_reg[17] (.clk (clk), .d (d1_n_998), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[17]));
  CDN_flop \d1_ra_rnout_reg[18] (.clk (clk), .d (d1_n_992), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[18]));
  CDN_flop \d1_ra_rnout_reg[19] (.clk (clk), .d (d1_n_944), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[19]));
  CDN_flop \d1_ra_rnout_reg[20] (.clk (clk), .d (d1_n_982), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[20]));
  CDN_flop \d1_ra_rnout_reg[21] (.clk (clk), .d (d1_n_1002), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[21]));
  CDN_flop \d1_ra_rnout_reg[22] (.clk (clk), .d (d1_n_949), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[22]));
  CDN_flop \d1_ra_rnout_reg[23] (.clk (clk), .d (d1_n_954), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[23]));
  CDN_flop \d1_ra_rnout_reg[24] (.clk (clk), .d (d1_n_977), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[24]));
  CDN_flop \d1_ra_rnout_reg[25] (.clk (clk), .d (d1_n_1004), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[25]));
  CDN_flop \d1_ra_rnout_reg[26] (.clk (clk), .d (d1_n_943), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[26]));
  CDN_flop \d1_ra_rnout_reg[27] (.clk (clk), .d (d1_n_957), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[27]));
  CDN_flop \d1_ra_rnout_reg[28] (.clk (clk), .d (d1_n_937), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[28]));
  CDN_flop \d1_ra_rnout_reg[29] (.clk (clk), .d (d1_n_952), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[29]));
  CDN_flop \d1_ra_rnout_reg[30] (.clk (clk), .d (d1_n_972), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[30]));
  CDN_flop \d1_ra_rnout_reg[31] (.clk (clk), .d (d1_n_948), .sena
       (a_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_ta[31]));
  CDN_flop \d1_rb_rnout_reg[0] (.clk (clk), .d (d1_n_995), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[0]));
  CDN_flop \d1_rb_rnout_reg[1] (.clk (clk), .d (d1_n_987), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[1]));
  CDN_flop \d1_rb_rnout_reg[2] (.clk (clk), .d (d1_n_959), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[2]));
  CDN_flop \d1_rb_rnout_reg[3] (.clk (clk), .d (d1_n_961), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[3]));
  CDN_flop \d1_rb_rnout_reg[4] (.clk (clk), .d (d1_n_988), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[4]));
  CDN_flop \d1_rb_rnout_reg[5] (.clk (clk), .d (d1_n_815), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[5]));
  CDN_flop \d1_rb_rnout_reg[6] (.clk (clk), .d (d1_n_817), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[6]));
  CDN_flop \d1_rb_rnout_reg[7] (.clk (clk), .d (d1_n_989), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[7]));
  CDN_flop \d1_rb_rnout_reg[8] (.clk (clk), .d (d1_n_828), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[8]));
  CDN_flop \d1_rb_rnout_reg[9] (.clk (clk), .d (d1_n_990), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[9]));
  CDN_flop \d1_rb_rnout_reg[10] (.clk (clk), .d (d1_n_967), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[10]));
  CDN_flop \d1_rb_rnout_reg[11] (.clk (clk), .d (d1_n_852), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[11]));
  CDN_flop \d1_rb_rnout_reg[12] (.clk (clk), .d (d1_n_849), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[12]));
  CDN_flop \d1_rb_rnout_reg[13] (.clk (clk), .d (d1_n_857), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[13]));
  CDN_flop \d1_rb_rnout_reg[14] (.clk (clk), .d (d1_n_969), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[14]));
  CDN_flop \d1_rb_rnout_reg[15] (.clk (clk), .d (d1_n_870), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[15]));
  CDN_flop \d1_rb_rnout_reg[16] (.clk (clk), .d (d1_n_979), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[16]));
  CDN_flop \d1_rb_rnout_reg[17] (.clk (clk), .d (d1_n_999), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[17]));
  CDN_flop \d1_rb_rnout_reg[18] (.clk (clk), .d (d1_n_881), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[18]));
  CDN_flop \d1_rb_rnout_reg[19] (.clk (clk), .d (d1_n_886), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[19]));
  CDN_flop \d1_rb_rnout_reg[20] (.clk (clk), .d (d1_n_983), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[20]));
  CDN_flop \d1_rb_rnout_reg[21] (.clk (clk), .d (d1_n_1001), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[21]));
  CDN_flop \d1_rb_rnout_reg[22] (.clk (clk), .d (d1_n_942), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[22]));
  CDN_flop \d1_rb_rnout_reg[23] (.clk (clk), .d (d1_n_955), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[23]));
  CDN_flop \d1_rb_rnout_reg[24] (.clk (clk), .d (d1_n_976), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[24]));
  CDN_flop \d1_rb_rnout_reg[25] (.clk (clk), .d (d1_n_1005), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[25]));
  CDN_flop \d1_rb_rnout_reg[26] (.clk (clk), .d (d1_n_940), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[26]));
  CDN_flop \d1_rb_rnout_reg[27] (.clk (clk), .d (d1_n_993), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[27]));
  CDN_flop \d1_rb_rnout_reg[28] (.clk (clk), .d (d1_n_938), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[28]));
  CDN_flop \d1_rb_rnout_reg[29] (.clk (clk), .d (d1_n_951), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[29]));
  CDN_flop \d1_rb_rnout_reg[30] (.clk (clk), .d (d1_n_994), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[30]));
  CDN_flop \d1_rb_rnout_reg[31] (.clk (clk), .d (d1_n_922), .sena
       (b_ld), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (d1_tb[31]));
  CDN_flop \d1_rout_rnout_reg[0] (.clk (clk), .d (d1_tb[0]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[0]));
  CDN_flop \d1_rout_rnout_reg[1] (.clk (clk), .d (d1_tb[1]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[1]));
  CDN_flop \d1_rout_rnout_reg[2] (.clk (clk), .d (d1_tb[2]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[2]));
  CDN_flop \d1_rout_rnout_reg[3] (.clk (clk), .d (d1_tb[3]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[3]));
  CDN_flop \d1_rout_rnout_reg[4] (.clk (clk), .d (d1_tb[4]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[4]));
  CDN_flop \d1_rout_rnout_reg[5] (.clk (clk), .d (d1_tb[5]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[5]));
  CDN_flop \d1_rout_rnout_reg[6] (.clk (clk), .d (d1_tb[6]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[6]));
  CDN_flop \d1_rout_rnout_reg[7] (.clk (clk), .d (d1_tb[7]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[7]));
  CDN_flop \d1_rout_rnout_reg[8] (.clk (clk), .d (d1_tb[8]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[8]));
  CDN_flop \d1_rout_rnout_reg[9] (.clk (clk), .d (d1_tb[9]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[9]));
  CDN_flop \d1_rout_rnout_reg[10] (.clk (clk), .d (d1_tb[10]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[10]));
  CDN_flop \d1_rout_rnout_reg[11] (.clk (clk), .d (d1_tb[11]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[11]));
  CDN_flop \d1_rout_rnout_reg[12] (.clk (clk), .d (d1_tb[12]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[12]));
  CDN_flop \d1_rout_rnout_reg[13] (.clk (clk), .d (d1_tb[13]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[13]));
  CDN_flop \d1_rout_rnout_reg[14] (.clk (clk), .d (d1_tb[14]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[14]));
  CDN_flop \d1_rout_rnout_reg[15] (.clk (clk), .d (d1_tb[15]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[15]));
  CDN_flop \d1_rout_rnout_reg[16] (.clk (clk), .d (d1_tb[16]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[16]));
  CDN_flop \d1_rout_rnout_reg[17] (.clk (clk), .d (d1_tb[17]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[17]));
  CDN_flop \d1_rout_rnout_reg[18] (.clk (clk), .d (d1_tb[18]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[18]));
  CDN_flop \d1_rout_rnout_reg[19] (.clk (clk), .d (d1_tb[19]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[19]));
  CDN_flop \d1_rout_rnout_reg[20] (.clk (clk), .d (d1_tb[20]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[20]));
  CDN_flop \d1_rout_rnout_reg[21] (.clk (clk), .d (d1_tb[21]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[21]));
  CDN_flop \d1_rout_rnout_reg[22] (.clk (clk), .d (d1_tb[22]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[22]));
  CDN_flop \d1_rout_rnout_reg[23] (.clk (clk), .d (d1_tb[23]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[23]));
  CDN_flop \d1_rout_rnout_reg[24] (.clk (clk), .d (d1_tb[24]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[24]));
  CDN_flop \d1_rout_rnout_reg[25] (.clk (clk), .d (d1_tb[25]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[25]));
  CDN_flop \d1_rout_rnout_reg[26] (.clk (clk), .d (d1_tb[26]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[26]));
  CDN_flop \d1_rout_rnout_reg[27] (.clk (clk), .d (d1_tb[27]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[27]));
  CDN_flop \d1_rout_rnout_reg[28] (.clk (clk), .d (d1_tb[28]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[28]));
  CDN_flop \d1_rout_rnout_reg[29] (.clk (clk), .d (d1_tb[29]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[29]));
  CDN_flop \d1_rout_rnout_reg[30] (.clk (clk), .d (d1_tb[30]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[30]));
  CDN_flop \d1_rout_rnout_reg[31] (.clk (clk), .d (d1_tb[31]), .sena
       (done), .aclr (1'b0), .apre (1'b0), .srl (rst), .srd (1'b0), .q
       (out[31]));
  or g445 (c1_n_126, n_309, wc186);
  not gc186 (wc186, c1_n_58);
  or g447 (n_309, n_308, wc187);
  not gc187 (wc187, c1_n_291);
  nand g449 (c1_n_124, n_329, n_330);
  nand g450 (n_308, n_307, n_293);
  nand g451 (a_ld, n_314, n_315);
  nand g453 (a_sel, n_315, c1_n_153);
  nand g454 (n_329, n_294, c1_n_58);
  nand g455 (b_sel, c1_n_153, n_321);
  or g460 (n_330, n_328, c1_cState[2]);
  or g461 (c1_n_153, c1_n_291, c1_cState[2]);
  or g462 (n_321, n_293, wc188);
  not gc188 (wc188, c1_cState[2]);
  or g467 (n_315, c1_n_58, c1_cState[0]);
  or g468 (n_314, n_293, c1_cState[2]);
  nand g469 (n_294, c1_n_291, n_318);
  nand g471 (n_370, c1_cState[1], c1_cState[2]);
  or g472 (n_371, c1_cState[1], c1_cState[2]);
  nand g473 (c1_n_7, n_370, n_371);
  nand g474 (n_297, c1_cState[0], c1_cState[1]);
  or g478 (n_318, wc189, c1_cState[0]);
  not gc189 (wc189, go);
  or g480 (c1_n_291, c1_cState[0], wc190);
  not gc190 (wc190, c1_cState[1]);
  or g481 (n_293, wc191, c1_cState[1]);
  not gc191 (wc191, c1_cState[0]);
  not g482 (b_ld, n_293);
  or g483 (c1_n_58, c1_cState[1], wc192);
  not gc192 (wc192, c1_cState[2]);
  and g484 (done, c1_cState[2], wc193);
  not gc193 (wc193, n_297);
  and g485 (n_368, c1_n_291, wc194);
  not gc194 (wc194, c1_n_7);
  or g4281 (n_307, n_306, wc195);
  not gc195 (wc195, d1_com_gt_230_8_n_132);
  nand g4282 (n_328, c1_cState[1], d1_com_gt_230_8_n_132);
  or g4285 (d1_com_n_865, d1_com_n_811, wc196);
  not gc196 (wc196, d1_ta[3]);
  or g4286 (d1_com_n_866, d1_tb[3], d1_com_n_811);
  or g4288 (d1_com_n_1006, wc197, d1_com_n_671);
  not gc197 (wc197, d1_n_818);
  or g4290 (d1_com_n_1086, wc198, d1_com_lt_232_13_n_384);
  not gc198 (wc198, d1_com_n_688);
  or g4292 (n_306, c1_n_7, d1_com_n_1088);
endmodule

`ifdef RC_CDN_GENERIC_GATE
`else
module CDN_flop(clk, d, sena, aclr, apre, srl, srd, q);
  input clk, d, sena, aclr, apre, srl, srd;
  output q;
  wire clk, d, sena, aclr, apre, srl, srd;
  wire q;
  reg  qi;
  assign #1 q = qi;
  always 
    @(posedge clk or posedge apre or posedge aclr) 
      if (aclr) 
        qi <= 0;
      else if (apre) 
          qi <= 1;
        else if (srl) 
            qi <= srd;
          else begin
            if (sena) 
              qi <= d;
          end
  initial 
    qi <= 1'b0;
endmodule
`endif
`ifdef RC_CDN_GENERIC_GATE
`else
module CDN_latch(ena, d, aclr, apre, q);
  input ena, d, aclr, apre;
  output q;
  wire ena, d, aclr, apre;
  wire q;
  reg  qi;
  assign #1 q = qi;
  always 
    @(d or ena or apre or aclr) 
      if (aclr) 
        qi <= 0;
      else if (apre) 
          qi <= 1;
        else begin
          if (ena) 
            qi <= d;
        end
  initial 
    qi <= 1'b0;
endmodule
`endif
@genus:root: 13> syn_map
Info    : Mapping. [SYNTH-4]
        : Mapping 'GCD' using 'high' effort.
Mapper: Libraries have:
	domain _default_: 291 combo usable cells and 126 sequential usable cells
TNS Restructuring config:  at stage: map applied.
PBS_TechMap-Start - Elapsed_Time 0, CPU_Time 0.0
stamp 'PBS_TechMap-Start' being created for table 'pbs_debug'

  Total Time (Wall) |  Stage Time (Wall)  |   % (Wall)   |    Date - Time     |  Memory   | Stage
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:23(00:04:52) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:37 (Sep19) |  231.4 MB | PBS_Generic-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:08(00:00:08) |  80.0( 15.7) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic_Opt-Post
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic-Postgen HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:33(00:05:43) |  00:00:02(00:00:43) |  20.0( 84.3) |   19:27:28 (Sep19) |  251.0 MB | PBS_TechMap-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
Number of threads: 8 * 1   (id: pbs_debug, time_info v1.57)
Info: (*N*) indicates data that was populated from previously saved time_info database
Info: CPU time includes time of parent + longest thread
PBS_TechMap-Premap HBO Optimizations - Elapsed_Time 0, CPU_Time 0.0
stamp 'PBS_TechMap-Premap HBO Optimizations' being created for table 'pbs_debug'

  Total Time (Wall) |  Stage Time (Wall)  |   % (Wall)   |    Date - Time     |  Memory   | Stage
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:23(00:04:52) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:37 (Sep19) |  231.4 MB | PBS_Generic-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:08(00:00:08) |  80.0( 15.7) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic_Opt-Post
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic-Postgen HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:33(00:05:43) |  00:00:02(00:00:43) |  20.0( 84.3) |   19:27:28 (Sep19) |  251.0 MB | PBS_TechMap-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:33(00:05:43) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:27:28 (Sep19) |  251.0 MB | PBS_TechMap-Premap HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
Number of threads: 8 * 1   (id: pbs_debug, time_info v1.57)
Info: (*N*) indicates data that was populated from previously saved time_info database
Info: CPU time includes time of parent + longest thread
Info    : Partition Based Synthesis execution skipped. [PHYS-752]
        : Design size is less than the partition size '100000' for distributed mapping optimization to kick in.
Mapper: Libraries have:
	domain _default_: 291 combo usable cells and 126 sequential usable cells
Warning : Not obtained requested number of super thread servers. [ST-136]
        : The tool is running on a 4 cpu machine.
Multi-threaded Virtual Mapping    (4 threads per ST process, 4 of 4 CPUs usable)
 
Global mapping target info
==========================
Cost Group 'default' target slack: Unconstrained

Multi-threaded Virtual Mapping    (4 threads per ST process, 4 of 4 CPUs usable)
Multi-threaded Technology Mapping (4 threads per ST process, 4 of 4 CPUs usable)
 
Global mapping status
=====================
                                   Group   
                                  Tot Wrst 
                           Total  Weighted 
Operation                   Area   Slacks  
-------------------------------------------------------------------------------
 global_map                    0        0 

    Cost Group            Target    Slack    Diff.  Constr.
-----------------------------------------------------------
       default          unconst. unconst.              N.A. 

 
Global incremental target info
==============================
Cost Group 'default' target slack: Unconstrained

==================================
Stage : global_incr_map 
==================================
  =================
   Message Summary
  =================
----------------------------------------------------------------------------------------------------------------
|    Id    |  Sev   |Count |                                   Message Text                                    |
----------------------------------------------------------------------------------------------------------------
| GLO-51   |Info    |    2 |Hierarchical instance automatically ungrouped.                                     |
|          |        |      |Hierarchical instances can be automatically ungrouped to allow for better area or  |
|          |        |      | timing optimization. To prevent this ungroup, set the root-level attribute        |
|          |        |      | 'auto_ungroup' to 'none'. You can also prevent individual ungroup with setting    |
|          |        |      | the attribute 'ungroup_ok' of instances or modules to 'false'.                    |
| PHYS-752 |Info    |    1 |Partition Based Synthesis execution skipped.                                       |
| ST-136   |Warning |    1 |Not obtained requested number of super thread servers.                             |
|          |        |      |The requested number of cpus are not available on machine.                         |
| SYNTH-2  |Info    |    1 |Done synthesizing.                                                                 |
| SYNTH-4  |Info    |    1 |Mapping.                                                                           |
| VRO-22   |Warning |  200 |Detected one or more Complex boolean function primitives.                          |
|          |        |      |Complex boolean function primitive is one whose representation requires multiple   |
|          |        |      | boolean verilog primitives.This increases number of gate instances in written out |
|          |        |      | verilog netlist. If this netlist is used further, it can potentially impact QOR.  |
----------------------------------------------------------------------------------------------------------------
 
Global incremental optimization status
======================================
                                   Group   
                                  Tot Wrst 
                           Total  Weighted 
Operation                   Area   Slacks  
-------------------------------------------------------------------------------
 global_incr                   0        0 

    Cost Group            Target    Slack    Diff.  Constr.
-----------------------------------------------------------
       default          unconst. unconst.              N.A. 

PBS_Techmap-Global Mapping - Elapsed_Time 5, CPU_Time 4.584117999999997
stamp 'PBS_Techmap-Global Mapping' being created for table 'pbs_debug'

  Total Time (Wall) |  Stage Time (Wall)  |   % (Wall)   |    Date - Time     |  Memory   | Stage
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:23(00:04:52) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:37 (Sep19) |  231.4 MB | PBS_Generic-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:08(00:00:08) |  54.9( 14.3) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic_Opt-Post
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic-Postgen HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:33(00:05:43) |  00:00:02(00:00:43) |  13.7( 76.8) |   19:27:28 (Sep19) |  251.0 MB | PBS_TechMap-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:33(00:05:43) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:27:28 (Sep19) |  251.0 MB | PBS_TechMap-Premap HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:37(00:05:48) |  00:00:04(00:00:05) |  31.4(  8.9) |   19:27:33 (Sep19) |  261.4 MB | PBS_Techmap-Global Mapping
--------------------+---------------------+--------------+--------------------+-----------+----------------------
Number of threads: 8 * 1   (id: pbs_debug, time_info v1.57)
Info: (*N*) indicates data that was populated from previously saved time_info database
Info: CPU time includes time of parent + longest thread
Info    : Forcing flat compare. [CFM-212]
        : No hierarchies found in design.
Info    : Wrote formal verification information. [CFM-5]
        : Wrote 'fv/GCD/fv_map.fv.json' for netlist 'fv/GCD/fv_map.v.gz'.
Info    : Wrote dofile. [CFM-1]
        : Dofile is 'fv/GCD/rtl_to_fv_map.do'.
PBS_TechMap-Datapath Postmap Operations - Elapsed_Time 2, CPU_Time 2.0
stamp 'PBS_TechMap-Datapath Postmap Operations' being created for table 'pbs_debug'

  Total Time (Wall) |  Stage Time (Wall)  |   % (Wall)   |    Date - Time     |  Memory   | Stage
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:23(00:04:52) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:37 (Sep19) |  231.4 MB | PBS_Generic-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:08(00:00:08) |  48.3( 13.8) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic_Opt-Post
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic-Postgen HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:33(00:05:43) |  00:00:02(00:00:43) |  12.0( 74.1) |   19:27:28 (Sep19) |  251.0 MB | PBS_TechMap-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:33(00:05:43) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:27:28 (Sep19) |  251.0 MB | PBS_TechMap-Premap HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:37(00:05:48) |  00:00:04(00:00:05) |  27.6(  8.6) |   19:27:33 (Sep19) |  261.4 MB | PBS_Techmap-Global Mapping
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:39(00:05:50) |  00:00:02(00:00:02) |  12.0(  3.4) |   19:27:35 (Sep19) |  261.4 MB | PBS_TechMap-Datapath Postmap Operations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
Number of threads: 8 * 1   (id: pbs_debug, time_info v1.57)
Info: (*N*) indicates data that was populated from previously saved time_info database
Info: CPU time includes time of parent + longest thread
PBS_TechMap-Postmap HBO Optimizations - Elapsed_Time 0, CPU_Time -0.0028069999999971174
stamp 'PBS_TechMap-Postmap HBO Optimizations' being created for table 'pbs_debug'

  Total Time (Wall) |  Stage Time (Wall)  |   % (Wall)   |    Date - Time     |  Memory   | Stage
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:23(00:04:52) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:37 (Sep19) |  231.4 MB | PBS_Generic-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:08(00:00:08) |  48.3( 13.8) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic_Opt-Post
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic-Postgen HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:33(00:05:43) |  00:00:02(00:00:43) |  12.0( 74.1) |   19:27:28 (Sep19) |  251.0 MB | PBS_TechMap-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:33(00:05:43) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:27:28 (Sep19) |  251.0 MB | PBS_TechMap-Premap HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:37(00:05:48) |  00:00:04(00:00:05) |  27.6(  8.6) |   19:27:33 (Sep19) |  261.4 MB | PBS_Techmap-Global Mapping
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:39(00:05:50) |  00:00:02(00:00:02) |  12.0(  3.4) |   19:27:35 (Sep19) |  261.4 MB | PBS_TechMap-Datapath Postmap Operations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:39(00:05:50) |  00:00:00(00:00:00) |  -0.0(  0.0) |   19:27:35 (Sep19) |  261.4 MB | PBS_TechMap-Postmap HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
Number of threads: 8 * 1   (id: pbs_debug, time_info v1.57)
Info: (*N*) indicates data that was populated from previously saved time_info database
Info: CPU time includes time of parent + longest thread
 Doing ConstProp on design:GCD ... 

PBS_TechMap-Postmap Clock Gating - Elapsed_Time 0, CPU_Time 0.0
stamp 'PBS_TechMap-Postmap Clock Gating' being created for table 'pbs_debug'

  Total Time (Wall) |  Stage Time (Wall)  |   % (Wall)   |    Date - Time     |  Memory   | Stage
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:23(00:04:52) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:37 (Sep19) |  231.4 MB | PBS_Generic-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:08(00:00:08) |  48.3( 13.8) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic_Opt-Post
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic-Postgen HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:33(00:05:43) |  00:00:02(00:00:43) |  12.0( 74.1) |   19:27:28 (Sep19) |  251.0 MB | PBS_TechMap-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:33(00:05:43) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:27:28 (Sep19) |  251.0 MB | PBS_TechMap-Premap HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:37(00:05:48) |  00:00:04(00:00:05) |  27.6(  8.6) |   19:27:33 (Sep19) |  261.4 MB | PBS_Techmap-Global Mapping
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:39(00:05:50) |  00:00:02(00:00:02) |  12.0(  3.4) |   19:27:35 (Sep19) |  261.4 MB | PBS_TechMap-Datapath Postmap Operations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:39(00:05:50) |  00:00:00(00:00:00) |  -0.0(  0.0) |   19:27:35 (Sep19) |  261.4 MB | PBS_TechMap-Postmap HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:39(00:05:50) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:27:35 (Sep19) |  261.4 MB | PBS_TechMap-Postmap Clock Gating
--------------------+---------------------+--------------+--------------------+-----------+----------------------
Number of threads: 8 * 1   (id: pbs_debug, time_info v1.57)
Info: (*N*) indicates data that was populated from previously saved time_info database
Info: CPU time includes time of parent + longest thread
 hi_fo_buf                     0        0         0         0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
       hi_fo_buf         0  (        0 /        0 )  0.00

 
Incremental optimization status
===============================
                                   Group   
                                  Tot Wrst     Total - - DRC Totals - -
                           Total  Weighted      Neg      Max       Max 
Operation                   Area   Slacks      Slack    Trans      Cap 
-------------------------------------------------------------------------------
 init_delay                    0        0         0         0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
       crit_upsz         0  (        0 /        0 )  0.00
    plc_bal_star         0  (        0 /        0 )  0.00
     drc_buftimb         0  (        0 /        0 )  0.00
          plc_st         0  (        0 /        0 )  0.00
    plc_st_fence         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
      plc_laf_st         0  (        0 /        0 )  0.00
 plc_laf_st_fence         0  (        0 /        0 )  0.00
     drc_buftims         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
   plc_laf_lo_st         0  (        0 /        0 )  0.00
       plc_lo_st         0  (        0 /        0 )  0.00
        mb_split         0  (        0 /        0 )  0.00

 
Local TNS optimization status
=============================
                                   Group   
                                  Tot Wrst     Total - - DRC Totals - -
                           Total  Weighted      Neg      Max       Max 
Operation                   Area   Slacks      Slack    Trans      Cap 
-------------------------------------------------------------------------------
 init_tns                      0        0         0         0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
    plc_bal_star         0  (        0 /        0 )  0.00
     drc_buftimb         0  (        0 /        0 )  0.00
     drc_buftims         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00
   plc_laf_lo_st         0  (        0 /        0 )  0.00
       plc_lo_st         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
        setup_dn         0  (        0 /        0 )  0.00
        mb_split         0  (        0 /        0 )  0.00

PBS_TechMap-Postmap Cleanup - Elapsed_Time 0, CPU_Time -0.0035290000000003374
stamp 'PBS_TechMap-Postmap Cleanup' being created for table 'pbs_debug'

  Total Time (Wall) |  Stage Time (Wall)  |   % (Wall)   |    Date - Time     |  Memory   | Stage
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:23(00:04:52) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:37 (Sep19) |  231.4 MB | PBS_Generic-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:08(00:00:08) |  48.3( 13.8) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic_Opt-Post
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic-Postgen HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:33(00:05:43) |  00:00:02(00:00:43) |  12.0( 74.1) |   19:27:28 (Sep19) |  251.0 MB | PBS_TechMap-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:33(00:05:43) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:27:28 (Sep19) |  251.0 MB | PBS_TechMap-Premap HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:37(00:05:48) |  00:00:04(00:00:05) |  27.6(  8.6) |   19:27:33 (Sep19) |  261.4 MB | PBS_Techmap-Global Mapping
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:39(00:05:50) |  00:00:02(00:00:02) |  12.0(  3.4) |   19:27:35 (Sep19) |  261.4 MB | PBS_TechMap-Datapath Postmap Operations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:39(00:05:50) |  00:00:00(00:00:00) |  -0.0(  0.0) |   19:27:35 (Sep19) |  261.4 MB | PBS_TechMap-Postmap HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:39(00:05:50) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:27:35 (Sep19) |  261.4 MB | PBS_TechMap-Postmap Clock Gating
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:39(00:05:50) |  00:00:00(00:00:00) |  -0.0(  0.0) |   19:27:35 (Sep19) |  261.4 MB | PBS_TechMap-Postmap Cleanup
--------------------+---------------------+--------------+--------------------+-----------+----------------------
Number of threads: 8 * 1   (id: pbs_debug, time_info v1.57)
Info: (*N*) indicates data that was populated from previously saved time_info database
Info: CPU time includes time of parent + longest thread
PBS_Techmap-Post_MBCI - Elapsed_Time 0, CPU_Time 0.0
stamp 'PBS_Techmap-Post_MBCI' being created for table 'pbs_debug'

  Total Time (Wall) |  Stage Time (Wall)  |   % (Wall)   |    Date - Time     |  Memory   | Stage
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:23(00:04:52) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:37 (Sep19) |  231.4 MB | PBS_Generic-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:08(00:00:08) |  48.3( 13.8) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic_Opt-Post
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:31(00:05:00) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:26:45 (Sep19) |  267.0 MB | PBS_Generic-Postgen HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:33(00:05:43) |  00:00:02(00:00:43) |  12.0( 74.1) |   19:27:28 (Sep19) |  251.0 MB | PBS_TechMap-Start
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:33(00:05:43) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:27:28 (Sep19) |  251.0 MB | PBS_TechMap-Premap HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:37(00:05:48) |  00:00:04(00:00:05) |  27.6(  8.6) |   19:27:33 (Sep19) |  261.4 MB | PBS_Techmap-Global Mapping
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:39(00:05:50) |  00:00:02(00:00:02) |  12.0(  3.4) |   19:27:35 (Sep19) |  261.4 MB | PBS_TechMap-Datapath Postmap Operations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:39(00:05:50) |  00:00:00(00:00:00) |  -0.0(  0.0) |   19:27:35 (Sep19) |  261.4 MB | PBS_TechMap-Postmap HBO Optimizations
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:39(00:05:50) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:27:35 (Sep19) |  261.4 MB | PBS_TechMap-Postmap Clock Gating
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:39(00:05:50) |  00:00:00(00:00:00) |  -0.0(  0.0) |   19:27:35 (Sep19) |  261.4 MB | PBS_TechMap-Postmap Cleanup
--------------------+---------------------+--------------+--------------------+-----------+----------------------
 00:00:39(00:05:50) |  00:00:00(00:00:00) |   0.0(  0.0) |   19:27:35 (Sep19) |  261.4 MB | PBS_Techmap-Post_MBCI
--------------------+---------------------+--------------+--------------------+-----------+----------------------
Number of threads: 8 * 1   (id: pbs_debug, time_info v1.57)
Info: (*N*) indicates data that was populated from previously saved time_info database
Info: CPU time includes time of parent + longest thread

======================= Sequential Deletion Report =============================
================================================================================

##>=================== Cadence Confidential (Mapping-Logical) ===================
##>Main Thread Summary:
##>----------------------------------------------------------------------------------------
##>STEP                           Elapsed       WNS       TNS     Insts      Area    Memory
##>----------------------------------------------------------------------------------------
##>M:Initial                            0         -         -       855         0       251
##>M:Pre Cleanup                        0         -         -       855         0       251
##>M:Setup                              0         -         -         -         -         -
##>M:Launch ST                          0         -         -         -         -         -
##>M:Design Partition                   0         -         -         -         -         -
##>M:Create Partition Netlists          0         -         -         -         -         -
##>M:Init Power                         0         -         -         -         -         -
##>M:Budgeting                          0         -         -         -         -         -
##>M:Derenv-DB                          0         -         -         -         -         -
##>M:Debug Outputs                      0         -         -         -         -         -
##>M:ST loading                         0         -         -         -         -         -
##>M:Distributed                        0         -         -         -         -         -
##>M:Timer                              0         -         -         -         -         -
##>M:Assembly                           0         -         -         -         -         -
##>M:DFT                                0         -         -         -         -         -
##>M:DP Operations                      2         -         -       619         0       261
##>M:Const Prop                         0         -         0       619         0       261
##>M:Cleanup                            0         -         0       619         0       261
##>M:MBCI                               0         -         -       619         0       261
##>M:Const Gate Removal                 0         -         -         -         -         -
##>M:Misc                               5
##>----------------------------------------------------------------------------------------
##>Total Elapsed                        7
##>========================================================================================
Info    : Done mapping. [SYNTH-5]
        : Done mapping 'GCD'.
      timing.setup.tns  timing.setup.wns  snapshot
UM:*                                      syn_map
@genus:root: 14> write_hdl

// Generated by Cadence Genus(TM) Synthesis Solution 19.11-s087_1
// Generated on: Sep 19 2024 19:27:40 IST (Sep 19 2024 13:57:40 UTC)

// Verification Directory fv/GCD 

module GCD(out, done, clk, rst, in1, in2, go);
  input clk, rst, go;
  input [31:0] in1, in2;
  output [31:0] out;
  output done;
  wire clk, rst, go;
  wire [31:0] in1, in2;
  wire [31:0] out;
  wire done;
  wire [2:0] c1_nState;
  wire [2:0] c1_cState;
  wire [31:0] d1_ta;
  wire [31:0] d1_tb;
  wire UNCONNECTED, UNCONNECTED0, UNCONNECTED1, UNCONNECTED2,
       UNCONNECTED3, UNCONNECTED4, UNCONNECTED5, UNCONNECTED6;
  wire UNCONNECTED7, UNCONNECTED8, UNCONNECTED9, UNCONNECTED10,
       UNCONNECTED11, UNCONNECTED12, UNCONNECTED13, UNCONNECTED14;
  wire UNCONNECTED15, UNCONNECTED16, UNCONNECTED17, UNCONNECTED18,
       UNCONNECTED19, UNCONNECTED20, UNCONNECTED21, UNCONNECTED22;
  wire UNCONNECTED23, UNCONNECTED24, UNCONNECTED25, UNCONNECTED26,
       UNCONNECTED27, UNCONNECTED28, UNCONNECTED29, UNCONNECTED30;
  wire UNCONNECTED31, UNCONNECTED32, UNCONNECTED33, UNCONNECTED34,
       UNCONNECTED35, UNCONNECTED36, UNCONNECTED37, UNCONNECTED38;
  wire UNCONNECTED39, UNCONNECTED40, UNCONNECTED41, UNCONNECTED42,
       UNCONNECTED43, UNCONNECTED44, UNCONNECTED45, UNCONNECTED46;
  wire UNCONNECTED47, UNCONNECTED48, UNCONNECTED49, UNCONNECTED50,
       UNCONNECTED51, UNCONNECTED52, UNCONNECTED53, UNCONNECTED54;
  wire UNCONNECTED55, UNCONNECTED56, UNCONNECTED57, UNCONNECTED58,
       UNCONNECTED59, UNCONNECTED60, UNCONNECTED61, UNCONNECTED62;
  wire UNCONNECTED63, UNCONNECTED64, UNCONNECTED65, UNCONNECTED66,
       UNCONNECTED67, UNCONNECTED68, UNCONNECTED69, UNCONNECTED70;
  wire UNCONNECTED71, UNCONNECTED72, UNCONNECTED73, UNCONNECTED74,
       UNCONNECTED75, UNCONNECTED76, UNCONNECTED77, UNCONNECTED78;
  wire UNCONNECTED79, UNCONNECTED80, UNCONNECTED81, UNCONNECTED82,
       UNCONNECTED83, UNCONNECTED84, UNCONNECTED85, UNCONNECTED86;
  wire UNCONNECTED87, UNCONNECTED88, UNCONNECTED89, UNCONNECTED90,
       UNCONNECTED91, UNCONNECTED92, UNCONNECTED93, UNCONNECTED94;
  wire UNCONNECTED95, UNCONNECTED96, UNCONNECTED97, UNCONNECTED98,
       UNCONNECTED99, UNCONNECTED100, \d1_rout_rnout[0]_226 ,
       \d1_rout_rnout[1]_227 ;
  wire \d1_rout_rnout[2]_228 , \d1_rout_rnout[3]_229 ,
       \d1_rout_rnout[4]_230 , \d1_rout_rnout[5]_231 ,
       \d1_rout_rnout[6]_232 , \d1_rout_rnout[7]_233 ,
       \d1_rout_rnout[8]_234 , \d1_rout_rnout[9]_235 ;
  wire \d1_rout_rnout[10]_236 , \d1_rout_rnout[11]_237 ,
       \d1_rout_rnout[12]_238 , \d1_rout_rnout[13]_239 ,
       \d1_rout_rnout[14]_240 , \d1_rout_rnout[15]_241 ,
       \d1_rout_rnout[16]_242 , \d1_rout_rnout[17]_243 ;
  wire \d1_rout_rnout[18]_244 , \d1_rout_rnout[19]_245 ,
       \d1_rout_rnout[20]_246 , \d1_rout_rnout[21]_247 ,
       \d1_rout_rnout[22]_248 , \d1_rout_rnout[23]_249 ,
       \d1_rout_rnout[24]_250 , \d1_rout_rnout[25]_251 ;
  wire \d1_rout_rnout[26]_252 , \d1_rout_rnout[27]_253 ,
       \d1_rout_rnout[28]_254 , \d1_rout_rnout[29]_255 ,
       \d1_rout_rnout[30]_256 , \d1_rout_rnout[31]_257 , n_0, n_1;
  wire n_3, n_4, n_6, n_7, n_8, n_10, n_11, n_15;
  wire n_17, n_19, n_21, n_22, n_23, n_24, n_25, n_26;
  wire n_27, n_28, n_29, n_30, n_31, n_33, n_34, n_35;
  wire n_36, n_38, n_40, n_44, n_46, n_47, n_48, n_49;
  wire n_51, n_52, n_53, n_55, n_58, n_59, n_62, n_63;
  wire n_65, n_68, n_69, n_71, n_72, n_75, n_76, n_77;
  wire n_78, n_80, n_81, n_82, n_83, n_84, n_85, n_86;
  wire n_87, n_91, n_92, n_93, n_94, n_95, n_96, n_97;
  wire n_98, n_99, n_100, n_101, n_102, n_103, n_104, n_105;
  wire n_106, n_107, n_108, n_109, n_110, n_111, n_112, n_113;
  wire n_114, n_115, n_116, n_117, n_118, n_119, n_120, n_121;
  wire n_122, n_123, n_124, n_125, n_126, n_127, n_128, n_129;
  wire n_130, n_131, n_132, n_133, n_134, n_135, n_136, n_137;
  wire n_138, n_139, n_140, n_141, n_142, n_143, n_144, n_145;
  wire n_146, n_147, n_148, n_149, n_150, n_151, n_152, n_153;
  wire n_154, n_155, n_156, n_157, n_158, n_159, n_160, n_161;
  wire n_162, n_163, n_164, n_165, n_166, n_167, n_168, n_169;
  wire n_170, n_171, n_172, n_173, n_174, n_175, n_176, n_177;
  wire n_178, n_179, n_180, n_181, n_182, n_183, n_184, n_185;
  wire n_186, n_187, n_188, n_189, n_190, n_191, n_192, n_193;
  wire n_194, n_195, n_196, n_197, n_198, n_199, n_200, n_201;
  wire n_202, n_203, n_204, n_205, n_206, n_207, n_208, n_209;
  wire n_210, n_211, n_212, n_213, n_214, n_215, n_216, n_217;
  wire n_218, n_219, n_220, n_221, n_222, n_223, n_224, n_225;
  wire n_226, n_227, n_228, n_229, n_230, n_231, n_232, n_233;
  wire n_234, n_235, n_236, n_237, n_238, n_239, n_240, n_241;
  wire n_242, n_243, n_244, n_245, n_246, n_247, n_248, n_249;
  wire n_250, n_251, n_252, n_253, n_254, n_255, n_256, n_257;
  wire n_258, n_259, n_260, n_261, n_262, n_263, n_264, n_265;
  wire n_266, n_267, n_268, n_270, n_271, n_272, n_273, n_274;
  wire n_275, n_276, n_277, n_278, n_279, n_280, n_281, n_282;
  wire n_283, n_284, n_285, n_286, n_287, n_288, n_289, n_290;
  wire n_291, n_292, n_293, n_294, n_295, n_296, n_297, n_298;
  wire n_299, n_300, n_301, n_302, n_303, n_304, n_305, n_306;
  wire n_307, n_308, n_309, n_310, n_311, n_312, n_313, n_314;
  wire n_315, n_316, n_317, n_318, n_319, n_320, n_321, n_322;
  wire n_323, n_324, n_325, n_326, n_327, n_328, n_329, n_330;
  wire n_331, n_332, n_333, n_334, n_335, n_336, n_337, n_338;
  wire n_339, n_340, n_341, n_342, n_343, n_344, n_345, n_346;
  wire n_347, n_348, n_349, n_350, n_351, n_352, n_353, n_354;
  wire n_355, n_356, n_357, n_358, n_359, n_360, n_361, n_362;
  wire n_363, n_364, n_365, n_366, n_367, n_368, n_369, n_370;
  wire n_371, n_372, n_373, n_374, n_375, n_376, n_377, n_378;
  wire n_379, n_380, n_381, n_382, n_383, n_384, n_385, n_386;
  wire n_387, n_388, n_389, n_390, n_391, n_392, n_393, n_394;
  wire n_395, n_396, n_397, n_398, n_399, n_400, n_401, n_402;
  wire n_403, n_404, n_405, n_406, n_407, n_408, n_409, n_410;
  wire n_411, n_412, n_413, n_414, n_415, n_416, n_417, n_418;
  wire n_419, n_420, n_421, n_422, n_423, n_424, n_425, n_426;
  wire n_427, n_428, n_429, n_430, n_431, n_432, n_433, n_434;
  wire n_435, n_436, n_437, n_438, n_439, n_440, n_441, n_442;
  wire n_443, n_444, n_445, n_446, n_447, n_448, n_449, n_450;
  wire n_451, n_452, n_453, n_454, n_455, n_456, n_457, n_458;
  wire n_459, n_460, n_461, n_462, n_463, n_464, n_465, n_466;
  wire n_467, n_468, n_469, n_470, n_471, n_472, n_473, n_474;
  wire n_475, n_476, n_477, n_478, n_479, n_480, n_481, n_482;
  wire n_483, n_484, n_485, n_486, n_487, n_488, n_489, n_490;
  wire n_491, n_492, n_493, n_494, n_495, n_496, n_497, n_498;
  wire n_499, n_501, n_502, n_503, n_504, n_505, n_506, n_507;
  wire n_508, n_509, n_510, n_511, n_512, n_513, n_514, n_515;
  wire n_516, n_517;
  DFFTRX4 \c1_cState_reg[1] (.CK (clk), .D (c1_nState[1]), .RN (n_511),
       .Q (c1_cState[1]), .QN (UNCONNECTED));
  TLATX4 \c1_nState_reg[1] (.G (1'b1), .D (n_517), .Q (c1_nState[1]),
       .QN (UNCONNECTED0));
  OR2X1 g11872__2398(.A (n_159), .B (n_516), .Y (n_517));
  OAI32XL g11873__5107(.A0 (n_288), .A1 (n_131), .A2 (n_515), .B0
       (c1_cState[1]), .B1 (n_142), .Y (n_516));
  OR4XL g11874__6260(.A (n_414), .B (n_405), .C (n_421), .D (n_514), .Y
       (n_515));
  OR4XL g11875__4319(.A (n_433), .B (n_426), .C (n_147), .D (n_513), .Y
       (n_514));
  OR4XL g11876__8428(.A (n_297), .B (n_280), .C (n_302), .D (n_512), .Y
       (n_513));
  OR4XL g11877__5526(.A (n_318), .B (n_309), .C (n_325), .D (n_510), .Y
       (n_512));
  EDFFTRX4 \d1_ra_rnout_reg[31] (.CK (clk), .D (n_505), .E (n_509), .RN
       (n_511), .Q (d1_ta[31]), .QN (UNCONNECTED1));
  EDFFTRX4 \d1_rb_rnout_reg[31] (.CK (clk), .D (n_506), .E (n_508), .RN
       (n_511), .Q (d1_tb[31]), .QN (UNCONNECTED2));
  OR4XL g11878__6783(.A (n_337), .B (n_330), .C (n_344), .D (n_507), .Y
       (n_510));
  EDFFTRX4 \d1_ra_rnout_reg[30] (.CK (clk), .D (n_502), .E (n_509), .RN
       (n_511), .Q (d1_ta[30]), .QN (UNCONNECTED3));
  EDFFTRX4 \d1_rb_rnout_reg[30] (.CK (clk), .D (n_499), .E (n_508), .RN
       (n_511), .Q (d1_tb[30]), .QN (UNCONNECTED4));
  OR4XL g11879__3680(.A (n_358), .B (n_351), .C (n_365), .D (n_503), .Y
       (n_507));
  DFFTRX4 \c1_cState_reg[0] (.CK (clk), .D (c1_nState[0]), .RN (n_511),
       .Q (c1_cState[0]), .QN (UNCONNECTED5));
  MXI3X1 g11887__1617(.A (n_494), .B (n_495), .C (n_11), .S0 (n_504),
       .S1 (n_497), .Y (n_506));
  MXI3X1 g11888__2802(.A (n_504), .B (n_251), .C (n_77), .S0 (n_493),
       .S1 (n_501), .Y (n_505));
  EDFFTRX4 \d1_ra_rnout_reg[29] (.CK (clk), .D (n_489), .E (n_509), .RN
       (n_511), .Q (d1_ta[29]), .QN (UNCONNECTED6));
  EDFFTRX4 \d1_rb_rnout_reg[29] (.CK (clk), .D (n_487), .E (n_508), .RN
       (n_511), .Q (d1_tb[29]), .QN (UNCONNECTED7));
  OR4XL g11884__1705(.A (n_270), .B (n_372), .C (n_394), .D (n_491), .Y
       (n_503));
  MXI3X1 g11894__5122(.A (n_498), .B (n_235), .C (n_6), .S0 (n_492),
       .S1 (n_501), .Y (n_502));
  TLATX4 \c1_nState_reg[0] (.G (1'b1), .D (n_496), .Q (c1_nState[0]),
       .QN (UNCONNECTED8));
  MXI3X1 g11893__8246(.A (n_488), .B (n_483), .C (n_71), .S0 (n_498),
       .S1 (n_497), .Y (n_499));
  EDFFTRX4 \d1_ra_rnout_reg[28] (.CK (clk), .D (n_484), .E (n_509), .RN
       (n_511), .Q (d1_ta[28]), .QN (UNCONNECTED9));
  OAI211XL g11896__7098(.A0 (n_38), .A1 (n_172), .B0 (n_158), .C0
       (n_490), .Y (n_496));
  INVXL g11898(.A (n_494), .Y (n_495));
  AO21X1 g11900__6131(.A0 (n_185), .A1 (n_492), .B0 (n_145), .Y
       (n_493));
  OR4XL g11891__1881(.A (n_264), .B (n_455), .C (n_476), .D (n_490), .Y
       (n_491));
  EDFFTRX4 \d1_rb_rnout_reg[28] (.CK (clk), .D (n_475), .E (n_508), .RN
       (n_511), .Q (d1_tb[28]), .QN (UNCONNECTED10));
  EDFFTRX4 \d1_rb_rnout_reg[27] (.CK (clk), .D (n_479), .E (n_508), .RN
       (n_511), .Q (d1_tb[27]), .QN (UNCONNECTED11));
  MXI3X1 g11903__5115(.A (n_486), .B (n_256), .C (n_58), .S0 (n_485),
       .S1 (n_501), .Y (n_489));
  AO21X1 g11899__7482(.A0 (n_267), .A1 (n_488), .B0 (n_171), .Y
       (n_494));
  EDFFTRX4 \d1_ra_rnout_reg[27] (.CK (clk), .D (n_472), .E (n_509), .RN
       (n_511), .Q (d1_ta[27]), .QN (UNCONNECTED12));
  MXI3X1 g11902__4733(.A (n_473), .B (n_481), .C (n_33), .S0 (n_486),
       .S1 (n_497), .Y (n_487));
  OR3X1 g11901__6161(.A (n_206), .B (n_174), .C (n_477), .Y (n_490));
  AO21X2 g11909__9315(.A0 (n_480), .A1 (n_485), .B0 (n_482), .Y
       (n_492));
  EDFFTRX4 \d1_ra_rnout_reg[26] (.CK (clk), .D (n_466), .E (n_509), .RN
       (n_511), .Q (d1_ta[26]), .QN (UNCONNECTED13));
  EDFFTRX4 \d1_rb_rnout_reg[26] (.CK (clk), .D (n_467), .E (n_508), .RN
       (n_511), .Q (d1_tb[26]), .QN (UNCONNECTED14));
  MXI3X1 g11912__9945(.A (n_474), .B (n_232), .C (n_72), .S0 (n_478),
       .S1 (n_501), .Y (n_484));
  INVXL g11907(.A (n_483), .Y (n_488));
  OA21X2 g11908__2883(.A0 (n_482), .A1 (n_481), .B0 (n_480), .Y
       (n_483));
  MXI3X1 g11914__2346(.A (n_459), .B (n_460), .C (n_51), .S0 (n_471),
       .S1 (n_497), .Y (n_479));
  AO21X2 g11919__1666(.A0 (n_470), .A1 (n_478), .B0 (n_463), .Y
       (n_485));
  OAI211XL g11910__7410(.A0 (n_476), .A1 (n_469), .B0 (n_216), .C0
       (n_268), .Y (n_477));
  MXI3X1 g11911__6417(.A (n_461), .B (n_462), .C (n_82), .S0 (n_474),
       .S1 (n_497), .Y (n_475));
  INVXL g11916(.A (n_481), .Y (n_473));
  MXI3X1 g11918__5477(.A (n_471), .B (n_258), .C (n_47), .S0 (n_464),
       .S1 (n_501), .Y (n_472));
  EDFFTRX4 \d1_ra_rnout_reg[25] (.CK (clk), .D (n_456), .E (n_509), .RN
       (n_511), .Q (d1_ta[25]), .QN (UNCONNECTED15));
  AND2X2 g11917__2398(.A (n_470), .B (n_468), .Y (n_481));
  EDFFTRX4 \d1_rb_rnout_reg[25] (.CK (clk), .D (n_452), .E (n_508), .RN
       (n_511), .Q (d1_tb[25]), .QN (UNCONNECTED16));
  INVXL g11920(.A (n_468), .Y (n_469));
  MXI3X1 g11923__5107(.A (n_458), .B (n_449), .C (n_59), .S0 (n_465),
       .S1 (n_497), .Y (n_467));
  MXI3X1 g11924__6260(.A (n_465), .B (n_242), .C (n_80), .S0 (n_448),
       .S1 (n_501), .Y (n_466));
  AO21X2 g11928__4319(.A0 (n_457), .A1 (n_464), .B0 (n_152), .Y
       (n_478));
  EDFFTRX4 \d1_ra_rnout_reg[24] (.CK (clk), .D (n_445), .E (n_509), .RN
       (n_511), .Q (d1_ta[24]), .QN (UNCONNECTED17));
  OR2X1 g11921__8428(.A (n_463), .B (n_462), .Y (n_468));
  EDFFTRX4 \d1_rb_rnout_reg[24] (.CK (clk), .D (n_444), .E (n_508), .RN
       (n_511), .Q (d1_tb[24]), .QN (UNCONNECTED18));
  INVXL g11926(.A (n_462), .Y (n_461));
  INVXL g11929(.A (n_459), .Y (n_460));
  AO21X1 g11931__5526(.A0 (n_453), .A1 (n_458), .B0 (n_454), .Y
       (n_459));
  AND2X2 g11927__6783(.A (n_457), .B (n_450), .Y (n_462));
  MXI3X1 g11934__3680(.A (n_451), .B (n_246), .C (n_96), .S0 (n_447),
       .S1 (n_501), .Y (n_456));
  OAI221XL g11936__1617(.A0 (n_455), .A1 (n_442), .B0 (n_441), .B1
       (n_454), .C0 (n_453), .Y (n_464));
  EDFFTRX4 \d1_ra_rnout_reg[23] (.CK (clk), .D (n_437), .E (n_509), .RN
       (n_511), .Q (d1_ta[23]), .QN (UNCONNECTED19));
  MXI3X1 g11933__2802(.A (n_440), .B (n_438), .C (n_34), .S0 (n_451),
       .S1 (n_497), .Y (n_452));
  OAI211XL g11930__1705(.A0 (n_455), .A1 (n_446), .B0 (n_453), .C0
       (n_186), .Y (n_450));
  EDFFTRX4 \d1_rb_rnout_reg[23] (.CK (clk), .D (n_436), .E (n_508), .RN
       (n_511), .Q (d1_tb[23]), .QN (UNCONNECTED20));
  INVXL g11937(.A (n_458), .Y (n_449));
  AO21X1 g11938__5122(.A0 (n_207), .A1 (n_447), .B0 (n_165), .Y
       (n_448));
  OR2X2 g11939__8246(.A (n_170), .B (n_446), .Y (n_458));
  MXI3X1 g11942__7098(.A (n_443), .B (n_247), .C (n_19), .S0 (n_439),
       .S1 (n_501), .Y (n_445));
  EDFFTRX4 \d1_ra_rnout_reg[22] (.CK (clk), .D (n_430), .E (n_509), .RN
       (n_511), .Q (d1_ta[22]), .QN (UNCONNECTED21));
  MXI3X1 g11941__6131(.A (n_434), .B (n_431), .C (n_83), .S0 (n_443),
       .S1 (n_497), .Y (n_444));
  INVXL g11946(.A (n_447), .Y (n_442));
  EDFFTRX4 \d1_rb_rnout_reg[22] (.CK (clk), .D (n_429), .E (n_508), .RN
       (n_511), .Q (d1_tb[22]), .QN (UNCONNECTED22));
  AND2X1 g11944__1881(.A (n_441), .B (n_440), .Y (n_446));
  AO21X2 g11949__5115(.A0 (n_209), .A1 (n_439), .B0 (n_160), .Y
       (n_447));
  INVXL g11945(.A (n_440), .Y (n_438));
  MXI3X1 g11951__7482(.A (n_435), .B (n_239), .C (n_53), .S0 (n_432),
       .S1 (n_501), .Y (n_437));
  EDFFTRX4 \d1_ra_rnout_reg[21] (.CK (clk), .D (n_423), .E (n_509), .RN
       (n_511), .Q (d1_ta[21]), .QN (UNCONNECTED23));
  MXI3X1 g11950__4733(.A (n_427), .B (n_424), .C (n_68), .S0 (n_435),
       .S1 (n_497), .Y (n_436));
  AO21X2 g11947__6161(.A0 (n_208), .A1 (n_434), .B0 (n_433), .Y
       (n_440));
  EDFFTRX4 \d1_rb_rnout_reg[21] (.CK (clk), .D (n_420), .E (n_508), .RN
       (n_511), .Q (d1_tb[21]), .QN (UNCONNECTED24));
  AO21X2 g11955__9315(.A0 (n_211), .A1 (n_432), .B0 (n_167), .Y
       (n_439));
  INVXL g11953(.A (n_434), .Y (n_431));
  MXI3X1 g11958__9945(.A (n_428), .B (n_261), .C (n_1), .S0 (n_425),
       .S1 (n_501), .Y (n_430));
  EDFFTRX4 \d1_ra_rnout_reg[20] (.CK (clk), .D (n_416), .E (n_509), .RN
       (n_511), .Q (d1_ta[20]), .QN (UNCONNECTED25));
  MXI3X1 g11957__2883(.A (n_422), .B (n_417), .C (n_62), .S0 (n_428),
       .S1 (n_497), .Y (n_429));
  AO21X2 g11954__2346(.A0 (n_210), .A1 (n_427), .B0 (n_426), .Y
       (n_434));
  AO21X2 g11962__1666(.A0 (n_215), .A1 (n_425), .B0 (n_139), .Y
       (n_432));
  INVXL g11961(.A (n_427), .Y (n_424));
  EDFFTRX4 \d1_rb_rnout_reg[19] (.CK (clk), .D (n_411), .E (n_508), .RN
       (n_511), .Q (d1_tb[19]), .QN (UNCONNECTED26));
  MXI3X1 g11965__7410(.A (n_419), .B (n_243), .C (n_22), .S0 (n_418),
       .S1 (n_501), .Y (n_423));
  EDFFTRX4 \d1_rb_rnout_reg[20] (.CK (clk), .D (n_413), .E (n_508), .RN
       (n_511), .Q (d1_tb[20]), .QN (UNCONNECTED27));
  AO21X2 g11963__6417(.A0 (n_214), .A1 (n_422), .B0 (n_421), .Y
       (n_427));
  MXI3X1 g11964__5477(.A (n_415), .B (n_409), .C (n_75), .S0 (n_419),
       .S1 (n_497), .Y (n_420));
  EDFFTRX4 \d1_ra_rnout_reg[19] (.CK (clk), .D (n_408), .E (n_509), .RN
       (n_511), .Q (d1_ta[19]), .QN (UNCONNECTED28));
  AO21X2 g11970__2398(.A0 (n_213), .A1 (n_418), .B0 (n_133), .Y
       (n_425));
  INVXL g11969(.A (n_422), .Y (n_417));
  MXI3X1 g11972__5107(.A (n_412), .B (n_241), .C (n_44), .S0 (n_410),
       .S1 (n_501), .Y (n_416));
  EDFFTRX4 \d1_ra_rnout_reg[18] (.CK (clk), .D (n_404), .E (n_509), .RN
       (n_511), .Q (d1_ta[18]), .QN (UNCONNECTED29));
  EDFFTRX4 \d1_rb_rnout_reg[18] (.CK (clk), .D (n_403), .E (n_508), .RN
       (n_511), .Q (d1_tb[18]), .QN (UNCONNECTED30));
  AO21X2 g11971__6260(.A0 (n_212), .A1 (n_415), .B0 (n_414), .Y
       (n_422));
  MXI3X1 g11973__4319(.A (n_406), .B (n_398), .C (n_76), .S0 (n_412),
       .S1 (n_497), .Y (n_413));
  MXI3X1 g11975__8428(.A (n_399), .B (n_400), .C (n_8), .S0 (n_407),
       .S1 (n_497), .Y (n_411));
  AO21X2 g11977__5526(.A0 (n_200), .A1 (n_410), .B0 (n_136), .Y
       (n_418));
  EDFFTRX4 \d1_ra_rnout_reg[17] (.CK (clk), .D (n_395), .E (n_509), .RN
       (n_511), .Q (d1_ta[17]), .QN (UNCONNECTED31));
  INVXL g11978(.A (n_415), .Y (n_409));
  MXI3X1 g11979__6783(.A (n_407), .B (n_231), .C (n_23), .S0 (n_401),
       .S1 (n_501), .Y (n_408));
  EDFFTRX4 \d1_rb_rnout_reg[17] (.CK (clk), .D (n_391), .E (n_508), .RN
       (n_511), .Q (d1_tb[17]), .QN (UNCONNECTED32));
  AO21X2 g11980__3680(.A0 (n_199), .A1 (n_406), .B0 (n_405), .Y
       (n_415));
  MXI3X1 g11983__1617(.A (n_402), .B (n_260), .C (n_85), .S0 (n_387),
       .S1 (n_501), .Y (n_404));
  MXI3X1 g11984__2802(.A (n_396), .B (n_388), .C (n_35), .S0 (n_402),
       .S1 (n_497), .Y (n_403));
  AO21X2 g11987__1705(.A0 (n_397), .A1 (n_401), .B0 (n_163), .Y
       (n_410));
  EDFFTRX4 \d1_ra_rnout_reg[16] (.CK (clk), .D (n_384), .E (n_509), .RN
       (n_511), .Q (d1_ta[16]), .QN (UNCONNECTED33));
  EDFFTRX4 \d1_rb_rnout_reg[16] (.CK (clk), .D (n_383), .E (n_508), .RN
       (n_511), .Q (d1_tb[16]), .QN (UNCONNECTED34));
  INVXL g11988(.A (n_399), .Y (n_400));
  INVXL g11985(.A (n_398), .Y (n_406));
  AND2X1 g11986__5122(.A (n_397), .B (n_389), .Y (n_398));
  AO21X1 g11990__8246(.A0 (n_392), .A1 (n_396), .B0 (n_393), .Y
       (n_399));
  MXI3X1 g11992__7098(.A (n_390), .B (n_237), .C (n_30), .S0 (n_386),
       .S1 (n_501), .Y (n_395));
  OAI221XL g11995__6131(.A0 (n_394), .A1 (n_381), .B0 (n_380), .B1
       (n_393), .C0 (n_392), .Y (n_401));
  EDFFTRX4 \d1_ra_rnout_reg[15] (.CK (clk), .D (n_376), .E (n_509), .RN
       (n_511), .Q (d1_ta[15]), .QN (UNCONNECTED35));
  MXI3X1 g11993__1881(.A (n_379), .B (n_377), .C (n_0), .S0 (n_390),
       .S1 (n_497), .Y (n_391));
  OAI211XL g11989__5115(.A0 (n_394), .A1 (n_385), .B0 (n_392), .C0
       (n_187), .Y (n_389));
  EDFFTRX4 \d1_rb_rnout_reg[15] (.CK (clk), .D (n_375), .E (n_508), .RN
       (n_511), .Q (d1_tb[15]), .QN (UNCONNECTED36));
  INVXL g11996(.A (n_396), .Y (n_388));
  AO21X1 g11997__7482(.A0 (n_190), .A1 (n_386), .B0 (n_166), .Y
       (n_387));
  OR2X2 g11998__4733(.A (n_169), .B (n_385), .Y (n_396));
  MXI3X1 g12000__6161(.A (n_382), .B (n_262), .C (n_87), .S0 (n_378),
       .S1 (n_501), .Y (n_384));
  EDFFTRX4 \d1_ra_rnout_reg[14] (.CK (clk), .D (n_369), .E (n_509), .RN
       (n_511), .Q (d1_ta[14]), .QN (UNCONNECTED37));
  MXI3X1 g12001__9315(.A (n_373), .B (n_370), .C (n_31), .S0 (n_382),
       .S1 (n_497), .Y (n_383));
  INVXL g12005(.A (n_386), .Y (n_381));
  EDFFTRX4 \d1_rb_rnout_reg[14] (.CK (clk), .D (n_368), .E (n_508), .RN
       (n_511), .Q (d1_tb[14]), .QN (UNCONNECTED38));
  AND2X1 g12003__9945(.A (n_380), .B (n_379), .Y (n_385));
  AO21X2 g12008__2883(.A0 (n_192), .A1 (n_378), .B0 (n_162), .Y
       (n_386));
  INVXL g12004(.A (n_379), .Y (n_377));
  MXI3X1 g12009__2346(.A (n_374), .B (n_253), .C (n_26), .S0 (n_371),
       .S1 (n_501), .Y (n_376));
  EDFFTRX4 \d1_ra_rnout_reg[13] (.CK (clk), .D (n_362), .E (n_509), .RN
       (n_511), .Q (d1_ta[13]), .QN (UNCONNECTED39));
  MXI3X1 g12010__1666(.A (n_366), .B (n_363), .C (n_3), .S0 (n_374),
       .S1 (n_497), .Y (n_375));
  AO21X2 g12006__7410(.A0 (n_191), .A1 (n_373), .B0 (n_372), .Y
       (n_379));
  EDFFTRX4 \d1_rb_rnout_reg[13] (.CK (clk), .D (n_361), .E (n_508), .RN
       (n_511), .Q (d1_tb[13]), .QN (UNCONNECTED40));
  AO21X2 g12013__6417(.A0 (n_220), .A1 (n_371), .B0 (n_134), .Y
       (n_378));
  INVXL g12012(.A (n_373), .Y (n_370));
  MXI3X1 g12016__5477(.A (n_367), .B (n_245), .C (n_4), .S0 (n_364),
       .S1 (n_501), .Y (n_369));
  EDFFTRX4 \d1_ra_rnout_reg[12] (.CK (clk), .D (n_355), .E (n_509), .RN
       (n_511), .Q (d1_ta[12]), .QN (UNCONNECTED41));
  MXI3X1 g12017__2398(.A (n_359), .B (n_356), .C (n_69), .S0 (n_367),
       .S1 (n_497), .Y (n_368));
  AO21X2 g12014__5107(.A0 (n_219), .A1 (n_366), .B0 (n_365), .Y
       (n_373));
  EDFFTRX4 \d1_rb_rnout_reg[12] (.CK (clk), .D (n_354), .E (n_508), .RN
       (n_511), .Q (d1_tb[12]), .QN (UNCONNECTED42));
  AO21X2 g12020__6260(.A0 (n_230), .A1 (n_364), .B0 (n_151), .Y
       (n_371));
  INVXL g12019(.A (n_366), .Y (n_363));
  MXI3X1 g12023__4319(.A (n_360), .B (n_244), .C (n_94), .S0 (n_357),
       .S1 (n_501), .Y (n_362));
  EDFFTRX4 \d1_ra_rnout_reg[11] (.CK (clk), .D (n_348), .E (n_509), .RN
       (n_511), .Q (d1_ta[11]), .QN (UNCONNECTED43));
  MXI3X1 g12024__8428(.A (n_352), .B (n_349), .C (n_15), .S0 (n_360),
       .S1 (n_497), .Y (n_361));
  AO21X2 g12021__5526(.A0 (n_229), .A1 (n_359), .B0 (n_358), .Y
       (n_366));
  EDFFTRX4 \d1_rb_rnout_reg[11] (.CK (clk), .D (n_347), .E (n_508), .RN
       (n_511), .Q (d1_tb[11]), .QN (UNCONNECTED44));
  AO21X2 g12027__6783(.A0 (n_202), .A1 (n_357), .B0 (n_141), .Y
       (n_364));
  INVXL g12026(.A (n_359), .Y (n_356));
  MXI3X1 g12030__3680(.A (n_353), .B (n_255), .C (n_21), .S0 (n_350),
       .S1 (n_501), .Y (n_355));
  EDFFTRX4 \d1_ra_rnout_reg[10] (.CK (clk), .D (n_341), .E (n_509), .RN
       (n_511), .Q (d1_ta[10]), .QN (UNCONNECTED45));
  MXI3X1 g12031__1617(.A (n_345), .B (n_342), .C (n_24), .S0 (n_353),
       .S1 (n_497), .Y (n_354));
  AO21X2 g12028__2802(.A0 (n_201), .A1 (n_352), .B0 (n_351), .Y
       (n_359));
  EDFFTRX4 \d1_rb_rnout_reg[10] (.CK (clk), .D (n_340), .E (n_508), .RN
       (n_511), .Q (d1_tb[10]), .QN (UNCONNECTED46));
  AO21X2 g12034__1705(.A0 (n_224), .A1 (n_350), .B0 (n_137), .Y
       (n_357));
  INVXL g12033(.A (n_352), .Y (n_349));
  MXI3X1 g12038__5122(.A (n_346), .B (n_259), .C (n_27), .S0 (n_343),
       .S1 (n_501), .Y (n_348));
  EDFFTRX4 \d1_ra_rnout_reg[9] (.CK (clk), .D (n_335), .E (n_509), .RN
       (n_511), .Q (d1_ta[9]), .QN (UNCONNECTED47));
  MXI3X1 g12037__8246(.A (n_338), .B (n_334), .C (n_92), .S0 (n_346),
       .S1 (n_497), .Y (n_347));
  AO21X2 g12035__7098(.A0 (n_223), .A1 (n_345), .B0 (n_344), .Y
       (n_352));
  EDFFTRX4 \d1_rb_rnout_reg[9] (.CK (clk), .D (n_333), .E (n_508), .RN
       (n_511), .Q (d1_tb[9]), .QN (UNCONNECTED48));
  AO21X2 g12041__6131(.A0 (n_180), .A1 (n_343), .B0 (n_140), .Y
       (n_350));
  INVXL g12040(.A (n_345), .Y (n_342));
  MXI3X1 g12045__1881(.A (n_339), .B (n_254), .C (n_63), .S0 (n_336),
       .S1 (n_501), .Y (n_341));
  EDFFTRX4 \d1_ra_rnout_reg[8] (.CK (clk), .D (n_327), .E (n_509), .RN
       (n_511), .Q (d1_ta[8]), .QN (UNCONNECTED49));
  MXI3X1 g12044__5115(.A (n_331), .B (n_328), .C (n_86), .S0 (n_339),
       .S1 (n_497), .Y (n_340));
  AO21X2 g12042__7482(.A0 (n_179), .A1 (n_338), .B0 (n_337), .Y
       (n_345));
  AO21X2 g12049__4733(.A0 (n_222), .A1 (n_336), .B0 (n_132), .Y
       (n_343));
  EDFFTRX4 \d1_rb_rnout_reg[8] (.CK (clk), .D (n_324), .E (n_508), .RN
       (n_511), .Q (d1_tb[8]), .QN (UNCONNECTED50));
  MXI3X1 g12051__6161(.A (n_332), .B (n_240), .C (n_7), .S0 (n_329),
       .S1 (n_501), .Y (n_335));
  INVXL g12047(.A (n_338), .Y (n_334));
  MXI3X1 g12052__9315(.A (n_326), .B (n_321), .C (n_91), .S0 (n_332),
       .S1 (n_497), .Y (n_333));
  EDFFTRX4 \d1_ra_rnout_reg[7] (.CK (clk), .D (n_320), .E (n_509), .RN
       (n_511), .Q (d1_ta[7]), .QN (UNCONNECTED51));
  AO21X2 g12048__9945(.A0 (n_221), .A1 (n_331), .B0 (n_330), .Y
       (n_338));
  AO21X2 g12056__2883(.A0 (n_198), .A1 (n_329), .B0 (n_168), .Y
       (n_336));
  EDFFTRX4 \d1_rb_rnout_reg[7] (.CK (clk), .D (n_317), .E (n_508), .RN
       (n_511), .Q (d1_tb[7]), .QN (UNCONNECTED52));
  INVXL g12054(.A (n_331), .Y (n_328));
  MXI3X1 g12058__2346(.A (n_323), .B (n_238), .C (n_84), .S0 (n_322),
       .S1 (n_501), .Y (n_327));
  AO21X2 g12055__1666(.A0 (n_197), .A1 (n_326), .B0 (n_325), .Y
       (n_331));
  MXI3X1 g12059__7410(.A (n_319), .B (n_314), .C (n_55), .S0 (n_323),
       .S1 (n_497), .Y (n_324));
  EDFFTRX4 \d1_ra_rnout_reg[6] (.CK (clk), .D (n_313), .E (n_509), .RN
       (n_511), .Q (d1_ta[6]), .QN (UNCONNECTED53));
  AO21X2 g12063__6417(.A0 (n_194), .A1 (n_322), .B0 (n_153), .Y
       (n_329));
  EDFFTRX4 \d1_rb_rnout_reg[6] (.CK (clk), .D (n_312), .E (n_508), .RN
       (n_511), .Q (d1_tb[6]), .QN (UNCONNECTED54));
  INVXL g12061(.A (n_326), .Y (n_321));
  MXI3X1 g12065__5477(.A (n_316), .B (n_233), .C (n_28), .S0 (n_315),
       .S1 (n_501), .Y (n_320));
  AO21X2 g12062__2398(.A0 (n_193), .A1 (n_319), .B0 (n_318), .Y
       (n_326));
  MXI3X1 g12066__5107(.A (n_310), .B (n_307), .C (n_65), .S0 (n_316),
       .S1 (n_497), .Y (n_317));
  EDFFTRX4 \d1_ra_rnout_reg[5] (.CK (clk), .D (n_306), .E (n_509), .RN
       (n_511), .Q (d1_ta[5]), .QN (UNCONNECTED55));
  AO21X2 g12070__6260(.A0 (n_182), .A1 (n_315), .B0 (n_155), .Y
       (n_322));
  EDFFTRX4 \d1_rb_rnout_reg[5] (.CK (clk), .D (n_305), .E (n_508), .RN
       (n_511), .Q (d1_tb[5]), .QN (UNCONNECTED56));
  INVXL g12068(.A (n_319), .Y (n_314));
  MXI3X1 g12072__4319(.A (n_311), .B (n_252), .C (n_46), .S0 (n_308),
       .S1 (n_501), .Y (n_313));
  MXI3X1 g12073__8428(.A (n_303), .B (n_300), .C (n_49), .S0 (n_311),
       .S1 (n_497), .Y (n_312));
  EDFFTRX4 \d1_ra_rnout_reg[4] (.CK (clk), .D (n_299), .E (n_509), .RN
       (n_511), .Q (d1_ta[4]), .QN (UNCONNECTED57));
  AO21X2 g12069__5526(.A0 (n_181), .A1 (n_310), .B0 (n_309), .Y
       (n_319));
  EDFFTRX4 \d1_rb_rnout_reg[4] (.CK (clk), .D (n_296), .E (n_508), .RN
       (n_511), .Q (d1_tb[4]), .QN (UNCONNECTED58));
  AO21X2 g12077__6783(.A0 (n_218), .A1 (n_308), .B0 (n_154), .Y
       (n_315));
  INVXL g12075(.A (n_310), .Y (n_307));
  MXI3X1 g12080__3680(.A (n_304), .B (n_234), .C (n_40), .S0 (n_301),
       .S1 (n_501), .Y (n_306));
  EDFFTRX4 \d1_ra_rnout_reg[3] (.CK (clk), .D (n_292), .E (n_509), .RN
       (n_511), .Q (d1_ta[3]), .QN (UNCONNECTED59));
  MXI3X1 g12079__1617(.A (n_298), .B (n_293), .C (n_95), .S0 (n_304),
       .S1 (n_497), .Y (n_305));
  AO21X2 g12076__2802(.A0 (n_217), .A1 (n_303), .B0 (n_302), .Y
       (n_310));
  EDFFTRX4 \d1_rb_rnout_reg[3] (.CK (clk), .D (n_291), .E (n_508), .RN
       (n_511), .Q (d1_tb[3]), .QN (UNCONNECTED60));
  AO21X2 g12084__1705(.A0 (n_184), .A1 (n_301), .B0 (n_156), .Y
       (n_308));
  INVXL g12082(.A (n_303), .Y (n_300));
  MXI3X1 g12086__5122(.A (n_295), .B (n_257), .C (n_93), .S0 (n_294),
       .S1 (n_501), .Y (n_299));
  AO21X2 g12083__8246(.A0 (n_183), .A1 (n_298), .B0 (n_297), .Y
       (n_303));
  MXI3X1 g12087__7098(.A (n_289), .B (n_286), .C (n_17), .S0 (n_295),
       .S1 (n_497), .Y (n_296));
  EDFFTRX4 \d1_ra_rnout_reg[2] (.CK (clk), .D (n_285), .E (n_509), .RN
       (n_511), .Q (d1_ta[2]), .QN (UNCONNECTED61));
  EDFFTRX4 \d1_rb_rnout_reg[2] (.CK (clk), .D (n_279), .E (n_508), .RN
       (n_511), .Q (d1_tb[2]), .QN (UNCONNECTED62));
  EDFFTRX4 \d1_rb_rnout_reg[1] (.CK (clk), .D (n_276), .E (n_508), .RN
       (n_511), .Q (d1_tb[1]), .QN (UNCONNECTED63));
  EDFFTRX4 \d1_ra_rnout_reg[1] (.CK (clk), .D (n_277), .E (n_509), .RN
       (n_511), .Q (d1_ta[1]), .QN (UNCONNECTED64));
  AO21X2 g12094__6131(.A0 (n_227), .A1 (n_294), .B0 (n_164), .Y
       (n_301));
  INVXL g12091(.A (n_298), .Y (n_293));
  MXI3X1 g12095__1881(.A (n_290), .B (n_248), .C (n_78), .S0 (n_287),
       .S1 (n_501), .Y (n_292));
  MXI3X1 g12096__5115(.A (n_281), .B (n_272), .C (n_81), .S0 (n_290),
       .S1 (n_497), .Y (n_291));
  AO21X2 g12092__7482(.A0 (n_226), .A1 (n_289), .B0 (n_288), .Y
       (n_298));
  DFFTRX4 \d1_ra_rnout_reg[0] (.CK (clk), .D (n_284), .RN (n_511), .Q
       (d1_ta[0]), .QN (UNCONNECTED65));
  DFFTRX4 \d1_rb_rnout_reg[0] (.CK (clk), .D (n_283), .RN (n_511), .Q
       (d1_tb[0]), .QN (UNCONNECTED66));
  AO21X2 g12100__4733(.A0 (n_196), .A1 (n_287), .B0 (n_157), .Y
       (n_294));
  INVXL g12098(.A (n_289), .Y (n_286));
  MXI3X1 g12102__6161(.A (n_278), .B (n_236), .C (n_29), .S0 (n_273),
       .S1 (n_501), .Y (n_285));
  MXI3X1 g12099__9315(.A (n_282), .B (n_52), .C (n_126), .S0 (n_501),
       .S1 (n_250), .Y (n_284));
  MXI3X1 g12103__9945(.A (n_282), .B (n_36), .C (n_128), .S0 (n_497),
       .S1 (n_205), .Y (n_283));
  AO21X2 g12101__2883(.A0 (n_195), .A1 (n_281), .B0 (n_280), .Y
       (n_289));
  MXI3X1 g12104__2346(.A (n_271), .B (n_265), .C (n_48), .S0 (n_278),
       .S1 (n_497), .Y (n_279));
  MXI3X1 g12122__1666(.A (n_275), .B (n_274), .C (n_25), .S0 (n_228),
       .S1 (n_501), .Y (n_277));
  MXI3X1 g12123__7410(.A (n_275), .B (n_274), .C (n_10), .S0 (n_203),
       .S1 (n_497), .Y (n_276));
  AO21X2 g12142__6417(.A0 (n_189), .A1 (n_273), .B0 (n_161), .Y
       (n_287));
  DFFTRX4 \c1_cState_reg[2] (.CK (clk), .D (c1_nState[2]), .RN (n_511),
       .Q (UNCONNECTED67), .QN (c1_cState[2]));
  INVXL g12140(.A (n_281), .Y (n_272));
  AO21X2 g12141__5477(.A0 (n_188), .A1 (n_271), .B0 (n_270), .Y
       (n_281));
  EDFFTRX2 \d1_rout_rnout_reg[11] (.CK (clk), .D (d1_tb[11]), .E
       (done), .RN (n_511), .Q (UNCONNECTED68), .QN
       (\d1_rout_rnout[11]_237 ));
  EDFFTRX2 \d1_rout_rnout_reg[25] (.CK (clk), .D (d1_tb[25]), .E
       (done), .RN (n_511), .Q (UNCONNECTED69), .QN
       (\d1_rout_rnout[25]_251 ));
  EDFFTRX2 \d1_rout_rnout_reg[18] (.CK (clk), .D (d1_tb[18]), .E
       (done), .RN (n_511), .Q (UNCONNECTED70), .QN
       (\d1_rout_rnout[18]_244 ));
  EDFFTRX2 \d1_rout_rnout_reg[14] (.CK (clk), .D (d1_tb[14]), .E
       (done), .RN (n_511), .Q (UNCONNECTED71), .QN
       (\d1_rout_rnout[14]_240 ));
  EDFFTRX2 \d1_rout_rnout_reg[24] (.CK (clk), .D (d1_tb[24]), .E
       (done), .RN (n_511), .Q (UNCONNECTED72), .QN
       (\d1_rout_rnout[24]_250 ));
  EDFFTRX2 \d1_rout_rnout_reg[16] (.CK (clk), .D (d1_tb[16]), .E
       (done), .RN (n_511), .Q (UNCONNECTED73), .QN
       (\d1_rout_rnout[16]_242 ));
  EDFFTRX2 \d1_rout_rnout_reg[20] (.CK (clk), .D (d1_tb[20]), .E
       (done), .RN (n_511), .Q (UNCONNECTED74), .QN
       (\d1_rout_rnout[20]_246 ));
  EDFFTRX2 \d1_rout_rnout_reg[1] (.CK (clk), .D (d1_tb[1]), .E (done),
       .RN (n_511), .Q (UNCONNECTED75), .QN (\d1_rout_rnout[1]_227 ));
  EDFFTRX2 \d1_rout_rnout_reg[3] (.CK (clk), .D (d1_tb[3]), .E (done),
       .RN (n_511), .Q (UNCONNECTED76), .QN (\d1_rout_rnout[3]_229 ));
  EDFFTRX2 \d1_rout_rnout_reg[5] (.CK (clk), .D (d1_tb[5]), .E (done),
       .RN (n_511), .Q (UNCONNECTED77), .QN (\d1_rout_rnout[5]_231 ));
  EDFFTRX2 \d1_rout_rnout_reg[6] (.CK (clk), .D (d1_tb[6]), .E (done),
       .RN (n_511), .Q (UNCONNECTED78), .QN (\d1_rout_rnout[6]_232 ));
  EDFFTRX2 \d1_rout_rnout_reg[8] (.CK (clk), .D (d1_tb[8]), .E (done),
       .RN (n_511), .Q (UNCONNECTED79), .QN (\d1_rout_rnout[8]_234 ));
  EDFFTRX2 \d1_rout_rnout_reg[10] (.CK (clk), .D (d1_tb[10]), .E
       (done), .RN (n_511), .Q (UNCONNECTED80), .QN
       (\d1_rout_rnout[10]_236 ));
  EDFFTRX2 \d1_rout_rnout_reg[17] (.CK (clk), .D (d1_tb[17]), .E
       (done), .RN (n_511), .Q (UNCONNECTED81), .QN
       (\d1_rout_rnout[17]_243 ));
  EDFFTRX2 \d1_rout_rnout_reg[19] (.CK (clk), .D (d1_tb[19]), .E
       (done), .RN (n_511), .Q (UNCONNECTED82), .QN
       (\d1_rout_rnout[19]_245 ));
  EDFFTRX2 \d1_rout_rnout_reg[26] (.CK (clk), .D (d1_tb[26]), .E
       (done), .RN (n_511), .Q (UNCONNECTED83), .QN
       (\d1_rout_rnout[26]_252 ));
  EDFFTRX2 \d1_rout_rnout_reg[28] (.CK (clk), .D (d1_tb[28]), .E
       (done), .RN (n_511), .Q (UNCONNECTED84), .QN
       (\d1_rout_rnout[28]_254 ));
  EDFFTRX2 \d1_rout_rnout_reg[30] (.CK (clk), .D (d1_tb[30]), .E
       (done), .RN (n_511), .Q (UNCONNECTED85), .QN
       (\d1_rout_rnout[30]_256 ));
  EDFFTRX2 \d1_rout_rnout_reg[29] (.CK (clk), .D (d1_tb[29]), .E
       (done), .RN (n_511), .Q (UNCONNECTED86), .QN
       (\d1_rout_rnout[29]_255 ));
  EDFFTRX2 \d1_rout_rnout_reg[4] (.CK (clk), .D (d1_tb[4]), .E (done),
       .RN (n_511), .Q (UNCONNECTED87), .QN (\d1_rout_rnout[4]_230 ));
  EDFFTRX2 \d1_rout_rnout_reg[15] (.CK (clk), .D (d1_tb[15]), .E
       (done), .RN (n_511), .Q (UNCONNECTED88), .QN
       (\d1_rout_rnout[15]_241 ));
  EDFFTRX2 \d1_rout_rnout_reg[13] (.CK (clk), .D (d1_tb[13]), .E
       (done), .RN (n_511), .Q (UNCONNECTED89), .QN
       (\d1_rout_rnout[13]_239 ));
  EDFFTRX2 \d1_rout_rnout_reg[2] (.CK (clk), .D (d1_tb[2]), .E (done),
       .RN (n_511), .Q (UNCONNECTED90), .QN (\d1_rout_rnout[2]_228 ));
  EDFFTRX2 \d1_rout_rnout_reg[27] (.CK (clk), .D (d1_tb[27]), .E
       (done), .RN (n_511), .Q (UNCONNECTED91), .QN
       (\d1_rout_rnout[27]_253 ));
  EDFFTRX2 \d1_rout_rnout_reg[22] (.CK (clk), .D (d1_tb[22]), .E
       (done), .RN (n_511), .Q (UNCONNECTED92), .QN
       (\d1_rout_rnout[22]_248 ));
  EDFFTRX2 \d1_rout_rnout_reg[12] (.CK (clk), .D (d1_tb[12]), .E
       (done), .RN (n_511), .Q (UNCONNECTED93), .QN
       (\d1_rout_rnout[12]_238 ));
  EDFFTRX2 \d1_rout_rnout_reg[23] (.CK (clk), .D (d1_tb[23]), .E
       (done), .RN (n_511), .Q (UNCONNECTED94), .QN
       (\d1_rout_rnout[23]_249 ));
  EDFFTRX2 \d1_rout_rnout_reg[7] (.CK (clk), .D (d1_tb[7]), .E (done),
       .RN (n_511), .Q (UNCONNECTED95), .QN (\d1_rout_rnout[7]_233 ));
  EDFFTRX2 \d1_rout_rnout_reg[31] (.CK (clk), .D (d1_tb[31]), .E
       (done), .RN (n_511), .Q (UNCONNECTED96), .QN
       (\d1_rout_rnout[31]_257 ));
  EDFFTRX2 \d1_rout_rnout_reg[0] (.CK (clk), .D (d1_tb[0]), .E (done),
       .RN (n_511), .Q (UNCONNECTED97), .QN (\d1_rout_rnout[0]_226 ));
  EDFFTRX2 \d1_rout_rnout_reg[21] (.CK (clk), .D (d1_tb[21]), .E
       (done), .RN (n_511), .Q (UNCONNECTED98), .QN
       (\d1_rout_rnout[21]_247 ));
  EDFFTRX2 \d1_rout_rnout_reg[9] (.CK (clk), .D (d1_tb[9]), .E (done),
       .RN (n_511), .Q (UNCONNECTED99), .QN (\d1_rout_rnout[9]_235 ));
  OR2X2 g12146__2398(.A (n_135), .B (n_263), .Y (n_273));
  OR3X1 g12144__5107(.A (n_130), .B (n_146), .C (n_266), .Y (n_476));
  AO21X1 g12150__6260(.A0 (n_267), .A1 (n_225), .B0 (n_266), .Y
       (n_268));
  INVXL g12148(.A (n_271), .Y (n_265));
  TLATX4 \c1_nState_reg[2] (.G (1'b1), .D (n_176), .Q (c1_nState[2]),
       .QN (UNCONNECTED100));
  INVXL g12154(.A (n_263), .Y (n_264));
  INVXL g12194(.A (n_262), .Y (n_382));
  INVXL g12162(.A (n_261), .Y (n_428));
  INVXL g12167(.A (n_260), .Y (n_402));
  INVXL g12202(.A (n_259), .Y (n_346));
  INVXL g12198(.A (n_258), .Y (n_471));
  INVXL g12155(.A (n_257), .Y (n_295));
  INVXL g12156(.A (n_256), .Y (n_486));
  INVXL g12157(.A (n_255), .Y (n_353));
  INVXL g12158(.A (n_254), .Y (n_339));
  INVXL g12159(.A (n_253), .Y (n_374));
  INVXL g12160(.A (n_252), .Y (n_311));
  INVXL g12161(.A (n_251), .Y (n_504));
  INVX1 g12149(.A (n_250), .Y (n_509));
  AND2X2 g12147__4319(.A (n_204), .B (n_249), .Y (n_501));
  OA21X2 g12152__8428(.A0 (n_175), .A1 (n_173), .B0 (n_249), .Y
       (n_497));
  INVXL g12192(.A (n_248), .Y (n_290));
  INVXL g12165(.A (n_247), .Y (n_443));
  INVXL g12166(.A (n_246), .Y (n_451));
  INVXL g12168(.A (n_245), .Y (n_367));
  INVXL g12169(.A (n_244), .Y (n_360));
  INVXL g12163(.A (n_243), .Y (n_419));
  INVXL g12189(.A (n_242), .Y (n_465));
  INVXL g12190(.A (n_241), .Y (n_412));
  INVXL g12191(.A (n_240), .Y (n_332));
  INVXL g12164(.A (n_239), .Y (n_435));
  INVXL g12193(.A (n_238), .Y (n_323));
  INVXL g12195(.A (n_237), .Y (n_390));
  INVXL g12196(.A (n_236), .Y (n_278));
  INVXL g12197(.A (n_274), .Y (n_275));
  INVXL g12199(.A (n_235), .Y (n_498));
  INVXL g12200(.A (n_234), .Y (n_304));
  INVXL g12201(.A (n_233), .Y (n_316));
  INVXL g12203(.A (n_232), .Y (n_474));
  INVXL g12204(.A (n_231), .Y (n_407));
  AND2X1 g12187__5526(.A (n_230), .B (n_229), .Y (n_245));
  AND2X1 g12172__6783(.A (n_178), .B (n_228), .Y (n_263));
  AND2X1 g12174__3680(.A (n_227), .B (n_226), .Y (n_257));
  AND2X1 g12175__1617(.A (n_480), .B (n_225), .Y (n_256));
  AND2X1 g12176__2802(.A (n_224), .B (n_223), .Y (n_255));
  AND2X1 g12177__1705(.A (n_222), .B (n_221), .Y (n_254));
  AND2X1 g12178__5122(.A (n_220), .B (n_219), .Y (n_253));
  AND2X1 g12179__8246(.A (n_218), .B (n_217), .Y (n_252));
  AND2X1 g12180__7098(.A (n_144), .B (n_216), .Y (n_251));
  AND2X1 g12181__6131(.A (n_215), .B (n_214), .Y (n_261));
  AND2X1 g12182__1881(.A (n_213), .B (n_212), .Y (n_243));
  AND2X1 g12183__5115(.A (n_211), .B (n_210), .Y (n_239));
  AND2X1 g12184__7482(.A (n_209), .B (n_208), .Y (n_247));
  AND2X1 g12185__4733(.A (n_207), .B (n_441), .Y (n_246));
  AND2X1 g12186__6161(.A (n_150), .B (n_392), .Y (n_260));
  OA21X2 g12153__9315(.A0 (n_206), .A1 (n_205), .B0 (n_204), .Y
       (n_250));
  AO21X2 g12151__9945(.A0 (n_177), .A1 (n_203), .B0 (n_149), .Y
       (n_271));
  AND2X1 g12188__2883(.A (n_202), .B (n_201), .Y (n_244));
  AND2X1 g12208__2346(.A (n_138), .B (n_453), .Y (n_242));
  AND2X1 g12209__1666(.A (n_200), .B (n_199), .Y (n_241));
  AND2X1 g12210__7410(.A (n_198), .B (n_197), .Y (n_240));
  AND2X1 g12211__6417(.A (n_196), .B (n_195), .Y (n_248));
  AND2X1 g12212__5477(.A (n_194), .B (n_193), .Y (n_238));
  AND2X1 g12213__2398(.A (n_192), .B (n_191), .Y (n_262));
  AND2X1 g12214__5107(.A (n_190), .B (n_380), .Y (n_237));
  AND2X1 g12215__6260(.A (n_189), .B (n_188), .Y (n_236));
  AND2X1 g12223__4319(.A (n_397), .B (n_187), .Y (n_231));
  AND2X1 g12217__8428(.A (n_457), .B (n_186), .Y (n_258));
  AND2X1 g12218__5526(.A (n_185), .B (n_267), .Y (n_235));
  AND2X1 g12219__6783(.A (n_184), .B (n_183), .Y (n_234));
  AND2X1 g12220__3680(.A (n_182), .B (n_181), .Y (n_233));
  AND2X1 g12221__1617(.A (n_180), .B (n_179), .Y (n_259));
  AND2X1 g12222__2802(.A (n_470), .B (n_148), .Y (n_232));
  AND2X2 g12216__1705(.A (n_178), .B (n_177), .Y (n_274));
  OAI31XL g12145__5122(.A0 (n_206), .A1 (n_175), .A2 (n_174), .B0
       (n_173), .Y (n_176));
  OR2X1 g12206__8246(.A (n_174), .B (n_172), .Y (n_249));
  AND2X1 g12205__7098(.A (n_228), .B (n_203), .Y (n_282));
  OR2X1 g12171__6131(.A (n_143), .B (n_171), .Y (n_266));
  OR2X2 g12207__1881(.A (n_170), .B (n_454), .Y (n_455));
  OR2X2 g12173__5115(.A (n_169), .B (n_393), .Y (n_394));
  INVXL g12298(.A (n_197), .Y (n_168));
  INVXL g12291(.A (n_210), .Y (n_167));
  INVXL g12241(.A (n_380), .Y (n_166));
  INVXL g12254(.A (n_441), .Y (n_165));
  INVXL g12229(.A (n_226), .Y (n_164));
  INVXL g12292(.A (n_187), .Y (n_163));
  INVXL g12228(.A (n_191), .Y (n_162));
  INVXL g12234(.A (n_188), .Y (n_161));
  INVXL g12299(.A (n_208), .Y (n_160));
  INVXL g12290(.A (n_158), .Y (n_159));
  INVXL g12225(.A (n_195), .Y (n_157));
  INVXL g12227(.A (n_183), .Y (n_156));
  INVXL g12231(.A (n_181), .Y (n_155));
  INVXL g12232(.A (n_217), .Y (n_154));
  INVXL g12233(.A (n_193), .Y (n_153));
  INVXL g12235(.A (n_186), .Y (n_152));
  INVXL g12236(.A (n_229), .Y (n_151));
  INVXL g12237(.A (n_393), .Y (n_150));
  INVXL g12316(.A (n_405), .Y (n_200));
  INVXL g12240(.A (n_426), .Y (n_211));
  INVXL g12242(.A (n_325), .Y (n_198));
  INVXL g12238(.A (n_365), .Y (n_220));
  INVXL g12252(.A (n_358), .Y (n_230));
  INVXL g12230(.A (n_149), .Y (n_178));
  INVXL g12226(.A (n_148), .Y (n_463));
  INVXL g12248(.A (n_372), .Y (n_192));
  OR2X1 g12170__7482(.A (c1_cState[0]), .B (n_173), .Y (n_204));
  INVXL g12315(.A (n_169), .Y (n_190));
  INVXL g12239(.A (n_270), .Y (n_189));
  INVXL g12250(.A (n_147), .Y (n_457));
  INVXL g12246(.A (n_146), .Y (n_480));
  INVXL g12249(.A (n_267), .Y (n_145));
  INVXL g12289(.A (n_143), .Y (n_144));
  INVXL g12293(.A (n_172), .Y (n_142));
  INVXL g12295(.A (n_201), .Y (n_141));
  INVXL g12297(.A (n_179), .Y (n_140));
  INVXL g12296(.A (n_214), .Y (n_139));
  INVXL g12318(.A (n_454), .Y (n_138));
  INVXL g12304(.A (n_223), .Y (n_137));
  INVXL g12302(.A (n_199), .Y (n_136));
  INVXL g12294(.A (n_177), .Y (n_135));
  INVXL g12300(.A (n_219), .Y (n_134));
  INVXL g12301(.A (n_212), .Y (n_133));
  INVXL g12303(.A (n_221), .Y (n_132));
  INVXL g12309(.A (n_351), .Y (n_202));
  INVXL g12311(.A (n_171), .Y (n_185));
  INVXL g12313(.A (n_414), .Y (n_213));
  INVXL g12251(.A (n_309), .Y (n_182));
  INVXL g12253(.A (n_337), .Y (n_180));
  INVXL g12312(.A (n_280), .Y (n_196));
  INVXL g12244(.A (n_330), .Y (n_222));
  INVXL g12310(.A (n_170), .Y (n_207));
  INVXL g12314(.A (n_288), .Y (n_227));
  INVXL g12308(.A (n_318), .Y (n_194));
  INVXL g12307(.A (n_421), .Y (n_215));
  INVXL g12306(.A (n_297), .Y (n_184));
  INVXL g12245(.A (n_225), .Y (n_482));
  INVXL g12247(.A (n_433), .Y (n_209));
  INVXL g12317(.A (n_344), .Y (n_224));
  INVXL g12305(.A (n_302), .Y (n_218));
  INVXL g12319(.A (n_131), .Y (n_397));
  INVXL g12243(.A (n_130), .Y (n_470));
  INVX1 g12320(.A (n_205), .Y (n_508));
  OR2X1 g12255__4733(.A (d1_tb[31]), .B (n_123), .Y (n_216));
  OR2X1 g12322__6161(.A (c1_cState[0]), .B (n_174), .Y (n_158));
  AND2X1 g12279__9315(.A (d1_tb[29]), .B (n_129), .Y (n_146));
  AND2X1 g12261__9945(.A (d1_tb[1]), .B (n_116), .Y (n_149));
  OR2X1 g12257__2883(.A (d1_tb[28]), .B (n_122), .Y (n_148));
  OR2X2 g12258__2346(.A (d1_tb[5]), .B (n_110), .Y (n_183));
  AND2X2 g12343__1666(.A (d1_tb[13]), .B (n_115), .Y (n_351));
  OR2X2 g12331__7410(.A (d1_tb[9]), .B (n_113), .Y (n_197));
  AND2X2 g12351__6417(.A (d1_tb[12]), .B (n_111), .Y (n_344));
  AND2X2 g12344__5477(.A (d1_tb[25]), .B (n_98), .Y (n_170));
  AND2X2 g12338__2398(.A (d1_tb[6]), .B (n_127), .Y (n_302));
  OR2X2 g12278__5107(.A (d1_tb[29]), .B (n_129), .Y (n_225));
  AND2X2 g12286__6260(.A (d1_tb[11]), .B (n_114), .Y (n_337));
  OR2X2 g12270__4319(.A (d1_ta[0]), .B (n_128), .Y (n_228));
  OR2X2 g12266__8428(.A (d1_tb[27]), .B (n_124), .Y (n_186));
  OR2X2 g12259__5526(.A (d1_tb[16]), .B (n_121), .Y (n_191));
  OR2X2 g12260__6783(.A (d1_tb[4]), .B (n_103), .Y (n_226));
  OR2X2 g12262__3680(.A (d1_tb[7]), .B (n_119), .Y (n_181));
  OR2X2 g12334__1617(.A (d1_tb[21]), .B (n_105), .Y (n_212));
  OR2X2 g12256__2802(.A (d1_tb[3]), .B (n_106), .Y (n_195));
  AND2X2 g12273__1705(.A (d1_tb[23]), .B (n_117), .Y (n_426));
  OR2X2 g12332__5122(.A (d1_tb[24]), .B (n_102), .Y (n_208));
  OR2X2 g12264__8246(.A (d1_tb[8]), .B (n_108), .Y (n_193));
  OR2X2 g12263__7098(.A (d1_tb[6]), .B (n_127), .Y (n_217));
  OR2X2 g12336__6131(.A (d1_tb[10]), .B (n_120), .Y (n_221));
  OR2X2 g12265__1881(.A (d1_tb[2]), .B (n_125), .Y (n_188));
  OR2X2 g12267__5115(.A (d1_tb[14]), .B (n_118), .Y (n_229));
  OR2X2 g12268__7482(.A (d1_tb[0]), .B (n_126), .Y (n_203));
  AND2X2 g12271__4733(.A (d1_tb[15]), .B (n_104), .Y (n_365));
  AND2X2 g12272__6161(.A (d1_tb[2]), .B (n_125), .Y (n_270));
  AND2X2 g12350__9315(.A (d1_tb[20]), .B (n_112), .Y (n_405));
  OR2X2 g12282__9945(.A (d1_tb[30]), .B (n_107), .Y (n_267));
  AND2X2 g12269__2883(.A (d1_tb[18]), .B (n_99), .Y (n_393));
  AND3X2 g12224__2346(.A (n_206), .B (c1_cState[0]), .C (c1_cState[1]),
       .Y (done));
  AND2X1 g12283__1666(.A (d1_tb[27]), .B (n_124), .Y (n_147));
  AND2X1 g12321__7410(.A (d1_tb[31]), .B (n_123), .Y (n_143));
  AND2X1 g12276__6417(.A (d1_tb[28]), .B (n_122), .Y (n_130));
  AND2X1 g12353__5477(.A (d1_tb[19]), .B (n_101), .Y (n_131));
  AND2X2 g12281__2398(.A (d1_tb[16]), .B (n_121), .Y (n_372));
  AND2X2 g12277__5107(.A (d1_tb[10]), .B (n_120), .Y (n_330));
  AND2X2 g12284__6260(.A (d1_tb[7]), .B (n_119), .Y (n_309));
  AND2X2 g12285__4319(.A (d1_tb[14]), .B (n_118), .Y (n_358));
  OR2X2 g12323__8428(.A (d1_tb[23]), .B (n_117), .Y (n_210));
  OR2X2 g12325__5526(.A (c1_cState[0]), .B (n_206), .Y (n_172));
  OR2X2 g12327__6783(.A (d1_tb[1]), .B (n_116), .Y (n_177));
  OR2X2 g12328__3680(.A (d1_tb[13]), .B (n_115), .Y (n_201));
  OR2X2 g12329__1617(.A (d1_tb[22]), .B (n_109), .Y (n_214));
  OR2X2 g12330__2802(.A (d1_tb[11]), .B (n_114), .Y (n_179));
  AND2X2 g12275__1705(.A (d1_tb[9]), .B (n_113), .Y (n_325));
  OR2X2 g12335__5122(.A (d1_tb[20]), .B (n_112), .Y (n_199));
  OR2X2 g12337__8246(.A (d1_tb[12]), .B (n_111), .Y (n_223));
  AND2X2 g12339__7098(.A (d1_tb[5]), .B (n_110), .Y (n_297));
  AND2X2 g12341__6131(.A (d1_tb[22]), .B (n_109), .Y (n_421));
  AND2X2 g12342__1881(.A (d1_tb[8]), .B (n_108), .Y (n_318));
  AND2X2 g12345__5115(.A (d1_tb[30]), .B (n_107), .Y (n_171));
  AND2X2 g12346__7482(.A (d1_tb[3]), .B (n_106), .Y (n_280));
  AND2X2 g12347__4733(.A (d1_tb[21]), .B (n_105), .Y (n_414));
  AND2X2 g12349__6161(.A (d1_tb[17]), .B (n_100), .Y (n_169));
  OR2X2 g12333__9315(.A (d1_tb[15]), .B (n_104), .Y (n_219));
  OR2X2 g12354__9945(.A (c1_cState[1]), .B (n_175), .Y (n_205));
  AND2X2 g12348__2883(.A (d1_tb[4]), .B (n_103), .Y (n_288));
  AND2X2 g12280__2346(.A (d1_tb[24]), .B (n_102), .Y (n_433));
  OR2X2 g12324__1666(.A (d1_tb[19]), .B (n_101), .Y (n_187));
  OR2X2 g12274__7410(.A (d1_tb[17]), .B (n_100), .Y (n_380));
  OR2X2 g12340__6417(.A (d1_tb[26]), .B (n_97), .Y (n_453));
  OR2X2 g12287__5477(.A (d1_tb[18]), .B (n_99), .Y (n_392));
  OR2X2 g12288__2398(.A (d1_tb[25]), .B (n_98), .Y (n_441));
  AND2X2 g12352__5107(.A (d1_tb[26]), .B (n_97), .Y (n_454));
  OR2X2 g12326__6260(.A (c1_cState[1]), .B (c1_cState[2]), .Y (n_173));
  INVXL g12382(.A (in1[25]), .Y (n_96));
  INVXL g12435(.A (in2[5]), .Y (n_95));
  INVXL g12431(.A (in1[13]), .Y (n_94));
  INVXL g12427(.A (in1[4]), .Y (n_93));
  INVXL g12437(.A (in2[11]), .Y (n_92));
  INVXL g12384(.A (in2[9]), .Y (n_91));
  INVXL g12399(.A (\d1_rout_rnout[18]_244 ), .Y (out[18]));
  INVXL g12464(.A (\d1_rout_rnout[19]_245 ), .Y (out[19]));
  INVXL g12462(.A (\d1_rout_rnout[21]_247 ), .Y (out[21]));
  INVXL g12429(.A (in1[16]), .Y (n_87));
  INVXL g12453(.A (in2[10]), .Y (n_86));
  INVXL g12370(.A (in1[18]), .Y (n_85));
  INVXL g12438(.A (in1[8]), .Y (n_84));
  INVXL g12451(.A (in2[24]), .Y (n_83));
  INVXL g12434(.A (in2[28]), .Y (n_82));
  INVXL g12442(.A (in2[3]), .Y (n_81));
  INVXL g12388(.A (in1[26]), .Y (n_80));
  INVXL g12470(.A (\d1_rout_rnout[8]_234 ), .Y (out[8]));
  INVXL g12425(.A (in1[3]), .Y (n_78));
  INVXL g12386(.A (in1[31]), .Y (n_77));
  INVXL g12359(.A (in2[20]), .Y (n_76));
  INVXL g12424(.A (in2[21]), .Y (n_75));
  INVXL g12396(.A (\d1_rout_rnout[17]_243 ), .Y (out[17]));
  INVXL g12461(.A (\d1_rout_rnout[14]_240 ), .Y (out[14]));
  INVXL g12445(.A (in1[28]), .Y (n_72));
  INVXL g12385(.A (in2[30]), .Y (n_71));
  INVXL g12401(.A (\d1_rout_rnout[6]_232 ), .Y (out[6]));
  INVXL g12449(.A (in2[14]), .Y (n_69));
  INVXL g12443(.A (in2[23]), .Y (n_68));
  INVXL g12397(.A (\d1_rout_rnout[25]_251 ), .Y (out[25]));
  INVXL g12398(.A (\d1_rout_rnout[16]_242 ), .Y (out[16]));
  INVXL g12356(.A (in2[7]), .Y (n_65));
  INVXL g12467(.A (\d1_rout_rnout[15]_241 ), .Y (out[15]));
  INVXL g12365(.A (in1[10]), .Y (n_63));
  INVXL g12379(.A (in2[22]), .Y (n_62));
  INVXL g12400(.A (\d1_rout_rnout[27]_253 ), .Y (out[27]));
  INVXL g12454(.A (\d1_rout_rnout[29]_255 ), .Y (out[29]));
  INVXL g12358(.A (in2[26]), .Y (n_59));
  INVXL g12447(.A (in1[29]), .Y (n_58));
  INVXL g12456(.A (\d1_rout_rnout[30]_256 ), .Y (out[30]));
  INVXL g12471(.A (\d1_rout_rnout[12]_238 ), .Y (out[12]));
  INVXL g12378(.A (in2[8]), .Y (n_55));
  INVXL g12394(.A (\d1_rout_rnout[10]_236 ), .Y (out[10]));
  INVXL g12362(.A (in1[23]), .Y (n_53));
  INVXL g12439(.A (in1[0]), .Y (n_52));
  INVXL g12452(.A (in2[27]), .Y (n_51));
  INVXL g12392(.A (\d1_rout_rnout[31]_257 ), .Y (out[31]));
  INVXL g12428(.A (in2[6]), .Y (n_49));
  INVXL g12414(.A (d1_ta[20]), .Y (n_112));
  INVXL g12406(.A (d1_ta[28]), .Y (n_122));
  INVXL g12408(.A (d1_ta[14]), .Y (n_118));
  INVXL g12413(.A (d1_ta[0]), .Y (n_126));
  INVXL g12486(.A (d1_ta[12]), .Y (n_111));
  INVXL g12484(.A (d1_ta[19]), .Y (n_101));
  INVXL g12417(.A (d1_ta[6]), .Y (n_127));
  INVXL g12418(.A (d1_ta[4]), .Y (n_103));
  INVXL g12475(.A (d1_ta[11]), .Y (n_114));
  INVXL g12410(.A (d1_ta[24]), .Y (n_102));
  INVXL g12473(.A (d1_ta[25]), .Y (n_98));
  INVXL g12478(.A (d1_ta[30]), .Y (n_107));
  INVXL g12415(.A (d1_ta[7]), .Y (n_119));
  INVXL g12421(.A (d1_tb[0]), .Y (n_128));
  INVXL g12479(.A (d1_ta[29]), .Y (n_129));
  INVXL g12411(.A (d1_ta[8]), .Y (n_108));
  INVXL g12474(.A (d1_ta[15]), .Y (n_104));
  INVXL g12487(.A (c1_cState[0]), .Y (n_175));
  INVX2 g12488(.A (rst), .Y (n_511));
  INVXL g12375(.A (in2[2]), .Y (n_48));
  INVXL g12381(.A (in1[27]), .Y (n_47));
  INVXL g12430(.A (in1[6]), .Y (n_46));
  INVXL g12393(.A (\d1_rout_rnout[23]_249 ), .Y (out[23]));
  INVXL g12441(.A (in1[20]), .Y (n_44));
  INVXL g12458(.A (\d1_rout_rnout[5]_231 ), .Y (out[5]));
  INVXL g12459(.A (\d1_rout_rnout[20]_246 ), .Y (out[20]));
  INVXL g12390(.A (\d1_rout_rnout[24]_250 ), .Y (out[24]));
  INVXL g12361(.A (in1[5]), .Y (n_40));
  INVXL g12469(.A (\d1_rout_rnout[9]_235 ), .Y (out[9]));
  INVXL g12355(.A (go), .Y (n_38));
  INVXL g12391(.A (\d1_rout_rnout[28]_254 ), .Y (out[28]));
  INVXL g12357(.A (in2[0]), .Y (n_36));
  INVXL g12364(.A (in2[18]), .Y (n_35));
  INVXL g12444(.A (in2[25]), .Y (n_34));
  INVXL g12380(.A (in2[29]), .Y (n_33));
  INVXL g12465(.A (\d1_rout_rnout[0]_226 ), .Y (out[0]));
  INVXL g12426(.A (in2[16]), .Y (n_31));
  INVXL g12387(.A (in1[17]), .Y (n_30));
  INVXL g12369(.A (in1[2]), .Y (n_29));
  INVXL g12374(.A (in1[7]), .Y (n_28));
  INVXL g12371(.A (in1[11]), .Y (n_27));
  INVXL g12363(.A (in1[15]), .Y (n_26));
  INVXL g12446(.A (in1[1]), .Y (n_25));
  INVXL g12450(.A (in2[12]), .Y (n_24));
  INVXL g12383(.A (in1[19]), .Y (n_23));
  INVXL g12432(.A (in1[21]), .Y (n_22));
  INVXL g12366(.A (in1[12]), .Y (n_21));
  INVXL g12460(.A (\d1_rout_rnout[7]_233 ), .Y (out[7]));
  INVXL g12376(.A (in1[24]), .Y (n_19));
  INVXL g12463(.A (\d1_rout_rnout[26]_252 ), .Y (out[26]));
  INVXL g12389(.A (in2[4]), .Y (n_17));
  INVXL g12472(.A (\d1_rout_rnout[22]_248 ), .Y (out[22]));
  INVXL g12360(.A (in2[13]), .Y (n_15));
  INVXL g12466(.A (\d1_rout_rnout[4]_230 ), .Y (out[4]));
  INVXL g12395(.A (\d1_rout_rnout[11]_237 ), .Y (out[11]));
  INVXL g12455(.A (\d1_rout_rnout[13]_239 ), .Y (out[13]));
  INVXL g12377(.A (in2[31]), .Y (n_11));
  INVXL g12436(.A (in2[1]), .Y (n_10));
  INVXL g12402(.A (\d1_rout_rnout[3]_229 ), .Y (out[3]));
  INVXL g12433(.A (in2[19]), .Y (n_8));
  INVXL g12448(.A (in1[9]), .Y (n_7));
  INVXL g12367(.A (in1[30]), .Y (n_6));
  INVXL g12457(.A (\d1_rout_rnout[1]_227 ), .Y (out[1]));
  INVXL g12440(.A (in1[14]), .Y (n_4));
  INVXL g12373(.A (in2[15]), .Y (n_3));
  INVXL g12468(.A (\d1_rout_rnout[2]_228 ), .Y (out[2]));
  INVXL g12368(.A (in1[22]), .Y (n_1));
  INVXL g12372(.A (in2[17]), .Y (n_0));
  INVXL g12405(.A (d1_ta[9]), .Y (n_113));
  INVXL g12416(.A (d1_ta[1]), .Y (n_116));
  INVXL g12477(.A (d1_ta[5]), .Y (n_110));
  INVXL g12480(.A (d1_ta[16]), .Y (n_121));
  INVXL g12420(.A (d1_ta[18]), .Y (n_99));
  INVXL g12412(.A (d1_ta[10]), .Y (n_120));
  INVXL g12407(.A (d1_ta[21]), .Y (n_105));
  INVXL g12485(.A (d1_ta[17]), .Y (n_100));
  INVXL g12476(.A (d1_ta[2]), .Y (n_125));
  INVXL g12481(.A (d1_ta[23]), .Y (n_117));
  INVXL g12482(.A (d1_ta[22]), .Y (n_109));
  INVXL g12403(.A (d1_ta[3]), .Y (n_106));
  INVXL g12419(.A (d1_ta[27]), .Y (n_124));
  INVXL g12409(.A (d1_ta[13]), .Y (n_115));
  INVXL g12404(.A (d1_ta[26]), .Y (n_97));
  INVXL g12483(.A (d1_ta[31]), .Y (n_123));
  INVXL g12423(.A (c1_cState[1]), .Y (n_174));
  INVXL g12422(.A (c1_cState[2]), .Y (n_206));
endmodule

@genus:root: 15> syn_opt
Info    : Incrementally optimizing. [SYNTH-7]
        : Incrementally optimizing 'GCD' using 'high' effort.
 
Incremental optimization status
===============================
                                   Group   
                                  Tot Wrst     Total - - DRC Totals - -
                           Total  Weighted      Neg      Max       Max 
Operation                   Area   Slacks      Slack    Trans      Cap 
-------------------------------------------------------------------------------
 init_iopt                     0        0         0         0        0
 const_prop                    0        0         0         0        0
 hi_fo_buf                     0        0         0         0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
       hi_fo_buf         0  (        0 /        0 )  0.00

 
Incremental optimization status
===============================
                                   Group   
                                  Tot Wrst     Total - - DRC Totals - -
                           Total  Weighted      Neg      Max       Max 
Operation                   Area   Slacks      Slack    Trans      Cap 
-------------------------------------------------------------------------------
 init_delay                    0        0         0         0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
        crit_msz         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00
       crit_slew         0  (        0 /        0 )  0.00
        setup_dn         0  (        0 /        0 )  0.00
    plc_bal_star         0  (        0 /        0 )  0.00
     drc_buftimb         0  (        0 /        0 )  0.00
          plc_st         0  (        0 /        0 )  0.00
    plc_st_fence         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
      plc_laf_st         0  (        0 /        0 )  0.00
 plc_laf_st_fence         0  (        0 /        0 )  0.00
     drc_buftims         0  (        0 /        0 )  0.00
   plc_laf_lo_st         0  (        0 /        0 )  0.00
       plc_lo_st         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
       crit_swap         0  (        0 /        0 )  0.00
       mux2_swap         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
       load_swap         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
        setup_dn         0  (        0 /        0 )  0.00
       load_isol         0  (        0 /        0 )  0.00
       load_isol         0  (        0 /        0 )  0.00
        move_for         0  (        0 /        0 )  0.00
        move_for         0  (        0 /        0 )  0.00
          rem_bi         0  (        0 /        0 )  0.00
         offload         0  (        0 /        0 )  0.00
          rem_bi         0  (        0 /        0 )  0.00
         offload         0  (        0 /        0 )  0.00
           phase         0  (        0 /        0 )  0.00
        in_phase         0  (        0 /        0 )  0.00
       merge_bit         0  (        0 /        0 )  0.00
     merge_idrvr         0  (        0 /        0 )  0.00
     merge_iload         0  (        0 /        0 )  0.00
    merge_idload         0  (        0 /        0 )  0.00
      merge_drvr         0  (        0 /        0 )  0.00
      merge_load         0  (        0 /        0 )  0.00
          decomp         0  (        0 /        0 )  0.00
        p_decomp         0  (        0 /        0 )  0.00
        levelize         0  (        0 /        0 )  0.00
        mb_split         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
      mux_retime         0  (        0 /        0 )  0.00
         buf2inv         0  (        0 /        0 )  0.00
             exp         0  (        0 /        0 )  0.00
       gate_deco         0  (        0 /        0 )  0.00
       gcomp_tim         0  (        0 /        0 )  0.00
  inv_pair_2_buf         0  (        0 /        0 )  0.00


           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
         crr_220         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_200         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_300         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_400         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_111         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_210         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_110         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_101         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_201         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_211         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
        crit_msz         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00
       crit_slew         0  (        0 /        0 )  0.00
        setup_dn         0  (        0 /        0 )  0.00
    plc_bal_star         0  (        0 /        0 )  0.00
     drc_buftimb         0  (        0 /        0 )  0.00
          plc_st         0  (        0 /        0 )  0.00
    plc_st_fence         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
      plc_laf_st         0  (        0 /        0 )  0.00
 plc_laf_st_fence         0  (        0 /        0 )  0.00
     drc_buftims         0  (        0 /        0 )  0.00
       plc_lo_st         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
       crit_swap         0  (        0 /        0 )  0.00
       mux2_swap         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
       load_swap         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
        setup_dn         0  (        0 /        0 )  0.00
       load_isol         0  (        0 /        0 )  0.00
       load_isol         0  (        0 /        0 )  0.00
        move_for         0  (        0 /        0 )  0.00
        move_for         0  (        0 /        0 )  0.00
          rem_bi         0  (        0 /        0 )  0.00
         offload         0  (        0 /        0 )  0.00
          rem_bi         0  (        0 /        0 )  0.00
         offload         0  (        0 /        0 )  0.00
       merge_bit         0  (        0 /        0 )  0.00
     merge_idrvr         0  (        0 /        0 )  0.00
     merge_iload         0  (        0 /        0 )  0.00
    merge_idload         0  (        0 /        0 )  0.00
      merge_drvr         0  (        0 /        0 )  0.00
      merge_load         0  (        0 /        0 )  0.00
           phase         0  (        0 /        0 )  0.00
          decomp         0  (        0 /        0 )  0.00
        p_decomp         0  (        0 /        0 )  0.00
        levelize         0  (        0 /        0 )  0.00
        mb_split         0  (        0 /        0 )  0.00
        in_phase         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
      mux_retime         0  (        0 /        0 )  0.00
         buf2inv         0  (        0 /        0 )  0.00
             exp         0  (        0 /        0 )  0.00
       gate_deco         0  (        0 /        0 )  0.00
       gcomp_tim         0  (        0 /        0 )  0.00
  inv_pair_2_buf         0  (        0 /        0 )  0.00
 init_drc                      0        0         0         0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
          plc_st         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
        drc_bufs         0  (        0 /        0 )  0.00
        drc_fopt         0  (        0 /        0 )  0.00
        drc_bufb         0  (        0 /        0 )  0.00
      simple_buf         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00
       crit_slew         0  (        0 /        0 )  0.00


           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
          plc_st         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
      drc_buf_sp         0  (        0 /        0 )  0.00
        drc_bufs         0  (        0 /        0 )  0.00
        drc_fopt         0  (        0 /        0 )  0.00
        drc_bufb         0  (        0 /        0 )  0.00
      simple_buf         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00


           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
          plc_st         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
      drc_buf_sp         0  (        0 /        0 )  0.00
        drc_bufs         0  (        0 /        0 )  0.00
        drc_fopt         0  (        0 /        0 )  0.00
        drc_bufb         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00

 init_tns                      0        0         0         0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
            fopt         0  (        0 /        0 )  0.00
    plc_bal_star         0  (        0 /        0 )  0.00
     drc_buftimb         0  (        0 /        0 )  0.00
     drc_buftims         0  (        0 /        0 )  0.00
        crit_msz         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00
   plc_laf_lo_st         0  (        0 /        0 )  0.00
       plc_lo_st         0  (        0 /        0 )  0.00
       crit_swap         0  (        0 /        0 )  0.00
       mux2_swap         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
       load_swap         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
        setup_dn         0  (        0 /        0 )  0.00
       load_isol         0  (        0 /        0 )  0.00
       load_isol         0  (        0 /        0 )  0.00
        move_for         0  (        0 /        0 )  0.00
        move_for         0  (        0 /        0 )  0.00
          rem_bi         0  (        0 /        0 )  0.00
         offload         0  (        0 /        0 )  0.00
          rem_bi         0  (        0 /        0 )  0.00
         offload         0  (        0 /        0 )  0.00
       merge_bit         0  (        0 /        0 )  0.00
     merge_idrvr         0  (        0 /        0 )  0.00
     merge_iload         0  (        0 /        0 )  0.00
    merge_idload         0  (        0 /        0 )  0.00
      merge_drvr         0  (        0 /        0 )  0.00
      merge_load         0  (        0 /        0 )  0.00
           phase         0  (        0 /        0 )  0.00
          decomp         0  (        0 /        0 )  0.00
        p_decomp         0  (        0 /        0 )  0.00
        levelize         0  (        0 /        0 )  0.00
        mb_split         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
      mux_retime         0  (        0 /        0 )  0.00
       crr_local         0  (        0 /        0 )  0.00
         buf2inv         0  (        0 /        0 )  0.00

 init_area                     0        0         0         0        0
 rem_inv_qb                    0        0         0         0        0
 io_phase                      0        0         0         0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
           undup         0  (        0 /        0 )  0.00
         rem_buf         0  (        0 /        0 )  0.00
         rem_inv         0  (        0 /        0 )  0.00
        merge_bi         0  (        0 /        0 )  0.00
      rem_inv_qb        68  (        2 /        2 )  0.17
    seq_res_area         3  (        0 /        0 )  1.44
        io_phase        86  (       30 /       30 )  0.13
       gate_comp         0  (        0 /        0 )  0.03
       gcomp_mog         0  (        0 /        0 )  0.06
       glob_area        44  (        0 /       44 )  0.00
       area_down         0  (        0 /        0 )  0.00
      size_n_buf         0  (        0 /        0 )  0.00
  gate_deco_area         0  (        0 /        0 )  0.00
         rem_buf         0  (        0 /        0 )  0.00
         rem_inv         0  (        0 /        0 )  0.00
        merge_bi         0  (        0 /        0 )  0.00
      rem_inv_qb         0  (        0 /        0 )  0.00

 
Incremental optimization status
===============================
                                   Group   
                                  Tot Wrst     Total - - DRC Totals - -
                           Total  Weighted      Neg      Max       Max 
Operation                   Area   Slacks      Slack    Trans      Cap 
-------------------------------------------------------------------------------
 init_delay                    0        0         0         0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
         crr_220         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_200         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_300         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_400         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_111         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_210         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_110         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_101         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_201         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
         crr_211         0  (        0 /        0 )  0.00
        crr_glob         0  (        0 /        0 )  0.00
        crit_msz         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00
       crit_slew         0  (        0 /        0 )  0.00
        setup_dn         0  (        0 /        0 )  0.00
    plc_bal_star         0  (        0 /        0 )  0.00
     drc_buftimb         0  (        0 /        0 )  0.00
          plc_st         0  (        0 /        0 )  0.00
    plc_st_fence         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
      plc_laf_st         0  (        0 /        0 )  0.00
 plc_laf_st_fence         0  (        0 /        0 )  0.00
     drc_buftims         0  (        0 /        0 )  0.00
       plc_lo_st         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
       crit_swap         0  (        0 /        0 )  0.00
       mux2_swap         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
       load_swap         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
        setup_dn         0  (        0 /        0 )  0.00
       load_isol         0  (        0 /        0 )  0.00
       load_isol         0  (        0 /        0 )  0.00
        move_for         0  (        0 /        0 )  0.00
        move_for         0  (        0 /        0 )  0.00
          rem_bi         0  (        0 /        0 )  0.00
         offload         0  (        0 /        0 )  0.00
          rem_bi         0  (        0 /        0 )  0.00
         offload         0  (        0 /        0 )  0.00
       merge_bit         0  (        0 /        0 )  0.00
     merge_idrvr         0  (        0 /        0 )  0.00
     merge_iload         0  (        0 /        0 )  0.00
    merge_idload         0  (        0 /        0 )  0.00
      merge_drvr         0  (        0 /        0 )  0.00
      merge_load         0  (        0 /        0 )  0.00
           phase         0  (        0 /        0 )  0.00
          decomp         0  (        0 /        0 )  0.00
        p_decomp         0  (        0 /        0 )  0.00
        levelize         0  (        0 /        0 )  0.00
        mb_split         0  (        0 /        0 )  0.00
        in_phase         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
      mux_retime         0  (        0 /        0 )  0.00
         buf2inv         0  (        0 /        0 )  0.00
             exp         0  (        0 /        0 )  0.00
       gate_deco         0  (        0 /        0 )  0.00
       gcomp_tim         0  (        0 /        0 )  0.00
  inv_pair_2_buf         0  (        0 /        0 )  0.00
 init_drc                      0        0         0         0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
          plc_st         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
        drc_bufs         0  (        0 /        0 )  0.00
        drc_fopt         0  (        0 /        0 )  0.00
        drc_bufb         0  (        0 /        0 )  0.00
      simple_buf         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00
       crit_slew         0  (        0 /        0 )  0.00


           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
          plc_st         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
        drc_bufs         0  (        0 /        0 )  0.00
        drc_fopt         0  (        0 /        0 )  0.00
        drc_bufb         0  (        0 /        0 )  0.00
      simple_buf         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00


           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
          plc_st         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
        drc_bufs         0  (        0 /        0 )  0.00
        drc_fopt         0  (        0 /        0 )  0.00
        drc_bufb         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00

 init_tns                      0        0         0         0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
            fopt         0  (        0 /        0 )  0.00
    plc_bal_star         0  (        0 /        0 )  0.00
     drc_buftimb         0  (        0 /        0 )  0.00
     drc_buftims         0  (        0 /        0 )  0.00
        crit_msz         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00
   plc_laf_lo_st         0  (        0 /        0 )  0.00
       plc_lo_st         0  (        0 /        0 )  0.00
       crit_swap         0  (        0 /        0 )  0.00
       mux2_swap         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
       load_swap         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
        setup_dn         0  (        0 /        0 )  0.00
       load_isol         0  (        0 /        0 )  0.00
       load_isol         0  (        0 /        0 )  0.00
        move_for         0  (        0 /        0 )  0.00
        move_for         0  (        0 /        0 )  0.00
          rem_bi         0  (        0 /        0 )  0.00
         offload         0  (        0 /        0 )  0.00
          rem_bi         0  (        0 /        0 )  0.00
         offload         0  (        0 /        0 )  0.00
       merge_bit         0  (        0 /        0 )  0.00
     merge_idrvr         0  (        0 /        0 )  0.00
     merge_iload         0  (        0 /        0 )  0.00
    merge_idload         0  (        0 /        0 )  0.00
      merge_drvr         0  (        0 /        0 )  0.00
      merge_load         0  (        0 /        0 )  0.00
           phase         0  (        0 /        0 )  0.00
          decomp         0  (        0 /        0 )  0.00
        p_decomp         0  (        0 /        0 )  0.00
        levelize         0  (        0 /        0 )  0.00
        mb_split         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
      mux_retime         0  (        0 /        0 )  0.00
       crr_local         0  (        0 /        0 )  0.00
         buf2inv         0  (        0 /        0 )  0.00

 init_area                     0        0         0         0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
           undup         0  (        0 /        0 )  0.00
         rem_buf         0  (        0 /        0 )  0.00
         rem_inv         0  (        0 /        0 )  0.00
        merge_bi         0  (        0 /        0 )  0.00
      rem_inv_qb         0  (        0 /        0 )  0.00
        io_phase        56  (        0 /        0 )  0.01
       gate_comp         0  (        0 /        0 )  0.04
       gcomp_mog         0  (        0 /        0 )  0.05
       glob_area        44  (        0 /       44 )  0.01
       area_down         0  (        0 /        0 )  0.01
      size_n_buf         0  (        0 /        0 )  0.00
  gate_deco_area         0  (        0 /        0 )  0.00

 
Incremental optimization status
===============================
                                   Group   
                                  Tot Wrst     Total - - DRC Totals - -
                           Total  Weighted      Neg      Max       Max 
Operation                   Area   Slacks      Slack    Trans      Cap 
-------------------------------------------------------------------------------
 init_delay                    0        0         0         0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
        crit_msz         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00
       crit_slew         0  (        0 /        0 )  0.00
        setup_dn         0  (        0 /        0 )  0.00
    plc_bal_star         0  (        0 /        0 )  0.00
     drc_buftimb         0  (        0 /        0 )  0.00
          plc_st         0  (        0 /        0 )  0.00
    plc_st_fence         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
      plc_laf_st         0  (        0 /        0 )  0.00
 plc_laf_st_fence         0  (        0 /        0 )  0.00
     drc_buftims         0  (        0 /        0 )  0.00
   plc_laf_lo_st         0  (        0 /        0 )  0.00
       plc_lo_st         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
       crit_swap         0  (        0 /        0 )  0.00
       mux2_swap         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
       load_swap         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
        setup_dn         0  (        0 /        0 )  0.00
       load_isol         0  (        0 /        0 )  0.00
       load_isol         0  (        0 /        0 )  0.00
        move_for         0  (        0 /        0 )  0.00
        move_for         0  (        0 /        0 )  0.00
          rem_bi         0  (        0 /        0 )  0.00
         offload         0  (        0 /        0 )  0.00
          rem_bi         0  (        0 /        0 )  0.00
         offload         0  (        0 /        0 )  0.00
           phase         0  (        0 /        0 )  0.00
        in_phase         0  (        0 /        0 )  0.00
       merge_bit         0  (        0 /        0 )  0.00
     merge_idrvr         0  (        0 /        0 )  0.00
     merge_iload         0  (        0 /        0 )  0.00
    merge_idload         0  (        0 /        0 )  0.00
      merge_drvr         0  (        0 /        0 )  0.00
      merge_load         0  (        0 /        0 )  0.00
          decomp         0  (        0 /        0 )  0.00
        p_decomp         0  (        0 /        0 )  0.00
        levelize         0  (        0 /        0 )  0.00
        mb_split         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
      mux_retime         0  (        0 /        0 )  0.00
         buf2inv         0  (        0 /        0 )  0.00
             exp         0  (        0 /        0 )  0.00
       gate_deco         0  (        0 /        0 )  0.00
       gcomp_tim         0  (        0 /        0 )  0.00
  inv_pair_2_buf         0  (        0 /        0 )  0.00

 init_drc                      0        0         0         0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
          plc_st         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
        drc_bufs         0  (        0 /        0 )  0.00
        drc_fopt         0  (        0 /        0 )  0.00
        drc_bufb         0  (        0 /        0 )  0.00
      simple_buf         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00
       crit_slew         0  (        0 /        0 )  0.00


           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
          plc_st         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
        drc_bufs         0  (        0 /        0 )  0.00
        drc_fopt         0  (        0 /        0 )  0.00
        drc_bufb         0  (        0 /        0 )  0.00
      simple_buf         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00


           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
          plc_st         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
        drc_bufs         0  (        0 /        0 )  0.00
        drc_fopt         0  (        0 /        0 )  0.00
        drc_bufb         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00

==================================
Stage : incr_opt 
==================================
  =================
   Message Summary
  =================
------------------------------------------------------------------------
|   Id    |Sev  |Count |                 Message Text                  |
------------------------------------------------------------------------
| CFM-1   |Info |    1 |Wrote dofile.                                  |
| CFM-212 |Info |    1 |Forcing flat compare.                          |
| CFM-5   |Info |    1 |Wrote formal verification information.         |
| PA-7    |Info |    4 |Resetting power analysis results.              |
|         |     |      |All computed switching activities are removed. |
| SYNTH-5 |Info |    1 |Done mapping.                                  |
| SYNTH-7 |Info |    1 |Incrementally optimizing.                      |
------------------------------------------------------------------------
Info    : Done incrementally optimizing. [SYNTH-8]
        : Done incrementally optimizing 'GCD'.
      timing.setup.tns  timing.setup.wns  snapshot
UM:*                                      syn_opt
@genus:root: 16> write_hdl > syn.v
@genus:root: 17> 
@genus:root: 17> write_hdl > syn.v
@genus:root: 18> write_sdc > syn.sdc
Finished SDC export (command execution time mm:ss (real) = 00:00).
@genus:root: 19> report_area
============================================================
  Generated by:           Genus(TM) Synthesis Solution 19.11-s087_1
  Generated on:           Sep 19 2024  07:28:40 pm
  Module:                 GCD
  Technology libraries:   gpdk045bc 
                          gpdk045bc 
  Operating conditions:   slow (balanced_tree)
  Wireload mode:          enclosed
  Area mode:              timing library
============================================================

Instance Module  Cell Count  Cell Area  Net Area   Total Area  Wireload     
----------------------------------------------------------------------------
GCD                     521      0.000     0.000        0.000    <none> (D) 

 (D) = wireload is default in technology library
@genus:root: 20> report_area -power
Error   : An invalid option was specified. [TUI-204] [parse_options]
        : An option named '-power' could not be found.
        : Run 'command_name -help' to check all valid options. To correct the option and rerun the command.
  report_area: prints an area report 

Usage: report_area [-summary] [-depth <integer>] [-min_count <integer>]
           [-physical] [-hinst <object>] [-gates]
           [-normalize_with_gate <object>] [-show_leaf_cells]
           [-skip_modules_logical_hier_false] [-detail] [<object>+] [> file]

    [-summary]:
        area summary 
    [-depth <integer>]:
        number of levels of recursion 
    [-min_count <integer>]:
        minimum instance count per block 
    [-physical]:
        use LEF width and height values for area computation 
    [-hinst <object>]:
        print the leaf instances with area under the specified hierarchy 
    [-gates]:
        prints all the comb/seq/hier cells 
    [-normalize_with_gate <object>]:
        normalize area numbers with area of the specified cell 
    [-show_leaf_cells]:
        print leaf instances at design level in the report 
    [-skip_modules_logical_hier_false]:
        skips reporting the modules with attribute logical_hier false 
    [-detail]:
        shows detailed area report 
    [<object>+]:
        design to report on 
Failed on report area
@genus:root: 21> report_gates -power
Info    : Joules engine is used. [RPT-16]
        : Joules engine is being used for the command report_gates -power.
Info   : ACTP-0001 [ACTPInfo] Activity propagation started for stim#0
Info   : ACTP-0009 [ACTPInfo] Activity Propagation Progress Report :   0%   1%   2%   3%   4%   5%   6%   7%   8%   9%  10%  11%  12%  13%  14%  15%  16%  17%  18%  19%  20%  21%  22%  23%  24%  25%  26%  27%  28%  29%  30%  31%  32%  33%  34%  35%  36%  37%  38%  39%  40%  41%  42%  43%  44%  45%  46%  47%  48%  49%  50%  51%  52%  53%  54%  55%  56%  57%  58%  59%  60%  61%  62%  63%  64%  65%  66%  67%  68%  69%  70%  71%  72%  73%  74%  75%  76%  77%  78%  79%  80%  81%  82%  83%  84%  85%  86%  87%  88%  89%  90%  91%  92%  93%  94%  95%  96%  97%  98%  99% 100%
Info   : ACTP-0001 Activity propagation ended for stim#0
Info   : PWRA-0001 [PwrInfo] compute_power effective options 
       : -mode : vectorless
       : -skip_propagation : 1
       : -frequency_scaling_factor : 1.0
       : -use_clock_freq : stim
       : -compat : voltus
       : -stim :/stim#0
       : -fromGenus : 1
Info   : PWRA-0002 [PwrInfo] Skipping activity propagation due to -skip_ap
       : option....
Warning: PWRA-0302 [PwrWarn] Frequency scaling is not applicable for vectorless
       : flow. Ignoring frequency scaling.
Info   : PWRA-0002 Voltus compat mode is set for power analysis.
Warning: PWRA-0304 [PwrWarn] -stim option is not applicable with vectorless mode
       : of power analysis, ignored this option.
Info   : PWRA-0002 Started 'vectorless' power computation.
Info   : PWRA-0009 [PwrInfo] Power Computation Progress Report :   0%   1%   2%   3%   4%   5%   6%   7%   8%   9%  10%  11%  12%  13%  14%  15%  16%  17%  18%  19%  20%  21%  22%  23%  24%  25%  26%  27%  28%  29%  30%  31%  32%  33%  34%  35%  36%  37%  38%  39%  40%  41%  42%  43%  44%  45%  46%  47%  48%  49%  50%  51%  52%  53%  54%  55%  56%  57%  58%  59%  60%  61%  62%  63%  64%  65%  66%  67%  68%  69%  70%  71%  72%  73%  74%  75%  76%  77%  78%  79%  80%  81%  82%  83%  84%  85%  86%  87%  88%  89%  90%  91%  92%  93%  94%  95%  96%  97%  98%  99% 100%
Info   : PWRA-0002 Finished power computation.
Info   : PWRA-0007 [PwrInfo] Completed successfully.
       : Info=5, Warn=2, Error=0, Fatal=0
============================================================
  Generated by:           Genus(TM) Synthesis Solution 19.11-s087_1
  Generated on:           Sep 19 2024  07:28:59 pm
  Module:                 GCD
  Technology libraries:   gpdk045bc 
                          gpdk045bc 
  Operating conditions:   slow (balanced_tree)
  Wireload mode:          enclosed
  Area mode:              timing library
============================================================

                              Leakage   Internal  
   Gate    Instances  Area  Power (nW) Power (nW)    Library   
---------------------------------------------------------------
AND2X1            38  0.000      2.127    428.341    gpdk045bc 
AND2X2            29  0.000      2.588    409.669    gpdk045bc 
AND3X2             1  0.000      0.093      9.274    gpdk045bc 
AO21X1             4  0.000      0.299     82.922    gpdk045bc 
AO21X2            23  0.000      2.547    694.850    gpdk045bc 
DFFTRX4            5  0.000      2.669    604.962    gpdk045bc 
EDFFTRX2          32  0.000     14.664   3093.493    gpdk045bc 
EDFFTRX4          62  0.000     39.195  11234.611    gpdk045bc 
INVX1              2  0.000      0.066      5.289    gpdk045bc 
INVX2              1  0.000      0.066      0.000    gpdk045bc 
INVXL            161  0.000      3.081    455.841    gpdk045bc 
MXI3X1            64  0.000     12.026   4652.034    gpdk045bc 
NAND2BX4           2  0.000      0.601    101.678    gpdk045bc 
NOR2BX4            3  0.000      0.641    119.170    gpdk045bc 
OA21X2             3  0.000      0.311     68.047    gpdk045bc 
OAI211XL           4  0.000      0.259     60.680    gpdk045bc 
OAI221XL           2  0.000      0.145     42.786    gpdk045bc 
OAI2BB1X4         25  0.000      7.704   1571.997    gpdk045bc 
OAI31XL            1  0.000      0.054      9.104    gpdk045bc 
OAI32XL            1  0.000      0.062     11.755    gpdk045bc 
OR2X1              7  0.000      0.496     71.336    gpdk045bc 
OR2X2             38  0.000      3.956    520.440    gpdk045bc 
OR3X1              2  0.000      0.179     30.605    gpdk045bc 
OR4XL              8  0.000      0.756     28.294    gpdk045bc 
TLATX4             3  0.000      1.669    315.508    gpdk045bc 
---------------------------------------------------------------
total            521  0.000     96.257  24622.688              


*INFO : Above table contains 25 Lib-Cell having zero area.


                                        Leakage  Leakage  Internal  Internal 
     Type      Instances  Area Area % Power (nW) Power % Power (nW)  Power % 
-----------------------------------------------------------------------------
sequential           102 0.000    0.0     58.197    60.5  15248.574     61.9 
inverter             164 0.000    0.0      3.214     3.3    461.130      1.9 
logic                255 0.000    0.0     34.847    36.2   8912.983     36.2 
physical_cells         0 0.000    0.0      0.000     0.0      0.000      0.0 
-----------------------------------------------------------------------------
total                521 0.000    0.0     96.257   100.0  24622.688    100.0 

@genus:root: 22> report_timing
Warning : Timing problems have been detected in this design. [TIM-11]
        : The design is 'GCD'.
        : Use 'check_timing_intent' or 'report timing -lint' to report more information.
============================================================
  Generated by:           Genus(TM) Synthesis Solution 19.11-s087_1
  Generated on:           Sep 19 2024  07:29:13 pm
  Module:                 GCD
  Operating conditions:   slow (balanced_tree)
  Wireload mode:          enclosed
  Area mode:              timing library
============================================================

Some unconstrained paths have not been displayed.
Use -unconstrained or set the root attribute 'timing_report_unconstrained' to 'true' to see only these unconstrained paths.

@genus:root: 23> gui_show
Normal exit.